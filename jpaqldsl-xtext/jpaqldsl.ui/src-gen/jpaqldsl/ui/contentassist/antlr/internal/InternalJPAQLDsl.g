/*
* generated by Xtext
*/
grammar InternalJPAQLDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package jpaqldsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package jpaqldsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import jpaqldsl.services.JPAQLDslGrammarAccess;

}

@parser::members {
 
 	private JPAQLDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(JPAQLDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedQuery
entryRuleNamedQuery 
:
{ before(grammarAccess.getNamedQueryRule()); }
	 ruleNamedQuery
{ after(grammarAccess.getNamedQueryRule()); } 
	 EOF 
;

// Rule NamedQuery
ruleNamedQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedQueryAccess().getGroup()); }
(rule__NamedQuery__Group__0)
{ after(grammarAccess.getNamedQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMLDescriptor
entryRuleXMLDescriptor 
:
{ before(grammarAccess.getXMLDescriptorRule()); }
	 ruleXMLDescriptor
{ after(grammarAccess.getXMLDescriptorRule()); } 
	 EOF 
;

// Rule XMLDescriptor
ruleXMLDescriptor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXMLDescriptorAccess().getXmlVersion10EncodingUTF8Keyword()); }

	'<?xml version="1.0" encoding="UTF-8" ?>' 

{ after(grammarAccess.getXMLDescriptorAccess().getXmlVersion10EncodingUTF8Keyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQLStatement
entryRuleQLStatement 
:
{ before(grammarAccess.getQLStatementRule()); }
	 ruleQLStatement
{ after(grammarAccess.getQLStatementRule()); } 
	 EOF 
;

// Rule QLStatement
ruleQLStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQLStatementAccess().getSelectStatementsAssignment()); }
(rule__QLStatement__SelectStatementsAssignment)*
{ after(grammarAccess.getQLStatementAccess().getSelectStatementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectStatement
entryRuleSelectStatement 
:
{ before(grammarAccess.getSelectStatementRule()); }
	 ruleSelectStatement
{ after(grammarAccess.getSelectStatementRule()); } 
	 EOF 
;

// Rule SelectStatement
ruleSelectStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup()); }
(rule__SelectStatement__Group__0)
{ after(grammarAccess.getSelectStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFromClause
entryRuleFromClause 
:
{ before(grammarAccess.getFromClauseRule()); }
	 ruleFromClause
{ after(grammarAccess.getFromClauseRule()); } 
	 EOF 
;

// Rule FromClause
ruleFromClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFromClauseAccess().getGroup()); }
(rule__FromClause__Group__0)
{ after(grammarAccess.getFromClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentificationVariableDeclaration
entryRuleIdentificationVariableDeclaration 
:
{ before(grammarAccess.getIdentificationVariableDeclarationRule()); }
	 ruleIdentificationVariableDeclaration
{ after(grammarAccess.getIdentificationVariableDeclarationRule()); } 
	 EOF 
;

// Rule IdentificationVariableDeclaration
ruleIdentificationVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentificationVariableDeclarationAccess().getGroup()); }
(rule__IdentificationVariableDeclaration__Group__0)
{ after(grammarAccess.getIdentificationVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeVariableDeclaration
entryRuleRangeVariableDeclaration 
:
{ before(grammarAccess.getRangeVariableDeclarationRule()); }
	 ruleRangeVariableDeclaration
{ after(grammarAccess.getRangeVariableDeclarationRule()); } 
	 EOF 
;

// Rule RangeVariableDeclaration
ruleRangeVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeVariableDeclarationAccess().getGroup()); }
(rule__RangeVariableDeclaration__Group__0)
{ after(grammarAccess.getRangeVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoin
entryRuleJoin 
:
{ before(grammarAccess.getJoinRule()); }
	 ruleJoin
{ after(grammarAccess.getJoinRule()); } 
	 EOF 
;

// Rule Join
ruleJoin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinAccess().getGroup()); }
(rule__Join__Group__0)
{ after(grammarAccess.getJoinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFetchJoin
entryRuleFetchJoin 
:
{ before(grammarAccess.getFetchJoinRule()); }
	 ruleFetchJoin
{ after(grammarAccess.getFetchJoinRule()); } 
	 EOF 
;

// Rule FetchJoin
ruleFetchJoin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFetchJoinAccess().getGroup()); }
(rule__FetchJoin__Group__0)
{ after(grammarAccess.getFetchJoinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoinSpec
entryRuleJoinSpec 
:
{ before(grammarAccess.getJoinSpecRule()); }
	 ruleJoinSpec
{ after(grammarAccess.getJoinSpecRule()); } 
	 EOF 
;

// Rule JoinSpec
ruleJoinSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinSpecAccess().getGroup()); }
(rule__JoinSpec__Group__0)
{ after(grammarAccess.getJoinSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJPAPathExpression
entryRuleJPAPathExpression 
:
{ before(grammarAccess.getJPAPathExpressionRule()); }
	 ruleJPAPathExpression
{ after(grammarAccess.getJPAPathExpressionRule()); } 
	 EOF 
;

// Rule JPAPathExpression
ruleJPAPathExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJPAPathExpressionAccess().getGroup()); }
(rule__JPAPathExpression__Group__0)
{ after(grammarAccess.getJPAPathExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJpaAttribute
entryRuleJpaAttribute 
:
{ before(grammarAccess.getJpaAttributeRule()); }
	 ruleJpaAttribute
{ after(grammarAccess.getJpaAttributeRule()); } 
	 EOF 
;

// Rule JpaAttribute
ruleJpaAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJpaAttributeAccess().getAttributeAssignment()); }
(rule__JpaAttribute__AttributeAssignment)
{ after(grammarAccess.getJpaAttributeAccess().getAttributeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionMemberDeclaration
entryRuleCollectionMemberDeclaration 
:
{ before(grammarAccess.getCollectionMemberDeclarationRule()); }
	 ruleCollectionMemberDeclaration
{ after(grammarAccess.getCollectionMemberDeclarationRule()); } 
	 EOF 
;

// Rule CollectionMemberDeclaration
ruleCollectionMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionMemberDeclarationAccess().getGroup()); }
(rule__CollectionMemberDeclaration__Group__0)
{ after(grammarAccess.getCollectionMemberDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectClause
entryRuleSelectClause 
:
{ before(grammarAccess.getSelectClauseRule()); }
	 ruleSelectClause
{ after(grammarAccess.getSelectClauseRule()); } 
	 EOF 
;

// Rule SelectClause
ruleSelectClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectClauseAccess().getGroup()); }
(rule__SelectClause__Group__0)
{ after(grammarAccess.getSelectClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectExpression
entryRuleSelectExpression 
:
{ before(grammarAccess.getSelectExpressionRule()); }
	 ruleSelectExpression
{ after(grammarAccess.getSelectExpressionRule()); } 
	 EOF 
;

// Rule SelectExpression
ruleSelectExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectExpressionAccess().getAlternatives()); }
(rule__SelectExpression__Alternatives)
{ after(grammarAccess.getSelectExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorExpression
entryRuleConstructorExpression 
:
{ before(grammarAccess.getConstructorExpressionRule()); }
	 ruleConstructorExpression
{ after(grammarAccess.getConstructorExpressionRule()); } 
	 EOF 
;

// Rule ConstructorExpression
ruleConstructorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorExpressionAccess().getGroup()); }
(rule__ConstructorExpression__Group__0)
{ after(grammarAccess.getConstructorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorItem
entryRuleConstructorItem 
:
{ before(grammarAccess.getConstructorItemRule()); }
	 ruleConstructorItem
{ after(grammarAccess.getConstructorItemRule()); } 
	 EOF 
;

// Rule ConstructorItem
ruleConstructorItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorItemAccess().getAlternatives()); }
(rule__ConstructorItem__Alternatives)
{ after(grammarAccess.getConstructorItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAggregateExpression
entryRuleAggregateExpression 
:
{ before(grammarAccess.getAggregateExpressionRule()); }
	 ruleAggregateExpression
{ after(grammarAccess.getAggregateExpressionRule()); } 
	 EOF 
;

// Rule AggregateExpression
ruleAggregateExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAggregateExpressionAccess().getGroup()); }
(rule__AggregateExpression__Group__0)
{ after(grammarAccess.getAggregateExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentificationVariable
entryRuleIdentificationVariable 
:
{ before(grammarAccess.getIdentificationVariableRule()); }
	 ruleIdentificationVariable
{ after(grammarAccess.getIdentificationVariableRule()); } 
	 EOF 
;

// Rule IdentificationVariable
ruleIdentificationVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentificationVariableAccess().getNameAssignment()); }
(rule__IdentificationVariable__NameAssignment)
{ after(grammarAccess.getIdentificationVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorName
entryRuleConstructorName 
:
{ before(grammarAccess.getConstructorNameRule()); }
	 ruleConstructorName
{ after(grammarAccess.getConstructorNameRule()); } 
	 EOF 
;

// Rule ConstructorName
ruleConstructorName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorNameAccess().getNameAssignment()); }
(rule__ConstructorName__NameAssignment)
{ after(grammarAccess.getConstructorNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhereClause
entryRuleWhereClause 
:
{ before(grammarAccess.getWhereClauseRule()); }
	 ruleWhereClause
{ after(grammarAccess.getWhereClauseRule()); } 
	 EOF 
;

// Rule WhereClause
ruleWhereClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhereClauseAccess().getGroup()); }
(rule__WhereClause__Group__0)
{ after(grammarAccess.getWhereClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression 
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
(rule__ConditionalExpression__Group__0)
{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm 
:
{ before(grammarAccess.getConditionalTermRule()); }
	 ruleConditionalTerm
{ after(grammarAccess.getConditionalTermRule()); } 
	 EOF 
;

// Rule ConditionalTerm
ruleConditionalTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalTermAccess().getGroup()); }
(rule__ConditionalTerm__Group__0)
{ after(grammarAccess.getConditionalTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalFactor
entryRuleConditionalFactor 
:
{ before(grammarAccess.getConditionalFactorRule()); }
	 ruleConditionalFactor
{ after(grammarAccess.getConditionalFactorRule()); } 
	 EOF 
;

// Rule ConditionalFactor
ruleConditionalFactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalFactorAccess().getAlternatives()); }
(rule__ConditionalFactor__Alternatives)
{ after(grammarAccess.getConditionalFactorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleConditionalExpression
entryRuleSimpleConditionalExpression 
:
{ before(grammarAccess.getSimpleConditionalExpressionRule()); }
	 ruleSimpleConditionalExpression
{ after(grammarAccess.getSimpleConditionalExpressionRule()); } 
	 EOF 
;

// Rule SimpleConditionalExpression
ruleSimpleConditionalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getAlternatives()); }
(rule__SimpleConditionalExpression__Alternatives)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBetweenExpression
entryRuleBetweenExpression 
:
{ before(grammarAccess.getBetweenExpressionRule()); }
	 ruleBetweenExpression
{ after(grammarAccess.getBetweenExpressionRule()); } 
	 EOF 
;

// Rule BetweenExpression
ruleBetweenExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBetweenExpressionAccess().getAlternatives()); }
(rule__BetweenExpression__Alternatives)
{ after(grammarAccess.getBetweenExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInExpression
entryRuleInExpression 
:
{ before(grammarAccess.getInExpressionRule()); }
	 ruleInExpression
{ after(grammarAccess.getInExpressionRule()); } 
	 EOF 
;

// Rule InExpression
ruleInExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInExpressionAccess().getAlternatives()); }
(rule__InExpression__Alternatives)
{ after(grammarAccess.getInExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInItem
entryRuleInItem 
:
{ before(grammarAccess.getInItemRule()); }
	 ruleInItem
{ after(grammarAccess.getInItemRule()); } 
	 EOF 
;

// Rule InItem
ruleInItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInItemAccess().getAlternatives()); }
(rule__InItem__Alternatives)
{ after(grammarAccess.getInItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLikeExpression
entryRuleLikeExpression 
:
{ before(grammarAccess.getLikeExpressionRule()); }
	 ruleLikeExpression
{ after(grammarAccess.getLikeExpressionRule()); } 
	 EOF 
;

// Rule LikeExpression
ruleLikeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLikeExpressionAccess().getGroup()); }
(rule__LikeExpression__Group__0)
{ after(grammarAccess.getLikeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullComparisonExpression
entryRuleNullComparisonExpression 
:
{ before(grammarAccess.getNullComparisonExpressionRule()); }
	 ruleNullComparisonExpression
{ after(grammarAccess.getNullComparisonExpressionRule()); } 
	 EOF 
;

// Rule NullComparisonExpression
ruleNullComparisonExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getAlternatives()); }
(rule__NullComparisonExpression__Alternatives)
{ after(grammarAccess.getNullComparisonExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmptyCollectionComparisonExpression
entryRuleEmptyCollectionComparisonExpression 
:
{ before(grammarAccess.getEmptyCollectionComparisonExpressionRule()); }
	 ruleEmptyCollectionComparisonExpression
{ after(grammarAccess.getEmptyCollectionComparisonExpressionRule()); } 
	 EOF 
;

// Rule EmptyCollectionComparisonExpression
ruleEmptyCollectionComparisonExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getGroup()); }
(rule__EmptyCollectionComparisonExpression__Group__0)
{ after(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionMemberExpression
entryRuleCollectionMemberExpression 
:
{ before(grammarAccess.getCollectionMemberExpressionRule()); }
	 ruleCollectionMemberExpression
{ after(grammarAccess.getCollectionMemberExpressionRule()); } 
	 EOF 
;

// Rule CollectionMemberExpression
ruleCollectionMemberExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getGroup()); }
(rule__CollectionMemberExpression__Group__0)
{ after(grammarAccess.getCollectionMemberExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExistsExpression
entryRuleExistsExpression 
:
{ before(grammarAccess.getExistsExpressionRule()); }
	 ruleExistsExpression
{ after(grammarAccess.getExistsExpressionRule()); } 
	 EOF 
;

// Rule ExistsExpression
ruleExistsExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistsExpressionAccess().getGroup()); }
(rule__ExistsExpression__Group__0)
{ after(grammarAccess.getExistsExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAllOrAnyExpression
entryRuleAllOrAnyExpression 
:
{ before(grammarAccess.getAllOrAnyExpressionRule()); }
	 ruleAllOrAnyExpression
{ after(grammarAccess.getAllOrAnyExpressionRule()); } 
	 EOF 
;

// Rule AllOrAnyExpression
ruleAllOrAnyExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getGroup()); }
(rule__AllOrAnyExpression__Group__0)
{ after(grammarAccess.getAllOrAnyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression 
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives()); }
(rule__ComparisonExpression__Alternatives)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparisonOperator
entryRuleComparisonOperator 
:
{ before(grammarAccess.getComparisonOperatorRule()); }
	 ruleComparisonOperator
{ after(grammarAccess.getComparisonOperatorRule()); } 
	 EOF 
;

// Rule ComparisonOperator
ruleComparisonOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
(rule__ComparisonOperator__Alternatives)
{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression 
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getAlternatives()); }
(rule__ArithmeticExpression__Alternatives)
{ after(grammarAccess.getArithmeticExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleArithmeticExpression
entryRuleSimpleArithmeticExpression 
:
{ before(grammarAccess.getSimpleArithmeticExpressionRule()); }
	 ruleSimpleArithmeticExpression
{ after(grammarAccess.getSimpleArithmeticExpressionRule()); } 
	 EOF 
;

// Rule SimpleArithmeticExpression
ruleSimpleArithmeticExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getAlternatives()); }
(rule__SimpleArithmeticExpression__Alternatives)
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmeticTerm
entryRuleArithmeticTerm 
:
{ before(grammarAccess.getArithmeticTermRule()); }
	 ruleArithmeticTerm
{ after(grammarAccess.getArithmeticTermRule()); } 
	 EOF 
;

// Rule ArithmeticTerm
ruleArithmeticTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticTermAccess().getAlternatives()); }
(rule__ArithmeticTerm__Alternatives)
{ after(grammarAccess.getArithmeticTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmeticFactor
entryRuleArithmeticFactor 
:
{ before(grammarAccess.getArithmeticFactorRule()); }
	 ruleArithmeticFactor
{ after(grammarAccess.getArithmeticFactorRule()); } 
	 EOF 
;

// Rule ArithmeticFactor
ruleArithmeticFactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticFactorAccess().getGroup()); }
(rule__ArithmeticFactor__Group__0)
{ after(grammarAccess.getArithmeticFactorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmeticPrimary
entryRuleArithmeticPrimary 
:
{ before(grammarAccess.getArithmeticPrimaryRule()); }
	 ruleArithmeticPrimary
{ after(grammarAccess.getArithmeticPrimaryRule()); } 
	 EOF 
;

// Rule ArithmeticPrimary
ruleArithmeticPrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getAlternatives()); }
(rule__ArithmeticPrimary__Alternatives)
{ after(grammarAccess.getArithmeticPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringExpression
entryRuleStringExpression 
:
{ before(grammarAccess.getStringExpressionRule()); }
	 ruleStringExpression
{ after(grammarAccess.getStringExpressionRule()); } 
	 EOF 
;

// Rule StringExpression
ruleStringExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringExpressionAccess().getAlternatives()); }
(rule__StringExpression__Alternatives)
{ after(grammarAccess.getStringExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringPrimary
entryRuleStringPrimary 
:
{ before(grammarAccess.getStringPrimaryRule()); }
	 ruleStringPrimary
{ after(grammarAccess.getStringPrimaryRule()); } 
	 EOF 
;

// Rule StringPrimary
ruleStringPrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringPrimaryAccess().getAlternatives()); }
(rule__StringPrimary__Alternatives)
{ after(grammarAccess.getStringPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateTimeExpression
entryRuleDateTimeExpression 
:
{ before(grammarAccess.getDateTimeExpressionRule()); }
	 ruleDateTimeExpression
{ after(grammarAccess.getDateTimeExpressionRule()); } 
	 EOF 
;

// Rule DateTimeExpression
ruleDateTimeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateTimeExpressionAccess().getAlternatives()); }
(rule__DateTimeExpression__Alternatives)
{ after(grammarAccess.getDateTimeExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateTimePrimary
entryRuleDateTimePrimary 
:
{ before(grammarAccess.getDateTimePrimaryRule()); }
	 ruleDateTimePrimary
{ after(grammarAccess.getDateTimePrimaryRule()); } 
	 EOF 
;

// Rule DateTimePrimary
ruleDateTimePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateTimePrimaryAccess().getAlternatives()); }
(rule__DateTimePrimary__Alternatives)
{ after(grammarAccess.getDateTimePrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAlternatives()); }
(rule__BooleanExpression__Alternatives)
{ after(grammarAccess.getBooleanExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanPrimary
entryRuleBooleanPrimary 
:
{ before(grammarAccess.getBooleanPrimaryRule()); }
	 ruleBooleanPrimary
{ after(grammarAccess.getBooleanPrimaryRule()); } 
	 EOF 
;

// Rule BooleanPrimary
ruleBooleanPrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanPrimaryAccess().getAlternatives()); }
(rule__BooleanPrimary__Alternatives)
{ after(grammarAccess.getBooleanPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumExpression
entryRuleEnumExpression 
:
{ before(grammarAccess.getEnumExpressionRule()); }
	 ruleEnumExpression
{ after(grammarAccess.getEnumExpressionRule()); } 
	 EOF 
;

// Rule EnumExpression
ruleEnumExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumExpressionAccess().getAlternatives()); }
(rule__EnumExpression__Alternatives)
{ after(grammarAccess.getEnumExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumPrimary
entryRuleEnumPrimary 
:
{ before(grammarAccess.getEnumPrimaryRule()); }
	 ruleEnumPrimary
{ after(grammarAccess.getEnumPrimaryRule()); } 
	 EOF 
;

// Rule EnumPrimary
ruleEnumPrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumPrimaryAccess().getAlternatives()); }
(rule__EnumPrimary__Alternatives)
{ after(grammarAccess.getEnumPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityExpression
entryRuleEntityExpression 
:
{ before(grammarAccess.getEntityExpressionRule()); }
	 ruleEntityExpression
{ after(grammarAccess.getEntityExpressionRule()); } 
	 EOF 
;

// Rule EntityExpression
ruleEntityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityExpressionAccess().getAlternatives()); }
(rule__EntityExpression__Alternatives)
{ after(grammarAccess.getEntityExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleEntityExpression
entryRuleSimpleEntityExpression 
:
{ before(grammarAccess.getSimpleEntityExpressionRule()); }
	 ruleSimpleEntityExpression
{ after(grammarAccess.getSimpleEntityExpressionRule()); } 
	 EOF 
;

// Rule SimpleEntityExpression
ruleSimpleEntityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleEntityExpressionAccess().getAlternatives()); }
(rule__SimpleEntityExpression__Alternatives)
{ after(grammarAccess.getSimpleEntityExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionsReturningNumerics
entryRuleFunctionsReturningNumerics 
:
{ before(grammarAccess.getFunctionsReturningNumericsRule()); }
	 ruleFunctionsReturningNumerics
{ after(grammarAccess.getFunctionsReturningNumericsRule()); } 
	 EOF 
;

// Rule FunctionsReturningNumerics
ruleFunctionsReturningNumerics
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getAlternatives()); }
(rule__FunctionsReturningNumerics__Alternatives)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionsReturningDateTime
entryRuleFunctionsReturningDateTime 
:
{ before(grammarAccess.getFunctionsReturningDateTimeRule()); }
	 ruleFunctionsReturningDateTime
{ after(grammarAccess.getFunctionsReturningDateTimeRule()); } 
	 EOF 
;

// Rule FunctionsReturningDateTime
ruleFunctionsReturningDateTime
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionsReturningDateTimeAccess().getAlternatives()); }
(rule__FunctionsReturningDateTime__Alternatives)
{ after(grammarAccess.getFunctionsReturningDateTimeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionsReturningStrings
entryRuleFunctionsReturningStrings 
:
{ before(grammarAccess.getFunctionsReturningStringsRule()); }
	 ruleFunctionsReturningStrings
{ after(grammarAccess.getFunctionsReturningStringsRule()); } 
	 EOF 
;

// Rule FunctionsReturningStrings
ruleFunctionsReturningStrings
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getAlternatives()); }
(rule__FunctionsReturningStrings__Alternatives)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrimSpecification
entryRuleTrimSpecification 
:
{ before(grammarAccess.getTrimSpecificationRule()); }
	 ruleTrimSpecification
{ after(grammarAccess.getTrimSpecificationRule()); } 
	 EOF 
;

// Rule TrimSpecification
ruleTrimSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrimSpecificationAccess().getAlternatives()); }
(rule__TrimSpecification__Alternatives)
{ after(grammarAccess.getTrimSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubQuery
entryRuleSubQuery 
:
{ before(grammarAccess.getSubQueryRule()); }
	 ruleSubQuery
{ after(grammarAccess.getSubQueryRule()); } 
	 EOF 
;

// Rule SubQuery
ruleSubQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubQueryAccess().getGroup()); }
(rule__SubQuery__Group__0)
{ after(grammarAccess.getSubQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubqueryFromClause
entryRuleSubqueryFromClause 
:
{ before(grammarAccess.getSubqueryFromClauseRule()); }
	 ruleSubqueryFromClause
{ after(grammarAccess.getSubqueryFromClauseRule()); } 
	 EOF 
;

// Rule SubqueryFromClause
ruleSubqueryFromClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getGroup()); }
(rule__SubqueryFromClause__Group__0)
{ after(grammarAccess.getSubqueryFromClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubselectIdentificationVariableDeclaration
entryRuleSubselectIdentificationVariableDeclaration 
:
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationRule()); }
	 ruleSubselectIdentificationVariableDeclaration
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationRule()); } 
	 EOF 
;

// Rule SubselectIdentificationVariableDeclaration
ruleSubselectIdentificationVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getAlternatives()); }
(rule__SubselectIdentificationVariableDeclaration__Alternatives)
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleSelectClause
entryRuleSimpleSelectClause 
:
{ before(grammarAccess.getSimpleSelectClauseRule()); }
	 ruleSimpleSelectClause
{ after(grammarAccess.getSimpleSelectClauseRule()); } 
	 EOF 
;

// Rule SimpleSelectClause
ruleSimpleSelectClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleSelectClauseAccess().getGroup()); }
(rule__SimpleSelectClause__Group__0)
{ after(grammarAccess.getSimpleSelectClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleSelectExpression
entryRuleSimpleSelectExpression 
:
{ before(grammarAccess.getSimpleSelectExpressionRule()); }
	 ruleSimpleSelectExpression
{ after(grammarAccess.getSimpleSelectExpressionRule()); } 
	 EOF 
;

// Rule SimpleSelectExpression
ruleSimpleSelectExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleSelectExpressionAccess().getAlternatives()); }
(rule__SimpleSelectExpression__Alternatives)
{ after(grammarAccess.getSimpleSelectExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputParameter
entryRuleInputParameter 
:
{ before(grammarAccess.getInputParameterRule()); }
	 ruleInputParameter
{ after(grammarAccess.getInputParameterRule()); } 
	 EOF 
;

// Rule InputParameter
ruleInputParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputParameterAccess().getGroup()); }
(rule__InputParameter__Group__0)
{ after(grammarAccess.getInputParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapeCharacter
entryRuleEscapeCharacter 
:
{ before(grammarAccess.getEscapeCharacterRule()); }
	 ruleEscapeCharacter
{ after(grammarAccess.getEscapeCharacterRule()); } 
	 EOF 
;

// Rule EscapeCharacter
ruleEscapeCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEscapeCharacterAccess().getNameAssignment()); }
(rule__EscapeCharacter__NameAssignment)
{ after(grammarAccess.getEscapeCharacterAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getNameAssignment()); }
(rule__Literal__NameAssignment)
{ after(grammarAccess.getLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePatternValue
entryRulePatternValue 
:
{ before(grammarAccess.getPatternValueRule()); }
	 rulePatternValue
{ after(grammarAccess.getPatternValueRule()); } 
	 EOF 
;

// Rule PatternValue
rulePatternValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternValueAccess().getNameAssignment()); }
(rule__PatternValue__NameAssignment)
{ after(grammarAccess.getPatternValueAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral 
:
{ before(grammarAccess.getNumericLiteralRule()); }
	 ruleNumericLiteral
{ after(grammarAccess.getNumericLiteralRule()); } 
	 EOF 
;

// Rule NumericLiteral
ruleNumericLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericLiteralAccess().getLiteralAssignment()); }
(rule__NumericLiteral__LiteralAssignment)
{ after(grammarAccess.getNumericLiteralAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
(rule__BooleanLiteral__Alternatives)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral 
:
{ before(grammarAccess.getEnumLiteralRule()); }
	 ruleEnumLiteral
{ after(grammarAccess.getEnumLiteralRule()); } 
	 EOF 
;

// Rule EnumLiteral
ruleEnumLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumLiteralAccess().getNameAssignment()); }
(rule__EnumLiteral__NameAssignment)
{ after(grammarAccess.getEnumLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrimCharacter
entryRuleTrimCharacter 
:
{ before(grammarAccess.getTrimCharacterRule()); }
	 ruleTrimCharacter
{ after(grammarAccess.getTrimCharacterRule()); } 
	 EOF 
;

// Rule TrimCharacter
ruleTrimCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrimCharacterAccess().getNameAssignment()); }
(rule__TrimCharacter__NameAssignment)
{ after(grammarAccess.getTrimCharacterAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportNameSpace
entryRuleImportNameSpace 
:
{ before(grammarAccess.getImportNameSpaceRule()); }
	 ruleImportNameSpace
{ after(grammarAccess.getImportNameSpaceRule()); } 
	 EOF 
;

// Rule ImportNameSpace
ruleImportNameSpace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportNameSpaceAccess().getGroup()); }
(rule__ImportNameSpace__Group__0)
{ after(grammarAccess.getImportNameSpaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression
entryRuleXExpression 
:
{ before(grammarAccess.getXExpressionRule()); }
	 ruleXExpression
{ after(grammarAccess.getXExpressionRule()); } 
	 EOF 
;

// Rule XExpression
ruleXExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
	ruleXAssignment
{ after(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAssignment
entryRuleXAssignment 
:
{ before(grammarAccess.getXAssignmentRule()); }
	 ruleXAssignment
{ after(grammarAccess.getXAssignmentRule()); } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAssignmentAccess().getAlternatives()); }
(rule__XAssignment__Alternatives)
{ after(grammarAccess.getXAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign 
:
{ before(grammarAccess.getOpSingleAssignRule()); }
	 ruleOpSingleAssign
{ after(grammarAccess.getOpSingleAssignRule()); } 
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }

	'=' 

{ after(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign 
:
{ before(grammarAccess.getOpMultiAssignRule()); }
	 ruleOpMultiAssign
{ after(grammarAccess.getOpMultiAssignRule()); } 
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
(rule__OpMultiAssign__Alternatives)
{ after(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOrExpression
entryRuleXOrExpression 
:
{ before(grammarAccess.getXOrExpressionRule()); }
	 ruleXOrExpression
{ after(grammarAccess.getXOrExpressionRule()); } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup()); }
(rule__XOrExpression__Group__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOr
entryRuleOpOr 
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }

	'||' 

{ after(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAndExpression
entryRuleXAndExpression 
:
{ before(grammarAccess.getXAndExpressionRule()); }
	 ruleXAndExpression
{ after(grammarAccess.getXAndExpressionRule()); } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup()); }
(rule__XAndExpression__Group__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAnd
entryRuleOpAnd 
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }

	'&&' 

{ after(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression 
:
{ before(grammarAccess.getXEqualityExpressionRule()); }
	 ruleXEqualityExpression
{ after(grammarAccess.getXEqualityExpressionRule()); } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
(rule__XEqualityExpression__Group__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpEquality
entryRuleOpEquality 
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression 
:
{ before(grammarAccess.getXRelationalExpressionRule()); }
	 ruleXRelationalExpression
{ after(grammarAccess.getXRelationalExpressionRule()); } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
(rule__XRelationalExpression__Group__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpCompare
entryRuleOpCompare 
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
(rule__OpCompare__Alternatives)
{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression 
:
{ before(grammarAccess.getXOtherOperatorExpressionRule()); }
	 ruleXOtherOperatorExpression
{ after(grammarAccess.getXOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
(rule__XOtherOperatorExpression__Group__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOther
entryRuleOpOther 
:
{ before(grammarAccess.getOpOtherRule()); }
	 ruleOpOther
{ after(grammarAccess.getOpOtherRule()); } 
	 EOF 
;

// Rule OpOther
ruleOpOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives()); }
(rule__OpOther__Alternatives)
{ after(grammarAccess.getOpOtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression 
:
{ before(grammarAccess.getXAdditiveExpressionRule()); }
	 ruleXAdditiveExpression
{ after(grammarAccess.getXAdditiveExpressionRule()); } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
(rule__XAdditiveExpression__Group__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdd
entryRuleOpAdd 
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
(rule__OpAdd__Alternatives)
{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression 
:
{ before(grammarAccess.getXMultiplicativeExpressionRule()); }
	 ruleXMultiplicativeExpression
{ after(grammarAccess.getXMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
(rule__XMultiplicativeExpression__Group__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMulti
entryRuleOpMulti 
:
{ before(grammarAccess.getOpMultiRule()); }
	 ruleOpMulti
{ after(grammarAccess.getOpMultiRule()); } 
	 EOF 
;

// Rule OpMulti
ruleOpMulti
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAccess().getAlternatives()); }
(rule__OpMulti__Alternatives)
{ after(grammarAccess.getOpMultiAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation 
:
{ before(grammarAccess.getXUnaryOperationRule()); }
	 ruleXUnaryOperation
{ after(grammarAccess.getXUnaryOperationRule()); } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
(rule__XUnaryOperation__Alternatives)
{ after(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpUnary
entryRuleOpUnary 
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
(rule__OpUnary__Alternatives)
{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression 
:
{ before(grammarAccess.getXCastedExpressionRule()); }
	 ruleXCastedExpression
{ after(grammarAccess.getXCastedExpressionRule()); } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup()); }
(rule__XCastedExpression__Group__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall 
:
{ before(grammarAccess.getXMemberFeatureCallRule()); }
	 ruleXMemberFeatureCall
{ after(grammarAccess.getXMemberFeatureCallRule()); } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup()); }
(rule__XMemberFeatureCall__Group__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression 
:
{ before(grammarAccess.getXPrimaryExpressionRule()); }
	 ruleXPrimaryExpression
{ after(grammarAccess.getXPrimaryExpressionRule()); } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
(rule__XPrimaryExpression__Alternatives)
{ after(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXLiteral
entryRuleXLiteral 
:
{ before(grammarAccess.getXLiteralRule()); }
	 ruleXLiteral
{ after(grammarAccess.getXLiteralRule()); } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXLiteralAccess().getAlternatives()); }
(rule__XLiteral__Alternatives)
{ after(grammarAccess.getXLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral 
:
{ before(grammarAccess.getXCollectionLiteralRule()); }
	 ruleXCollectionLiteral
{ after(grammarAccess.getXCollectionLiteralRule()); } 
	 EOF 
;

// Rule XCollectionLiteral
ruleXCollectionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
(rule__XCollectionLiteral__Alternatives)
{ after(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral 
:
{ before(grammarAccess.getXSetLiteralRule()); }
	 ruleXSetLiteral
{ after(grammarAccess.getXSetLiteralRule()); } 
	 EOF 
;

// Rule XSetLiteral
ruleXSetLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup()); }
(rule__XSetLiteral__Group__0)
{ after(grammarAccess.getXSetLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXListLiteral
entryRuleXListLiteral 
:
{ before(grammarAccess.getXListLiteralRule()); }
	 ruleXListLiteral
{ after(grammarAccess.getXListLiteralRule()); } 
	 EOF 
;

// Rule XListLiteral
ruleXListLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup()); }
(rule__XListLiteral__Group__0)
{ after(grammarAccess.getXListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXClosure
entryRuleXClosure 
:
{ before(grammarAccess.getXClosureRule()); }
	 ruleXClosure
{ after(grammarAccess.getXClosureRule()); } 
	 EOF 
;

// Rule XClosure
ruleXClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXClosureAccess().getGroup()); }
(rule__XClosure__Group__0)
{ after(grammarAccess.getXClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure 
:
{ before(grammarAccess.getXExpressionInClosureRule()); }
	 ruleXExpressionInClosure
{ after(grammarAccess.getXExpressionInClosureRule()); } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getGroup()); }
(rule__XExpressionInClosure__Group__0)
{ after(grammarAccess.getXExpressionInClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXShortClosure
entryRuleXShortClosure 
:
{ before(grammarAccess.getXShortClosureRule()); }
	 ruleXShortClosure
{ after(grammarAccess.getXShortClosureRule()); } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup()); }
(rule__XShortClosure__Group__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression 
:
{ before(grammarAccess.getXParenthesizedExpressionRule()); }
	 ruleXParenthesizedExpression
{ after(grammarAccess.getXParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
(rule__XParenthesizedExpression__Group__0)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIfExpression
entryRuleXIfExpression 
:
{ before(grammarAccess.getXIfExpressionRule()); }
	 ruleXIfExpression
{ after(grammarAccess.getXIfExpressionRule()); } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup()); }
(rule__XIfExpression__Group__0)
{ after(grammarAccess.getXIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression 
:
{ before(grammarAccess.getXSwitchExpressionRule()); }
	 ruleXSwitchExpression
{ after(grammarAccess.getXSwitchExpressionRule()); } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
(rule__XSwitchExpression__Group__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCasePart
entryRuleXCasePart 
:
{ before(grammarAccess.getXCasePartRule()); }
	 ruleXCasePart
{ after(grammarAccess.getXCasePartRule()); } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCasePartAccess().getGroup()); }
(rule__XCasePart__Group__0)
{ after(grammarAccess.getXCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression 
:
{ before(grammarAccess.getXForLoopExpressionRule()); }
	 ruleXForLoopExpression
{ after(grammarAccess.getXForLoopExpressionRule()); } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getGroup()); }
(rule__XForLoopExpression__Group__0)
{ after(grammarAccess.getXForLoopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression 
:
{ before(grammarAccess.getXWhileExpressionRule()); }
	 ruleXWhileExpression
{ after(grammarAccess.getXWhileExpressionRule()); } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXWhileExpressionAccess().getGroup()); }
(rule__XWhileExpression__Group__0)
{ after(grammarAccess.getXWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression 
:
{ before(grammarAccess.getXDoWhileExpressionRule()); }
	 ruleXDoWhileExpression
{ after(grammarAccess.getXDoWhileExpressionRule()); } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getGroup()); }
(rule__XDoWhileExpression__Group__0)
{ after(grammarAccess.getXDoWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression 
:
{ before(grammarAccess.getXBlockExpressionRule()); }
	 ruleXBlockExpression
{ after(grammarAccess.getXBlockExpressionRule()); } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup()); }
(rule__XBlockExpression__Group__0)
{ after(grammarAccess.getXBlockExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock 
:
{ before(grammarAccess.getXExpressionInsideBlockRule()); }
	 ruleXExpressionInsideBlock
{ after(grammarAccess.getXExpressionInsideBlockRule()); } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives()); }
(rule__XExpressionInsideBlock__Alternatives)
{ after(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration 
:
{ before(grammarAccess.getXVariableDeclarationRule()); }
	 ruleXVariableDeclaration
{ after(grammarAccess.getXVariableDeclarationRule()); } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
(rule__XVariableDeclaration__Group__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter 
:
{ before(grammarAccess.getJvmFormalParameterRule()); }
	 ruleJvmFormalParameter
{ after(grammarAccess.getJvmFormalParameterRule()); } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
(rule__JvmFormalParameter__Group__0)
{ after(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter 
:
{ before(grammarAccess.getFullJvmFormalParameterRule()); }
	 ruleFullJvmFormalParameter
{ after(grammarAccess.getFullJvmFormalParameterRule()); } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
(rule__FullJvmFormalParameter__Group__0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall 
:
{ before(grammarAccess.getXFeatureCallRule()); }
	 ruleXFeatureCall
{ after(grammarAccess.getXFeatureCallRule()); } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup()); }
(rule__XFeatureCall__Group__0)
{ after(grammarAccess.getXFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID 
:
{ before(grammarAccess.getFeatureCallIDRule()); }
	 ruleFeatureCallID
{ after(grammarAccess.getFeatureCallIDRule()); } 
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallIDAccess().getAlternatives()); }
(rule__FeatureCallID__Alternatives)
{ after(grammarAccess.getFeatureCallIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper 
:
{ before(grammarAccess.getIdOrSuperRule()); }
	 ruleIdOrSuper
{ after(grammarAccess.getIdOrSuperRule()); } 
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
(rule__IdOrSuper__Alternatives)
{ after(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticQualifier
entryRuleStaticQualifier 
:
{ before(grammarAccess.getStaticQualifierRule()); }
	 ruleStaticQualifier
{ after(grammarAccess.getStaticQualifierRule()); } 
	 EOF 
;

// Rule StaticQualifier
ruleStaticQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getStaticQualifierAccess().getGroup()); }
(rule__StaticQualifier__Group__0)
{ after(grammarAccess.getStaticQualifierAccess().getGroup()); }
)
(
{ before(grammarAccess.getStaticQualifierAccess().getGroup()); }
(rule__StaticQualifier__Group__0)*
{ after(grammarAccess.getStaticQualifierAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall 
:
{ before(grammarAccess.getXConstructorCallRule()); }
	 ruleXConstructorCall
{ after(grammarAccess.getXConstructorCallRule()); } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup()); }
(rule__XConstructorCall__Group__0)
{ after(grammarAccess.getXConstructorCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral 
:
{ before(grammarAccess.getXBooleanLiteralRule()); }
	 ruleXBooleanLiteral
{ after(grammarAccess.getXBooleanLiteralRule()); } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
(rule__XBooleanLiteral__Group__0)
{ after(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral 
:
{ before(grammarAccess.getXNullLiteralRule()); }
	 ruleXNullLiteral
{ after(grammarAccess.getXNullLiteralRule()); } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXNullLiteralAccess().getGroup()); }
(rule__XNullLiteral__Group__0)
{ after(grammarAccess.getXNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral 
:
{ before(grammarAccess.getXNumberLiteralRule()); }
	 ruleXNumberLiteral
{ after(grammarAccess.getXNumberLiteralRule()); } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXNumberLiteralAccess().getGroup()); }
(rule__XNumberLiteral__Group__0)
{ after(grammarAccess.getXNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral 
:
{ before(grammarAccess.getXStringLiteralRule()); }
	 ruleXStringLiteral
{ after(grammarAccess.getXStringLiteralRule()); } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXStringLiteralAccess().getGroup()); }
(rule__XStringLiteral__Group__0)
{ after(grammarAccess.getXStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral 
:
{ before(grammarAccess.getXTypeLiteralRule()); }
	 ruleXTypeLiteral
{ after(grammarAccess.getXTypeLiteralRule()); } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTypeLiteralAccess().getGroup()); }
(rule__XTypeLiteral__Group__0)
{ after(grammarAccess.getXTypeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression 
:
{ before(grammarAccess.getXThrowExpressionRule()); }
	 ruleXThrowExpression
{ after(grammarAccess.getXThrowExpressionRule()); } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXThrowExpressionAccess().getGroup()); }
(rule__XThrowExpression__Group__0)
{ after(grammarAccess.getXThrowExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression 
:
{ before(grammarAccess.getXReturnExpressionRule()); }
	 ruleXReturnExpression
{ after(grammarAccess.getXReturnExpressionRule()); } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXReturnExpressionAccess().getGroup()); }
(rule__XReturnExpression__Group__0)
{ after(grammarAccess.getXReturnExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression 
:
{ before(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 ruleXTryCatchFinallyExpression
{ after(grammarAccess.getXTryCatchFinallyExpressionRule()); } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup()); }
(rule__XTryCatchFinallyExpression__Group__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCatchClause
entryRuleXCatchClause 
:
{ before(grammarAccess.getXCatchClauseRule()); }
	 ruleXCatchClause
{ after(grammarAccess.getXCatchClauseRule()); } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCatchClauseAccess().getGroup()); }
(rule__XCatchClause__Group__0)
{ after(grammarAccess.getXCatchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference 
:
{ before(grammarAccess.getJvmTypeReferenceRule()); }
	 ruleJvmTypeReference
{ after(grammarAccess.getJvmTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
(rule__JvmTypeReference__Alternatives)
{ after(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets 
:
{ before(grammarAccess.getArrayBracketsRule()); }
	 ruleArrayBrackets
{ after(grammarAccess.getArrayBracketsRule()); } 
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayBracketsAccess().getGroup()); }
(rule__ArrayBrackets__Group__0)
{ after(grammarAccess.getArrayBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef 
:
{ before(grammarAccess.getXFunctionTypeRefRule()); }
	 ruleXFunctionTypeRef
{ after(grammarAccess.getXFunctionTypeRefRule()); } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
(rule__XFunctionTypeRef__Group__0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference 
:
{ before(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmParameterizedTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
(rule__JvmParameterizedTypeReference__Group__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference 
:
{ before(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 ruleJvmArgumentTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
(rule__JvmArgumentTypeReference__Alternatives)
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference 
:
{ before(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmWildcardTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
(rule__JvmWildcardTypeReference__Group__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound 
:
{ before(grammarAccess.getJvmUpperBoundRule()); }
	 ruleJvmUpperBound
{ after(grammarAccess.getJvmUpperBoundRule()); } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
(rule__JvmUpperBound__Group__0)
{ after(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded 
:
{ before(grammarAccess.getJvmUpperBoundAndedRule()); }
	 ruleJvmUpperBoundAnded
{ after(grammarAccess.getJvmUpperBoundAndedRule()); } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
(rule__JvmUpperBoundAnded__Group__0)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound 
:
{ before(grammarAccess.getJvmLowerBoundRule()); }
	 ruleJvmLowerBound
{ after(grammarAccess.getJvmLowerBoundRule()); } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
(rule__JvmLowerBound__Group__0)
{ after(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration 
:
{ before(grammarAccess.getXImportDeclarationRule()); }
	 ruleXImportDeclaration
{ after(grammarAccess.getXImportDeclarationRule()); } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup()); }
(rule__XImportDeclaration__Group__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__FromClause__IdentificationVariableDeclarationsAlternatives_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsIdentificationVariableDeclarationParserRuleCall_2_1_0_0()); }
	ruleIdentificationVariableDeclaration
{ after(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsIdentificationVariableDeclarationParserRuleCall_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsCollectionMemberDeclarationParserRuleCall_2_1_0_1()); }
	ruleCollectionMemberDeclaration
{ after(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsCollectionMemberDeclarationParserRuleCall_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentificationVariableDeclaration__JoinsAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsJoinParserRuleCall_1_0_0()); }
	ruleJoin
{ after(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsJoinParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsFetchJoinParserRuleCall_1_0_1()); }
	ruleFetchJoin
{ after(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsFetchJoinParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSpecAccess().getLEFTKeyword_0_0()); }

	'LEFT' 

{ after(grammarAccess.getJoinSpecAccess().getLEFTKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getJoinSpecAccess().getOUTERKeyword_0_1()); }

	'OUTER' 

{ after(grammarAccess.getJoinSpecAccess().getOUTERKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getJoinSpecAccess().getINNERKeyword_0_2()); }

	'INNER' 

{ after(grammarAccess.getJoinSpecAccess().getINNERKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getJpaPathExpressionAssignment_0()); }
(rule__SelectExpression__JpaPathExpressionAssignment_0)
{ after(grammarAccess.getSelectExpressionAccess().getJpaPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getSelectExpressionAccess().getAggregateExpressionAssignment_1()); }
(rule__SelectExpression__AggregateExpressionAssignment_1)
{ after(grammarAccess.getSelectExpressionAccess().getAggregateExpressionAssignment_1()); }
)

    |(
{ before(grammarAccess.getSelectExpressionAccess().getConstructorExpressionAssignment_2()); }
(rule__SelectExpression__ConstructorExpressionAssignment_2)
{ after(grammarAccess.getSelectExpressionAccess().getConstructorExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorItemAccess().getJPAPathExpressionParserRuleCall_0()); }
	ruleJPAPathExpression
{ after(grammarAccess.getConstructorItemAccess().getJPAPathExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstructorItemAccess().getAggregateExpressionParserRuleCall_1()); }
	ruleAggregateExpression
{ after(grammarAccess.getConstructorItemAccess().getAggregateExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateExpressionAccess().getAVGKeyword_0_0()); }

	'AVG' 

{ after(grammarAccess.getAggregateExpressionAccess().getAVGKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getAggregateExpressionAccess().getMAXKeyword_0_1()); }

	'MAX' 

{ after(grammarAccess.getAggregateExpressionAccess().getMAXKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getAggregateExpressionAccess().getMINKeyword_0_2()); }

	'MIN' 

{ after(grammarAccess.getAggregateExpressionAccess().getMINKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getAggregateExpressionAccess().getSUMKeyword_0_3()); }

	'SUM' 

{ after(grammarAccess.getAggregateExpressionAccess().getSUMKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getAggregateExpressionAccess().getCOUNTKeyword_0_4()); }

	'COUNT' 

{ after(grammarAccess.getAggregateExpressionAccess().getCOUNTKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getGroup_0()); }
(rule__ConditionalFactor__Group_0__0)
{ after(grammarAccess.getConditionalFactorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getConditionalFactorAccess().getGroup_1()); }
(rule__ConditionalFactor__Group_1__0)
{ after(grammarAccess.getConditionalFactorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getComparisionExpressionAssignment_0()); }
(rule__SimpleConditionalExpression__ComparisionExpressionAssignment_0)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getComparisionExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getBetweenExpressionAssignment_1()); }
(rule__SimpleConditionalExpression__BetweenExpressionAssignment_1)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getBetweenExpressionAssignment_1()); }
)

    |(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getLikeExpressionAssignment_2()); }
(rule__SimpleConditionalExpression__LikeExpressionAssignment_2)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getLikeExpressionAssignment_2()); }
)

    |(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getInExpressionAssignment_3()); }
(rule__SimpleConditionalExpression__InExpressionAssignment_3)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getInExpressionAssignment_3()); }
)

    |(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getNullComparisionExpressionAssignment_4()); }
(rule__SimpleConditionalExpression__NullComparisionExpressionAssignment_4)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getNullComparisionExpressionAssignment_4()); }
)

    |(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getEmptyCollectionComparisonExpressionAssignment_5()); }
(rule__SimpleConditionalExpression__EmptyCollectionComparisonExpressionAssignment_5)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getEmptyCollectionComparisonExpressionAssignment_5()); }
)

    |(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getCollectionMemberExpressionAssignment_6()); }
(rule__SimpleConditionalExpression__CollectionMemberExpressionAssignment_6)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getCollectionMemberExpressionAssignment_6()); }
)

    |(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getExistsExpressionAssignment_7()); }
(rule__SimpleConditionalExpression__ExistsExpressionAssignment_7)
{ after(grammarAccess.getSimpleConditionalExpressionAccess().getExistsExpressionAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getGroup_0()); }
(rule__BetweenExpression__Group_0__0)
{ after(grammarAccess.getBetweenExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBetweenExpressionAccess().getGroup_1()); }
(rule__BetweenExpression__Group_1__0)
{ after(grammarAccess.getBetweenExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getBetweenExpressionAccess().getGroup_2()); }
(rule__BetweenExpression__Group_2__0)
{ after(grammarAccess.getBetweenExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getGroup_0()); }
(rule__InExpression__Group_0__0)
{ after(grammarAccess.getInExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInExpressionAccess().getGroup_1()); }
(rule__InExpression__Group_1__0)
{ after(grammarAccess.getInExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInItemAccess().getLiteralAssignment_0()); }
(rule__InItem__LiteralAssignment_0)
{ after(grammarAccess.getInItemAccess().getLiteralAssignment_0()); }
)

    |(
{ before(grammarAccess.getInItemAccess().getInputParameterAssignment_1()); }
(rule__InItem__InputParameterAssignment_1)
{ after(grammarAccess.getInItemAccess().getInputParameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullComparisonExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getPathExpressionAssignment_0()); }
(rule__NullComparisonExpression__PathExpressionAssignment_0)
{ after(grammarAccess.getNullComparisonExpressionAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getNullComparisonExpressionAccess().getGroup_1()); }
(rule__NullComparisonExpression__Group_1__0)
{ after(grammarAccess.getNullComparisonExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllOrAnyExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getALLKeyword_0_0()); }

	'ALL' 

{ after(grammarAccess.getAllOrAnyExpressionAccess().getALLKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getANYKeyword_0_1()); }

	'ANY' 

{ after(grammarAccess.getAllOrAnyExpressionAccess().getANYKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getSOMEKeyword_0_2()); }

	'SOME' 

{ after(grammarAccess.getAllOrAnyExpressionAccess().getSOMEKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getGroup_0()); }
(rule__ComparisonExpression__Group_0__0)
{ after(grammarAccess.getComparisonExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
(rule__ComparisonExpression__Group_1__0)
{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getGroup_2()); }
(rule__ComparisonExpression__Group_2__0)
{ after(grammarAccess.getComparisonExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getGroup_3()); }
(rule__ComparisonExpression__Group_3__0)
{ after(grammarAccess.getComparisonExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getGroup_4()); }
(rule__ComparisonExpression__Group_4__0)
{ after(grammarAccess.getComparisonExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getGroup_5()); }
(rule__ComparisonExpression__Group_5__0)
{ after(grammarAccess.getComparisonExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryStringExpressionAssignment_0_2_0()); }
(rule__ComparisonExpression__SecondaryStringExpressionAssignment_0_2_0)
{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryStringExpressionAssignment_0_2_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_0_2_1()); }
(rule__ComparisonExpression__AllOrAnyExpressionAssignment_0_2_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_1_1_0()); }

	'=' 

{ after(grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_1_1_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_1_1_1()); }

	'<>' 

{ after(grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryBooleanExpressionAssignment_1_2_0()); }
(rule__ComparisonExpression__SecondaryBooleanExpressionAssignment_1_2_0)
{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryBooleanExpressionAssignment_1_2_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_1_2_1()); }
(rule__ComparisonExpression__AllOrAnyExpressionAssignment_1_2_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_2_1_0()); }

	'=' 

{ after(grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_2_1_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_2_1_1()); }

	'<>' 

{ after(grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryEnumExpressionAssignment_2_2_0()); }
(rule__ComparisonExpression__SecondaryEnumExpressionAssignment_2_2_0)
{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryEnumExpressionAssignment_2_2_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_2_2_1()); }
(rule__ComparisonExpression__AllOrAnyExpressionAssignment_2_2_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryDatetimeExpressionAssignment_3_2_0()); }
(rule__ComparisonExpression__SecondaryDatetimeExpressionAssignment_3_2_0)
{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryDatetimeExpressionAssignment_3_2_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_3_2_1()); }
(rule__ComparisonExpression__AllOrAnyExpressionAssignment_3_2_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_4_1_0()); }

	'=' 

{ after(grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_4_1_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_4_1_1()); }

	'<>' 

{ after(grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryEntityExpressionAssignment_4_2_0()); }
(rule__ComparisonExpression__SecondaryEntityExpressionAssignment_4_2_0)
{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryEntityExpressionAssignment_4_2_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_4_2_1()); }
(rule__ComparisonExpression__AllOrAnyExpressionAssignment_4_2_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryArithmeticExpressionAssignment_5_2_0()); }
(rule__ComparisonExpression__SecondaryArithmeticExpressionAssignment_5_2_0)
{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryArithmeticExpressionAssignment_5_2_0()); }
)

    |(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_5_2_1()); }
(rule__ComparisonExpression__AllOrAnyExpressionAssignment_5_2_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getComparisonOperatorAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignEqualsSignKeyword_2()); }

	'>=' 

{ after(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getComparisonOperatorAccess().getLessThanSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getLessThanSignEqualsSignKeyword_4()); }

	'<=' 

{ after(grammarAccess.getComparisonOperatorAccess().getLessThanSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getLessThanSignGreaterThanSignKeyword_5()); }

	'<>' 

{ after(grammarAccess.getComparisonOperatorAccess().getLessThanSignGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSimpleArithmeticExpressionAssignment_0()); }
(rule__ArithmeticExpression__SimpleArithmeticExpressionAssignment_0)
{ after(grammarAccess.getArithmeticExpressionAccess().getSimpleArithmeticExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
(rule__ArithmeticExpression__Group_1__0)
{ after(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermAssignment_0()); }
(rule__SimpleArithmeticExpression__ArithmeticTermAssignment_0)
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermAssignment_0()); }
)

    |(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getGroup_1()); }
(rule__SimpleArithmeticExpression__Group_1__0)
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getPlusSignKeyword_1_1_1_0()); }

	'+' 

{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getPlusSignKeyword_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getHyphenMinusKeyword_1_1_1_1()); }

	'-' 

{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getHyphenMinusKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getArithmeticFactorAssignment_0()); }
(rule__ArithmeticTerm__ArithmeticFactorAssignment_0)
{ after(grammarAccess.getArithmeticTermAccess().getArithmeticFactorAssignment_0()); }
)

    |(
{ before(grammarAccess.getArithmeticTermAccess().getGroup_1()); }
(rule__ArithmeticTerm__Group_1__0)
{ after(grammarAccess.getArithmeticTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getAsteriskKeyword_1_1_1_0()); }

	'*' 

{ after(grammarAccess.getArithmeticTermAccess().getAsteriskKeyword_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getArithmeticTermAccess().getSolidusKeyword_1_1_1_1()); }

	'/' 

{ after(grammarAccess.getArithmeticTermAccess().getSolidusKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticFactor__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticFactorAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getArithmeticFactorAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getArithmeticFactorAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getArithmeticFactorAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getPathExpressionAssignment_0()); }
(rule__ArithmeticPrimary__PathExpressionAssignment_0)
{ after(grammarAccess.getArithmeticPrimaryAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getArithmeticPrimaryAccess().getNumericLiteralAssignment_1()); }
(rule__ArithmeticPrimary__NumericLiteralAssignment_1)
{ after(grammarAccess.getArithmeticPrimaryAccess().getNumericLiteralAssignment_1()); }
)

    |(
{ before(grammarAccess.getArithmeticPrimaryAccess().getGroup_2()); }
(rule__ArithmeticPrimary__Group_2__0)
{ after(grammarAccess.getArithmeticPrimaryAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getArithmeticPrimaryAccess().getInputParameterAssignment_3()); }
(rule__ArithmeticPrimary__InputParameterAssignment_3)
{ after(grammarAccess.getArithmeticPrimaryAccess().getInputParameterAssignment_3()); }
)

    |(
{ before(grammarAccess.getArithmeticPrimaryAccess().getFunctionsReturningNumericsAssignment_4()); }
(rule__ArithmeticPrimary__FunctionsReturningNumericsAssignment_4)
{ after(grammarAccess.getArithmeticPrimaryAccess().getFunctionsReturningNumericsAssignment_4()); }
)

    |(
{ before(grammarAccess.getArithmeticPrimaryAccess().getAggregateExpressionAssignment_5()); }
(rule__ArithmeticPrimary__AggregateExpressionAssignment_5)
{ after(grammarAccess.getArithmeticPrimaryAccess().getAggregateExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getStringPrimaryAssignment_0()); }
(rule__StringExpression__StringPrimaryAssignment_0)
{ after(grammarAccess.getStringExpressionAccess().getStringPrimaryAssignment_0()); }
)

    |(
{ before(grammarAccess.getStringExpressionAccess().getGroup_1()); }
(rule__StringExpression__Group_1__0)
{ after(grammarAccess.getStringExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPrimaryAccess().getPathExpressionAssignment_0()); }
(rule__StringPrimary__PathExpressionAssignment_0)
{ after(grammarAccess.getStringPrimaryAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getStringPrimaryAccess().getStringLiteralAssignment_1()); }
(rule__StringPrimary__StringLiteralAssignment_1)
{ after(grammarAccess.getStringPrimaryAccess().getStringLiteralAssignment_1()); }
)

    |(
{ before(grammarAccess.getStringPrimaryAccess().getInputParamaterAssignment_2()); }
(rule__StringPrimary__InputParamaterAssignment_2)
{ after(grammarAccess.getStringPrimaryAccess().getInputParamaterAssignment_2()); }
)

    |(
{ before(grammarAccess.getStringPrimaryAccess().getFunctionsReturningStringsAssignment_3()); }
(rule__StringPrimary__FunctionsReturningStringsAssignment_3)
{ after(grammarAccess.getStringPrimaryAccess().getFunctionsReturningStringsAssignment_3()); }
)

    |(
{ before(grammarAccess.getStringPrimaryAccess().getAggregateExpressionAssignment_4()); }
(rule__StringPrimary__AggregateExpressionAssignment_4)
{ after(grammarAccess.getStringPrimaryAccess().getAggregateExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimeExpressionAccess().getDateTimePrimaryAssignment_0()); }
(rule__DateTimeExpression__DateTimePrimaryAssignment_0)
{ after(grammarAccess.getDateTimeExpressionAccess().getDateTimePrimaryAssignment_0()); }
)

    |(
{ before(grammarAccess.getDateTimeExpressionAccess().getGroup_1()); }
(rule__DateTimeExpression__Group_1__0)
{ after(grammarAccess.getDateTimeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimePrimary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimePrimaryAccess().getPathExpressionAssignment_0()); }
(rule__DateTimePrimary__PathExpressionAssignment_0)
{ after(grammarAccess.getDateTimePrimaryAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getDateTimePrimaryAccess().getInputParameterAssignment_1()); }
(rule__DateTimePrimary__InputParameterAssignment_1)
{ after(grammarAccess.getDateTimePrimaryAccess().getInputParameterAssignment_1()); }
)

    |(
{ before(grammarAccess.getDateTimePrimaryAccess().getFunctionsReturningDateTimeAssignment_2()); }
(rule__DateTimePrimary__FunctionsReturningDateTimeAssignment_2)
{ after(grammarAccess.getDateTimePrimaryAccess().getFunctionsReturningDateTimeAssignment_2()); }
)

    |(
{ before(grammarAccess.getDateTimePrimaryAccess().getAggregateExpressionAssignment_3()); }
(rule__DateTimePrimary__AggregateExpressionAssignment_3)
{ after(grammarAccess.getDateTimePrimaryAccess().getAggregateExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getBooleanPrimaryAssignment_0()); }
(rule__BooleanExpression__BooleanPrimaryAssignment_0)
{ after(grammarAccess.getBooleanExpressionAccess().getBooleanPrimaryAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
(rule__BooleanExpression__Group_1__0)
{ after(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrimary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPrimaryAccess().getPathExpressionAssignment_0()); }
(rule__BooleanPrimary__PathExpressionAssignment_0)
{ after(grammarAccess.getBooleanPrimaryAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanPrimaryAccess().getBooleanLiteralAssignment_1()); }
(rule__BooleanPrimary__BooleanLiteralAssignment_1)
{ after(grammarAccess.getBooleanPrimaryAccess().getBooleanLiteralAssignment_1()); }
)

    |(
{ before(grammarAccess.getBooleanPrimaryAccess().getInputParameterAssignment_2()); }
(rule__BooleanPrimary__InputParameterAssignment_2)
{ after(grammarAccess.getBooleanPrimaryAccess().getInputParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumExpressionAccess().getEnumPrimaryAssignment_0()); }
(rule__EnumExpression__EnumPrimaryAssignment_0)
{ after(grammarAccess.getEnumExpressionAccess().getEnumPrimaryAssignment_0()); }
)

    |(
{ before(grammarAccess.getEnumExpressionAccess().getGroup_1()); }
(rule__EnumExpression__Group_1__0)
{ after(grammarAccess.getEnumExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumPrimary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumPrimaryAccess().getPathExpressionAssignment_0()); }
(rule__EnumPrimary__PathExpressionAssignment_0)
{ after(grammarAccess.getEnumPrimaryAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getEnumPrimaryAccess().getEnumLiteralAssignment_1()); }
(rule__EnumPrimary__EnumLiteralAssignment_1)
{ after(grammarAccess.getEnumPrimaryAccess().getEnumLiteralAssignment_1()); }
)

    |(
{ before(grammarAccess.getEnumPrimaryAccess().getInputParameterAssignment_2()); }
(rule__EnumPrimary__InputParameterAssignment_2)
{ after(grammarAccess.getEnumPrimaryAccess().getInputParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityExpressionAccess().getPathExpressionAssignment_0()); }
(rule__EntityExpression__PathExpressionAssignment_0)
{ after(grammarAccess.getEntityExpressionAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getEntityExpressionAccess().getSimpleEntityExpressionAssignment_1()); }
(rule__EntityExpression__SimpleEntityExpressionAssignment_1)
{ after(grammarAccess.getEntityExpressionAccess().getSimpleEntityExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntityExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleEntityExpressionAccess().getIdentificationVariableAssignment_0()); }
(rule__SimpleEntityExpression__IdentificationVariableAssignment_0)
{ after(grammarAccess.getSimpleEntityExpressionAccess().getIdentificationVariableAssignment_0()); }
)

    |(
{ before(grammarAccess.getSimpleEntityExpressionAccess().getInputParameterAssignment_1()); }
(rule__SimpleEntityExpression__InputParameterAssignment_1)
{ after(grammarAccess.getSimpleEntityExpressionAccess().getInputParameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_0()); }
(rule__FunctionsReturningNumerics__Group_0__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_1()); }
(rule__FunctionsReturningNumerics__Group_1__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_2()); }
(rule__FunctionsReturningNumerics__Group_2__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_3()); }
(rule__FunctionsReturningNumerics__Group_3__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_4()); }
(rule__FunctionsReturningNumerics__Group_4__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_5()); }
(rule__FunctionsReturningNumerics__Group_5__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningDateTime__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_DATEKeyword_0()); }

	'CURRENT_DATE' 

{ after(grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_DATEKeyword_0()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_TIMEKeyword_1()); }

	'CURRENT_TIME' 

{ after(grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_TIMEKeyword_1()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_TIMESTAMPKeyword_2()); }

	'CURRENT_TIMESTAMP' 

{ after(grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_TIMESTAMPKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_0()); }
(rule__FunctionsReturningStrings__Group_0__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_1()); }
(rule__FunctionsReturningStrings__Group_1__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_2()); }
(rule__FunctionsReturningStrings__Group_2__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_3()); }
(rule__FunctionsReturningStrings__Group_3__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_4()); }
(rule__FunctionsReturningStrings__Group_4__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrimSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrimSpecificationAccess().getLEADINGKeyword_0()); }

	'LEADING' 

{ after(grammarAccess.getTrimSpecificationAccess().getLEADINGKeyword_0()); }
)

    |(
{ before(grammarAccess.getTrimSpecificationAccess().getTRAILINGKeyword_1()); }

	'TRAILING' 

{ after(grammarAccess.getTrimSpecificationAccess().getTRAILINGKeyword_1()); }
)

    |(
{ before(grammarAccess.getTrimSpecificationAccess().getBOTHKeyword_2()); }

	'BOTH' 

{ after(grammarAccess.getTrimSpecificationAccess().getBOTHKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableDecalarationAssignment_0()); }
(rule__SubselectIdentificationVariableDeclaration__IdentificationVariableDecalarationAssignment_0)
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableDecalarationAssignment_0()); }
)

    |(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getGroup_1()); }
(rule__SubselectIdentificationVariableDeclaration__Group_1__0)
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getCollectionMemberDeclarationAssignment_2()); }
(rule__SubselectIdentificationVariableDeclaration__CollectionMemberDeclarationAssignment_2)
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getCollectionMemberDeclarationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectExpressionAccess().getPathExpressionAssignment_0()); }
(rule__SimpleSelectExpression__PathExpressionAssignment_0)
{ after(grammarAccess.getSimpleSelectExpressionAccess().getPathExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getSimpleSelectExpressionAccess().getAggregateExpressionAssignment_1()); }
(rule__SimpleSelectExpression__AggregateExpressionAssignment_1)
{ after(grammarAccess.getSimpleSelectExpressionAccess().getAggregateExpressionAssignment_1()); }
)

    |(
{ before(grammarAccess.getSimpleSelectExpressionAccess().getIdentificationVariableAssignment_2()); }
(rule__SimpleSelectExpression__IdentificationVariableAssignment_2)
{ after(grammarAccess.getSimpleSelectExpressionAccess().getIdentificationVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_0()); }
(rule__XAssignment__Group_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1()); }
(rule__XAssignment__Group_1__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }

	'+=' 

{ after(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }

	'-=' 

{ after(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }

	'===' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }

	'!==' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
(rule__XRelationalExpression__Group_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
(rule__XRelationalExpression__Group_1_1__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }

	'>=' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }

	'<=' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	'->' 

{ after(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }

	'..<' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_2()); }
(rule__OpOther__Group_2__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }

	'..' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }

	'=>' 

{ after(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_5()); }
(rule__OpOther__Group_5__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_6()); }
(rule__OpOther__Group_6__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }

	'<>' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }

	'?:' 

{ after(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_9()); }

	'<=>' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
(rule__OpOther__Group_5_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
(rule__OpOther__Group_6_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMulti__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }

	'**' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }

	'/' 

{ after(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }

	'%' 

{ after(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
(rule__XUnaryOperation__Group_0__0)
{ after(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); }
	ruleXCastedExpression
{ after(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0()); }
(rule__XMemberFeatureCall__Group_1_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1()); }
(rule__XMemberFeatureCall__Group_1_1__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }

	'.' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
(rule__XMemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getSpreadingAssignment_1_1_0_0_1_2()); }
(rule__XMemberFeatureCall__SpreadingAssignment_1_1_0_0_1_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getSpreadingAssignment_1_1_0_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_3_1_1__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); }
	ruleXConstructorCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); }
	ruleXBlockExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); }
	ruleXSwitchExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); }
	ruleXFeatureCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); }
	ruleXLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); }
	ruleXIfExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); }
	ruleXForLoopExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); }
	ruleXWhileExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); }
	ruleXDoWhileExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); }
	ruleXThrowExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); }
	ruleXReturnExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); }
	ruleXTryCatchFinallyExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); }
	ruleXParenthesizedExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
	ruleXCollectionLiteral
{ after(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); }
(	ruleXClosure)
{ after(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); }
	ruleXBooleanLiteral
{ after(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); }
	ruleXNumberLiteral
{ after(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); }
	ruleXNullLiteral
{ after(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); }
	ruleXStringLiteral
{ after(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); }
	ruleXTypeLiteral
{ after(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCollectionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
	ruleXSetLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
	ruleXListLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0()); }
(rule__XSwitchExpression__Group_2_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1()); }
(rule__XSwitchExpression__Group_2_1__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInsideBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); }
	ruleXVariableDeclaration
{ after(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableAssignment_1_0()); }
(rule__XVariableDeclaration__WriteableAssignment_1_0)
{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1()); }

	'val' 

{ after(grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0()); }
(rule__XVariableDeclaration__Group_2_0__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_1()); }
(rule__XVariableDeclaration__NameAssignment_2_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4_1_0()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_4_1_0)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4_1_0()); }
)

    |(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_4_1_1()); }
(rule__XFeatureCall__Group_4_1_1__0)
{ after(grammarAccess.getXFeatureCallAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCallID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); }

	'extends' 

{ after(grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); }

	'static' 

{ after(grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); }

	'import' 

{ after(grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); }

	'extension' 

{ after(grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdOrSuper__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
	ruleFeatureCallID
{ after(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }

	'super' 

{ after(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_0)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
)

    |(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1()); }
(rule__XConstructorCall__Group_4_1_1__0)
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
(rule__XBooleanLiteral__IsTrueAssignment_1_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0()); }
(rule__XTryCatchFinallyExpression__Group_3_0__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1()); }
(rule__XTryCatchFinallyExpression__Group_3_1__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
	RULE_HEX
{ after(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
(rule__JvmTypeReference__Group_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
	ruleXFunctionTypeRef
{ after(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
	ruleJvmTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
	ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
(rule__XImportDeclaration__Group_1_0__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_1)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
(rule__XImportDeclaration__ImportedNamespaceAssignment_1_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getXmlDescriptorAssignment_0()); }
(rule__Model__XmlDescriptorAssignment_0)
{ after(grammarAccess.getModelAccess().getXmlDescriptorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_1()); }
(	RULE_ORM_UNMANAGED_CONTENT)?
{ after(grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAndPackageDeclarationHereKeyword_2()); }

	'<!-- Imports and Package Declaration Here.' 

{ after(grammarAccess.getModelAccess().getImportsAndPackageDeclarationHereKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_3()); }
(rule__Model__ImportsAssignment_3)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_4()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_5()); }
(rule__Model__NameAssignment_5)
{ after(grammarAccess.getModelAccess().getNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__6__Impl
	rule__Model__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_6()); }

	'-->' 

{ after(grammarAccess.getModelAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__7__Impl
	rule__Model__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_7()); }
(	RULE_ORM_UNMANAGED_CONTENT)?
{ after(grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__8__Impl
	rule__Model__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNamedQueriesAssignment_8()); }
(rule__Model__NamedQueriesAssignment_8)*
{ after(grammarAccess.getModelAccess().getNamedQueriesAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_9()); }
(	RULE_ORM_UNMANAGED_CONTENT)?
{ after(grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__NamedQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__0__Impl
	rule__NamedQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getNamedQueryNameKeyword_0()); }

	'<named-query name="' 

{ after(grammarAccess.getNamedQueryAccess().getNamedQueryNameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__1__Impl
	rule__NamedQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getNameAssignment_1()); }
(rule__NamedQuery__NameAssignment_1)
{ after(grammarAccess.getNamedQueryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__2__Impl
	rule__NamedQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getQuotationMarkGreaterThanSignKeyword_2()); }

	'">' 

{ after(grammarAccess.getNamedQueryAccess().getQuotationMarkGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__3__Impl
	rule__NamedQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getQueryKeyword_3()); }

	'<query>' 

{ after(grammarAccess.getNamedQueryAccess().getQueryKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__4__Impl
	rule__NamedQuery__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getQlStatementAssignment_4()); }
(rule__NamedQuery__QlStatementAssignment_4)
{ after(grammarAccess.getNamedQueryAccess().getQlStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__5__Impl
	rule__NamedQuery__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getQueryKeyword_5()); }

	'</query>' 

{ after(grammarAccess.getNamedQueryAccess().getQueryKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getNamedQueryKeyword_6()); }

	'</named-query>' 

{ after(grammarAccess.getNamedQueryAccess().getNamedQueryKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SelectStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__0__Impl
	rule__SelectStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getSelectClauseAssignment_0()); }
(rule__SelectStatement__SelectClauseAssignment_0)
{ after(grammarAccess.getSelectStatementAccess().getSelectClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__1__Impl
	rule__SelectStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getFromClauseAssignment_1()); }
(rule__SelectStatement__FromClauseAssignment_1)
{ after(grammarAccess.getSelectStatementAccess().getFromClauseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getWhereClauseAssignment_2()); }
(rule__SelectStatement__WhereClauseAssignment_2)?
{ after(grammarAccess.getSelectStatementAccess().getWhereClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FromClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group__0__Impl
	rule__FromClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getFROMKeyword_0()); }

	'FROM' 

{ after(grammarAccess.getFromClauseAccess().getFROMKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group__1__Impl
	rule__FromClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsAssignment_1()); }
(rule__FromClause__IdentificationVariableDeclarationsAssignment_1)
{ after(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getGroup_2()); }
(rule__FromClause__Group_2__0)*
{ after(grammarAccess.getFromClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FromClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group_2__0__Impl
	rule__FromClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getFromClauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsAssignment_2_1()); }
(rule__FromClause__IdentificationVariableDeclarationsAssignment_2_1)
{ after(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdentificationVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentificationVariableDeclaration__Group__0__Impl
	rule__IdentificationVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentificationVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentificationVariableDeclarationAccess().getRangeVariableDeclarationAssignment_0()); }
(rule__IdentificationVariableDeclaration__RangeVariableDeclarationAssignment_0)
{ after(grammarAccess.getIdentificationVariableDeclarationAccess().getRangeVariableDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentificationVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentificationVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentificationVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsAssignment_1()); }
(rule__IdentificationVariableDeclaration__JoinsAssignment_1)*
{ after(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RangeVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeVariableDeclaration__Group__0__Impl
	rule__RangeVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeVariableDeclarationAccess().getAbstractSchemaNameAssignment_0()); }
(rule__RangeVariableDeclaration__AbstractSchemaNameAssignment_0)
{ after(grammarAccess.getRangeVariableDeclarationAccess().getAbstractSchemaNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeVariableDeclaration__Group__1__Impl
	rule__RangeVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeVariableDeclarationAccess().getASKeyword_1()); }
(
	'AS' 
)?
{ after(grammarAccess.getRangeVariableDeclarationAccess().getASKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeVariableDeclarationAccess().getIdentificationVariableAssignment_2()); }
(rule__RangeVariableDeclaration__IdentificationVariableAssignment_2)
{ after(grammarAccess.getRangeVariableDeclarationAccess().getIdentificationVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Join__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join__Group__0__Impl
	rule__Join__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getJoinSpecAssignment_0()); }
(rule__Join__JoinSpecAssignment_0)
{ after(grammarAccess.getJoinAccess().getJoinSpecAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join__Group__1__Impl
	rule__Join__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getJoinAssociationPathExpressionAssignment_1()); }
(rule__Join__JoinAssociationPathExpressionAssignment_1)
{ after(grammarAccess.getJoinAccess().getJoinAssociationPathExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join__Group__2__Impl
	rule__Join__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getASKeyword_2()); }
(
	'AS' 
)?
{ after(grammarAccess.getJoinAccess().getASKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getIdentificationVariableAssignment_3()); }
(rule__Join__IdentificationVariableAssignment_3)
{ after(grammarAccess.getJoinAccess().getIdentificationVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FetchJoin__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FetchJoin__Group__0__Impl
	rule__FetchJoin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getJoinSpecAssignment_0()); }
(rule__FetchJoin__JoinSpecAssignment_0)
{ after(grammarAccess.getFetchJoinAccess().getJoinSpecAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FetchJoin__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FetchJoin__Group__1__Impl
	rule__FetchJoin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getFETCHKeyword_1()); }

	'FETCH' 

{ after(grammarAccess.getFetchJoinAccess().getFETCHKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FetchJoin__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FetchJoin__Group__2__Impl
	rule__FetchJoin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getJoinAssociationPathExpressionAssignment_2()); }
(rule__FetchJoin__JoinAssociationPathExpressionAssignment_2)
{ after(grammarAccess.getFetchJoinAccess().getJoinAssociationPathExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FetchJoin__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FetchJoin__Group__3__Impl
	rule__FetchJoin__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getASKeyword_3()); }
(
	'AS' 
)?
{ after(grammarAccess.getFetchJoinAccess().getASKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FetchJoin__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FetchJoin__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getIdentificationVariableAssignment_4()); }
(rule__FetchJoin__IdentificationVariableAssignment_4)
{ after(grammarAccess.getFetchJoinAccess().getIdentificationVariableAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JoinSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinSpec__Group__0__Impl
	rule__JoinSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSpecAccess().getAlternatives_0()); }
(rule__JoinSpec__Alternatives_0)?
{ after(grammarAccess.getJoinSpecAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSpecAccess().getJOINKeyword_1()); }

	'JOIN' 

{ after(grammarAccess.getJoinSpecAccess().getJOINKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JPAPathExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JPAPathExpression__Group__0__Impl
	rule__JPAPathExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JPAPathExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJPAPathExpressionAccess().getRootAssignment_0()); }
(rule__JPAPathExpression__RootAssignment_0)
{ after(grammarAccess.getJPAPathExpressionAccess().getRootAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JPAPathExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JPAPathExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JPAPathExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJPAPathExpressionAccess().getGroup_1()); }
(rule__JPAPathExpression__Group_1__0)*
{ after(grammarAccess.getJPAPathExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JPAPathExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JPAPathExpression__Group_1__0__Impl
	rule__JPAPathExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JPAPathExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJPAPathExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getJPAPathExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JPAPathExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JPAPathExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JPAPathExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJPAPathExpressionAccess().getJpaAttributesAssignment_1_1()); }
(rule__JPAPathExpression__JpaAttributesAssignment_1_1)
{ after(grammarAccess.getJPAPathExpressionAccess().getJpaAttributesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionMemberDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberDeclaration__Group__0__Impl
	rule__CollectionMemberDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberDeclarationAccess().getINKeyword_0()); }

	'IN' 

{ after(grammarAccess.getCollectionMemberDeclarationAccess().getINKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionMemberDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberDeclaration__Group__1__Impl
	rule__CollectionMemberDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberDeclarationAccess().getCollectionValuedPathExpressionAssignment_1()); }
(rule__CollectionMemberDeclaration__CollectionValuedPathExpressionAssignment_1)
{ after(grammarAccess.getCollectionMemberDeclarationAccess().getCollectionValuedPathExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionMemberDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberDeclaration__Group__2__Impl
	rule__CollectionMemberDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberDeclarationAccess().getASKeyword_2()); }
(
	'AS' 
)?
{ after(grammarAccess.getCollectionMemberDeclarationAccess().getASKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionMemberDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberDeclarationAccess().getIdentificationVariableAssignment_3()); }
(rule__CollectionMemberDeclaration__IdentificationVariableAssignment_3)
{ after(grammarAccess.getCollectionMemberDeclarationAccess().getIdentificationVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SelectClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__0__Impl
	rule__SelectClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getSELECTKeyword_0()); }

	'SELECT' 

{ after(grammarAccess.getSelectClauseAccess().getSELECTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__1__Impl
	rule__SelectClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getDISTINCTKeyword_1()); }
(
	'DISTINCT' 
)?
{ after(grammarAccess.getSelectClauseAccess().getDISTINCTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__2__Impl
	rule__SelectClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getSelectExpressionsAssignment_2()); }
(rule__SelectClause__SelectExpressionsAssignment_2)
{ after(grammarAccess.getSelectClauseAccess().getSelectExpressionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getGroup_3()); }
(rule__SelectClause__Group_3__0)*
{ after(grammarAccess.getSelectClauseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SelectClause__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group_3__0__Impl
	rule__SelectClause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getSelectClauseAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getSelectExpressionsAssignment_3_1()); }
(rule__SelectClause__SelectExpressionsAssignment_3_1)
{ after(grammarAccess.getSelectClauseAccess().getSelectExpressionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group__0__Impl
	rule__ConstructorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getNEWKeyword_0()); }

	'NEW' 

{ after(grammarAccess.getConstructorExpressionAccess().getNEWKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group__1__Impl
	rule__ConstructorExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getConstructorNameAssignment_1()); }
(rule__ConstructorExpression__ConstructorNameAssignment_1)
{ after(grammarAccess.getConstructorExpressionAccess().getConstructorNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group__2__Impl
	rule__ConstructorExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getConstructorExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group__3__Impl
	rule__ConstructorExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getConstructorItemsAssignment_3()); }
(rule__ConstructorExpression__ConstructorItemsAssignment_3)
{ after(grammarAccess.getConstructorExpressionAccess().getConstructorItemsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group__4__Impl
	rule__ConstructorExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getGroup_4()); }
(rule__ConstructorExpression__Group_4__0)*
{ after(grammarAccess.getConstructorExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getConstructorExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConstructorExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group_4__0__Impl
	rule__ConstructorExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getConstructorExpressionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getConstructorItemsAssignment_4_1()); }
(rule__ConstructorExpression__ConstructorItemsAssignment_4_1)
{ after(grammarAccess.getConstructorExpressionAccess().getConstructorItemsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AggregateExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregateExpression__Group__0__Impl
	rule__AggregateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateExpressionAccess().getAlternatives_0()); }
(rule__AggregateExpression__Alternatives_0)
{ after(grammarAccess.getAggregateExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AggregateExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregateExpression__Group__1__Impl
	rule__AggregateExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateExpressionAccess().getDISTINCTKeyword_1()); }
(
	'DISTINCT' 
)?
{ after(grammarAccess.getAggregateExpressionAccess().getDISTINCTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AggregateExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregateExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateExpressionAccess().getStateFieldPathExpressionAssignment_2()); }
(rule__AggregateExpression__StateFieldPathExpressionAssignment_2)
{ after(grammarAccess.getAggregateExpressionAccess().getStateFieldPathExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhereClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__0__Impl
	rule__WhereClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getWHEREKeyword_0()); }

	'WHERE' 

{ after(grammarAccess.getWhereClauseAccess().getWHEREKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getConditionalExpressionAssignment_1()); }
(rule__WhereClause__ConditionalExpressionAssignment_1)
{ after(grammarAccess.getWhereClauseAccess().getConditionalExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getConditionalTermParserRuleCall_0()); }
	ruleConditionalTerm
{ after(grammarAccess.getConditionalExpressionAccess().getConditionalTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
(rule__ConditionalExpression__Group_1__0)*
{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getANDKeyword_1_1()); }

	'AND' 

{ after(grammarAccess.getConditionalExpressionAccess().getANDKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getRightAssignment_1_2()); }
(rule__ConditionalExpression__RightAssignment_1_2)
{ after(grammarAccess.getConditionalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionalTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalTerm__Group__0__Impl
	rule__ConditionalTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalTermAccess().getConditionalFactorParserRuleCall_0()); }
	ruleConditionalFactor
{ after(grammarAccess.getConditionalTermAccess().getConditionalFactorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalTermAccess().getGroup_1()); }
(rule__ConditionalTerm__Group_1__0)*
{ after(grammarAccess.getConditionalTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalTerm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalTerm__Group_1__0__Impl
	rule__ConditionalTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalTermAccess().getConditionalTermLeftAction_1_0()); }
(

)
{ after(grammarAccess.getConditionalTermAccess().getConditionalTermLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalTerm__Group_1__1__Impl
	rule__ConditionalTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalTermAccess().getORKeyword_1_1()); }

	'OR' 

{ after(grammarAccess.getConditionalTermAccess().getORKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalTermAccess().getRightAssignment_1_2()); }
(rule__ConditionalTerm__RightAssignment_1_2)
{ after(grammarAccess.getConditionalTermAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionalFactor__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFactor__Group_0__0__Impl
	rule__ConditionalFactor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getNOTKeyword_0_0()); }
(
	'NOT' 
)?
{ after(grammarAccess.getConditionalFactorAccess().getNOTKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalFactor__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFactor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getConditionalPrimaryAssignment_0_1()); }
(rule__ConditionalFactor__ConditionalPrimaryAssignment_0_1)
{ after(grammarAccess.getConditionalFactorAccess().getConditionalPrimaryAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalFactor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFactor__Group_1__0__Impl
	rule__ConditionalFactor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getConditionalFactorAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalFactor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFactor__Group_1__1__Impl
	rule__ConditionalFactor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getConditionalExpressionAssignment_1_1()); }
(rule__ConditionalFactor__ConditionalExpressionAssignment_1_1)
{ after(grammarAccess.getConditionalFactorAccess().getConditionalExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalFactor__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFactor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getConditionalFactorAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BetweenExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_0__0__Impl
	rule__BetweenExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getPrimaryArithmeticExpressionAssignment_0_0()); }
(rule__BetweenExpression__PrimaryArithmeticExpressionAssignment_0_0)
{ after(grammarAccess.getBetweenExpressionAccess().getPrimaryArithmeticExpressionAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_0__1__Impl
	rule__BetweenExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getNOTKeyword_0_1()); }
(
	'NOT' 
)?
{ after(grammarAccess.getBetweenExpressionAccess().getNOTKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_0__2__Impl
	rule__BetweenExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_0_2()); }

	'BETWEEN' 

{ after(grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_0__3__Impl
	rule__BetweenExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getLowerArithmeticExpressionAssignment_0_3()); }
(rule__BetweenExpression__LowerArithmeticExpressionAssignment_0_3)
{ after(grammarAccess.getBetweenExpressionAccess().getLowerArithmeticExpressionAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_0__4__Impl
	rule__BetweenExpression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getANDKeyword_0_4()); }

	'AND' 

{ after(grammarAccess.getBetweenExpressionAccess().getANDKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getUpperArithmeticExpressionAssignment_0_5()); }
(rule__BetweenExpression__UpperArithmeticExpressionAssignment_0_5)
{ after(grammarAccess.getBetweenExpressionAccess().getUpperArithmeticExpressionAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__BetweenExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_1__0__Impl
	rule__BetweenExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getPrimaryStringExpressionAssignment_1_0()); }
(rule__BetweenExpression__PrimaryStringExpressionAssignment_1_0)
{ after(grammarAccess.getBetweenExpressionAccess().getPrimaryStringExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_1__1__Impl
	rule__BetweenExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getNOTKeyword_1_1()); }
(
	'NOT' 
)?
{ after(grammarAccess.getBetweenExpressionAccess().getNOTKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_1__2__Impl
	rule__BetweenExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_1_2()); }

	'BETWEEN' 

{ after(grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_1__3__Impl
	rule__BetweenExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getLowerStringExpressionAssignment_1_3()); }
(rule__BetweenExpression__LowerStringExpressionAssignment_1_3)
{ after(grammarAccess.getBetweenExpressionAccess().getLowerStringExpressionAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_1__4__Impl
	rule__BetweenExpression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getANDKeyword_1_4()); }

	'AND' 

{ after(grammarAccess.getBetweenExpressionAccess().getANDKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getUpperStringExpressionAssignment_1_5()); }
(rule__BetweenExpression__UpperStringExpressionAssignment_1_5)
{ after(grammarAccess.getBetweenExpressionAccess().getUpperStringExpressionAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__BetweenExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_2__0__Impl
	rule__BetweenExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getPrimaryDateTimeExpressionAssignment_2_0()); }
(rule__BetweenExpression__PrimaryDateTimeExpressionAssignment_2_0)
{ after(grammarAccess.getBetweenExpressionAccess().getPrimaryDateTimeExpressionAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_2__1__Impl
	rule__BetweenExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getNOTKeyword_2_1()); }
(
	'NOT' 
)?
{ after(grammarAccess.getBetweenExpressionAccess().getNOTKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_2__2__Impl
	rule__BetweenExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_2_2()); }

	'BETWEEN' 

{ after(grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_2__3__Impl
	rule__BetweenExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getLowerDateTimeExpressionAssignment_2_3()); }
(rule__BetweenExpression__LowerDateTimeExpressionAssignment_2_3)
{ after(grammarAccess.getBetweenExpressionAccess().getLowerDateTimeExpressionAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_2__4__Impl
	rule__BetweenExpression__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getANDKeyword_2_4()); }

	'AND' 

{ after(grammarAccess.getBetweenExpressionAccess().getANDKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenExpression__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BetweenExpression__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getUpperDateTimeExpressionAssignment_2_5()); }
(rule__BetweenExpression__UpperDateTimeExpressionAssignment_2_5)
{ after(grammarAccess.getBetweenExpressionAccess().getUpperDateTimeExpressionAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0__0__Impl
	rule__InExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getPathExpressionAssignment_0_0()); }
(rule__InExpression__PathExpressionAssignment_0_0)
{ after(grammarAccess.getInExpressionAccess().getPathExpressionAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0__1__Impl
	rule__InExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getNOTKeyword_0_1()); }
(
	'NOT' 
)?
{ after(grammarAccess.getInExpressionAccess().getNOTKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0__2__Impl
	rule__InExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getINKeyword_0_2()); }

	'IN' 

{ after(grammarAccess.getInExpressionAccess().getINKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0__3__Impl
	rule__InExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getLeftParenthesisKeyword_0_3()); }

	'(' 

{ after(grammarAccess.getInExpressionAccess().getLeftParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0__4__Impl
	rule__InExpression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getInItemsAssignment_0_4()); }
(rule__InExpression__InItemsAssignment_0_4)
{ after(grammarAccess.getInExpressionAccess().getInItemsAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getGroup_0_5()); }
(rule__InExpression__Group_0_5__0)*
{ after(grammarAccess.getInExpressionAccess().getGroup_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InExpression__Group_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0_5__0__Impl
	rule__InExpression__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getCommaKeyword_0_5_0()); }

	',' 

{ after(grammarAccess.getInExpressionAccess().getCommaKeyword_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getInItemsAssignment_0_5_1()); }
(rule__InExpression__InItemsAssignment_0_5_1)
{ after(grammarAccess.getInExpressionAccess().getInItemsAssignment_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_1__0__Impl
	rule__InExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getSubQueryAssignment_1_0()); }
(rule__InExpression__SubQueryAssignment_1_0)
{ after(grammarAccess.getInExpressionAccess().getSubQueryAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getRightParenthesisKeyword_1_1()); }

	')' 

{ after(grammarAccess.getInExpressionAccess().getRightParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LikeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikeExpression__Group__0__Impl
	rule__LikeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getStringExpressionAssignment_0()); }
(rule__LikeExpression__StringExpressionAssignment_0)
{ after(grammarAccess.getLikeExpressionAccess().getStringExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikeExpression__Group__1__Impl
	rule__LikeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getNOTKeyword_1()); }
(
	'NOT' 
)?
{ after(grammarAccess.getLikeExpressionAccess().getNOTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikeExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikeExpression__Group__2__Impl
	rule__LikeExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getLIKEKeyword_2()); }

	'LIKE' 

{ after(grammarAccess.getLikeExpressionAccess().getLIKEKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikeExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikeExpression__Group__3__Impl
	rule__LikeExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getPatternValueAssignment_3()); }
(rule__LikeExpression__PatternValueAssignment_3)
{ after(grammarAccess.getLikeExpressionAccess().getPatternValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikeExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikeExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getGroup_4()); }
(rule__LikeExpression__Group_4__0)?
{ after(grammarAccess.getLikeExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LikeExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikeExpression__Group_4__0__Impl
	rule__LikeExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getESCAPEKeyword_4_0()); }

	'ESCAPE' 

{ after(grammarAccess.getLikeExpressionAccess().getESCAPEKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikeExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikeExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getEscapeCharacterAssignment_4_1()); }
(rule__LikeExpression__EscapeCharacterAssignment_4_1)
{ after(grammarAccess.getLikeExpressionAccess().getEscapeCharacterAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullComparisonExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullComparisonExpression__Group_1__0__Impl
	rule__NullComparisonExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullComparisonExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getInputParameterAssignment_1_0()); }
(rule__NullComparisonExpression__InputParameterAssignment_1_0)
{ after(grammarAccess.getNullComparisonExpressionAccess().getInputParameterAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullComparisonExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullComparisonExpression__Group_1__1__Impl
	rule__NullComparisonExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NullComparisonExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getISKeyword_1_1()); }

	'IS' 

{ after(grammarAccess.getNullComparisonExpressionAccess().getISKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullComparisonExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullComparisonExpression__Group_1__2__Impl
	rule__NullComparisonExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NullComparisonExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getNOTKeyword_1_2()); }
(
	'NOT' 
)?
{ after(grammarAccess.getNullComparisonExpressionAccess().getNOTKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullComparisonExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullComparisonExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullComparisonExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getNULLKeyword_1_3()); }

	'NULL' 

{ after(grammarAccess.getNullComparisonExpressionAccess().getNULLKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EmptyCollectionComparisonExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyCollectionComparisonExpression__Group__0__Impl
	rule__EmptyCollectionComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyCollectionComparisonExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getPathExpressionAssignment_0()); }
(rule__EmptyCollectionComparisonExpression__PathExpressionAssignment_0)
{ after(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getPathExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyCollectionComparisonExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyCollectionComparisonExpression__Group__1__Impl
	rule__EmptyCollectionComparisonExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyCollectionComparisonExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getISKeyword_1()); }

	'IS' 

{ after(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getISKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyCollectionComparisonExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyCollectionComparisonExpression__Group__2__Impl
	rule__EmptyCollectionComparisonExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyCollectionComparisonExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getNOTKeyword_2()); }
(
	'NOT' 
)?
{ after(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getNOTKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyCollectionComparisonExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyCollectionComparisonExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyCollectionComparisonExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getEMPTYKeyword_3()); }

	'EMPTY' 

{ after(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getEMPTYKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CollectionMemberExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberExpression__Group__0__Impl
	rule__CollectionMemberExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getEntityExpressionAssignment_0()); }
(rule__CollectionMemberExpression__EntityExpressionAssignment_0)
{ after(grammarAccess.getCollectionMemberExpressionAccess().getEntityExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionMemberExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberExpression__Group__1__Impl
	rule__CollectionMemberExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getNOTKeyword_1()); }
(
	'NOT' 
)?
{ after(grammarAccess.getCollectionMemberExpressionAccess().getNOTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionMemberExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberExpression__Group__2__Impl
	rule__CollectionMemberExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getMEMBERKeyword_2()); }

	'MEMBER' 

{ after(grammarAccess.getCollectionMemberExpressionAccess().getMEMBERKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionMemberExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberExpression__Group__3__Impl
	rule__CollectionMemberExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getOFKeyword_3()); }
(
	'OF' 
)?
{ after(grammarAccess.getCollectionMemberExpressionAccess().getOFKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionMemberExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionMemberExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getPathExpressionAssignment_4()); }
(rule__CollectionMemberExpression__PathExpressionAssignment_4)
{ after(grammarAccess.getCollectionMemberExpressionAccess().getPathExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExistsExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsExpression__Group__0__Impl
	rule__ExistsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsExpressionAccess().getNOTKeyword_0()); }
(
	'NOT' 
)?
{ after(grammarAccess.getExistsExpressionAccess().getNOTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsExpression__Group__1__Impl
	rule__ExistsExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsExpressionAccess().getEXISTSKeyword_1()); }

	'EXISTS' 

{ after(grammarAccess.getExistsExpressionAccess().getEXISTSKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsExpression__Group__2__Impl
	rule__ExistsExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getExistsExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsExpression__Group__3__Impl
	rule__ExistsExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsExpressionAccess().getSubQueryAssignment_3()); }
(rule__ExistsExpression__SubQueryAssignment_3)
{ after(grammarAccess.getExistsExpressionAccess().getSubQueryAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getExistsExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AllOrAnyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllOrAnyExpression__Group__0__Impl
	rule__AllOrAnyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllOrAnyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getAlternatives_0()); }
(rule__AllOrAnyExpression__Alternatives_0)
{ after(grammarAccess.getAllOrAnyExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllOrAnyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllOrAnyExpression__Group__1__Impl
	rule__AllOrAnyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllOrAnyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAllOrAnyExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllOrAnyExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllOrAnyExpression__Group__2__Impl
	rule__AllOrAnyExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AllOrAnyExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getSubQueryAssignment_2()); }
(rule__AllOrAnyExpression__SubQueryAssignment_2)
{ after(grammarAccess.getAllOrAnyExpressionAccess().getSubQueryAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllOrAnyExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllOrAnyExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllOrAnyExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAllOrAnyExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComparisonExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_0__0__Impl
	rule__ComparisonExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryStringExpressionAssignment_0_0()); }
(rule__ComparisonExpression__PrimaryStringExpressionAssignment_0_0)
{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryStringExpressionAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_0__1__Impl
	rule__ComparisonExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorAssignment_0_1()); }
(rule__ComparisonExpression__ComparisonOperatorAssignment_0_1)
{ after(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_0_2()); }
(rule__ComparisonExpression__Alternatives_0_2)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComparisonExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_1__0__Impl
	rule__ComparisonExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryBooleanExpressionAssignment_1_0()); }
(rule__ComparisonExpression__PrimaryBooleanExpressionAssignment_1_0)
{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryBooleanExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_1__1__Impl
	rule__ComparisonExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1()); }
(rule__ComparisonExpression__Alternatives_1_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_2()); }
(rule__ComparisonExpression__Alternatives_1_2)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComparisonExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_2__0__Impl
	rule__ComparisonExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryEnumExpressionAssignment_2_0()); }
(rule__ComparisonExpression__PrimaryEnumExpressionAssignment_2_0)
{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryEnumExpressionAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_2__1__Impl
	rule__ComparisonExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_2_1()); }
(rule__ComparisonExpression__Alternatives_2_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_2_2()); }
(rule__ComparisonExpression__Alternatives_2_2)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComparisonExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_3__0__Impl
	rule__ComparisonExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryDatetimeExpressionAssignment_3_0()); }
(rule__ComparisonExpression__PrimaryDatetimeExpressionAssignment_3_0)
{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryDatetimeExpressionAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_3__1__Impl
	rule__ComparisonExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorAssignment_3_1()); }
(rule__ComparisonExpression__ComparisonOperatorAssignment_3_1)
{ after(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_3_2()); }
(rule__ComparisonExpression__Alternatives_3_2)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComparisonExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_4__0__Impl
	rule__ComparisonExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryEntityExpressionAssignment_4_0()); }
(rule__ComparisonExpression__PrimaryEntityExpressionAssignment_4_0)
{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryEntityExpressionAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_4__1__Impl
	rule__ComparisonExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_4_1()); }
(rule__ComparisonExpression__Alternatives_4_1)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_4_2()); }
(rule__ComparisonExpression__Alternatives_4_2)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComparisonExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_5__0__Impl
	rule__ComparisonExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryArithmeticExpressionAssignment_5_0()); }
(rule__ComparisonExpression__PrimaryArithmeticExpressionAssignment_5_0)
{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryArithmeticExpressionAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_5__1__Impl
	rule__ComparisonExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorAssignment_5_1()); }
(rule__ComparisonExpression__ComparisonOperatorAssignment_5_1)
{ after(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_5_2()); }
(rule__ComparisonExpression__Alternatives_5_2)
{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithmeticExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group_1__0__Impl
	rule__ArithmeticExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getArithmeticExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group_1__1__Impl
	rule__ArithmeticExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSubQueryAssignment_1_1()); }
(rule__ArithmeticExpression__SubQueryAssignment_1_1)
{ after(grammarAccess.getArithmeticExpressionAccess().getSubQueryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getArithmeticExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleArithmeticExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleArithmeticExpression__Group_1__0__Impl
	rule__SimpleArithmeticExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermParserRuleCall_1_0()); }
	ruleArithmeticTerm
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleArithmeticExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleArithmeticExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getGroup_1_1()); }
(rule__SimpleArithmeticExpression__Group_1_1__0)*
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleArithmeticExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleArithmeticExpression__Group_1_1__0__Impl
	rule__SimpleArithmeticExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getSimpleArithmeticExpressionLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getSimpleArithmeticExpressionLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleArithmeticExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleArithmeticExpression__Group_1_1__1__Impl
	rule__SimpleArithmeticExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getAlternatives_1_1_1()); }
(rule__SimpleArithmeticExpression__Alternatives_1_1_1)
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleArithmeticExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleArithmeticExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getRightAssignment_1_1_2()); }
(rule__SimpleArithmeticExpression__RightAssignment_1_1_2)
{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithmeticTerm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticTerm__Group_1__0__Impl
	rule__ArithmeticTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getArithmeticFactorParserRuleCall_1_0()); }
	ruleArithmeticFactor
{ after(grammarAccess.getArithmeticTermAccess().getArithmeticFactorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticTerm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getGroup_1_1()); }
(rule__ArithmeticTerm__Group_1_1__0)*
{ after(grammarAccess.getArithmeticTermAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithmeticTerm__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticTerm__Group_1_1__0__Impl
	rule__ArithmeticTerm__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getArithmeticTermLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getArithmeticTermAccess().getArithmeticTermLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticTerm__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticTerm__Group_1_1__1__Impl
	rule__ArithmeticTerm__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getAlternatives_1_1_1()); }
(rule__ArithmeticTerm__Alternatives_1_1_1)
{ after(grammarAccess.getArithmeticTermAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticTerm__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticTerm__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getRightAssignment_1_1_2()); }
(rule__ArithmeticTerm__RightAssignment_1_1_2)
{ after(grammarAccess.getArithmeticTermAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithmeticFactor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticFactor__Group__0__Impl
	rule__ArithmeticFactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticFactor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticFactorAccess().getAlternatives_0()); }
(rule__ArithmeticFactor__Alternatives_0)?
{ after(grammarAccess.getArithmeticFactorAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticFactor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticFactor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticFactor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticFactorAccess().getArithmeticPrimaryAssignment_1()); }
(rule__ArithmeticFactor__ArithmeticPrimaryAssignment_1)
{ after(grammarAccess.getArithmeticFactorAccess().getArithmeticPrimaryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithmeticPrimary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticPrimary__Group_2__0__Impl
	rule__ArithmeticPrimary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getArithmeticPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticPrimary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticPrimary__Group_2__1__Impl
	rule__ArithmeticPrimary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getSimpleArithmeticExpressionAssignment_2_1()); }
(rule__ArithmeticPrimary__SimpleArithmeticExpressionAssignment_2_1)
{ after(grammarAccess.getArithmeticPrimaryAccess().getSimpleArithmeticExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticPrimary__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticPrimary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getArithmeticPrimaryAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group_1__0__Impl
	rule__StringExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getStringExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group_1__1__Impl
	rule__StringExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getSubQueryAssignment_1_1()); }
(rule__StringExpression__SubQueryAssignment_1_1)
{ after(grammarAccess.getStringExpressionAccess().getSubQueryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getStringExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DateTimeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateTimeExpression__Group_1__0__Impl
	rule__DateTimeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimeExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getDateTimeExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateTimeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateTimeExpression__Group_1__1__Impl
	rule__DateTimeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimeExpressionAccess().getSubQueryAssignment_1_1()); }
(rule__DateTimeExpression__SubQueryAssignment_1_1)
{ after(grammarAccess.getDateTimeExpressionAccess().getSubQueryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateTimeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateTimeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimeExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getDateTimeExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__0__Impl
	rule__BooleanExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getBooleanExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__1__Impl
	rule__BooleanExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getSubQueryAssignment_1_1()); }
(rule__BooleanExpression__SubQueryAssignment_1_1)
{ after(grammarAccess.getBooleanExpressionAccess().getSubQueryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getBooleanExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumExpression__Group_1__0__Impl
	rule__EnumExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getEnumExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumExpression__Group_1__1__Impl
	rule__EnumExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumExpressionAccess().getSubQueryAssignment_1_1()); }
(rule__EnumExpression__SubQueryAssignment_1_1)
{ after(grammarAccess.getEnumExpressionAccess().getSubQueryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getEnumExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionsReturningNumerics__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_0__0__Impl
	rule__FunctionsReturningNumerics__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getLENGTHKeyword_0_0()); }

	'LENGTH' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getLENGTHKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryAssignment_0_1()); }
(rule__FunctionsReturningNumerics__StringPrimaryAssignment_0_1)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningNumerics__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1__0__Impl
	rule__FunctionsReturningNumerics__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getLOCATEKeyword_1_0()); }

	'LOCATE' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getLOCATEKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_1_1()); }
(rule__FunctionsReturningNumerics__Group_1_1__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningNumerics__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1_1__0__Impl
	rule__FunctionsReturningNumerics__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryAssignment_1_1_0()); }
(rule__FunctionsReturningNumerics__StringPrimaryAssignment_1_1_0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1_1__1__Impl
	rule__FunctionsReturningNumerics__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_1_1_1()); }

	',' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1_1__2__Impl
	rule__FunctionsReturningNumerics__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getStringSecondaryAssignment_1_1_2()); }
(rule__FunctionsReturningNumerics__StringSecondaryAssignment_1_1_2)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getStringSecondaryAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_1_1_3()); }
(rule__FunctionsReturningNumerics__Group_1_1_3__0)?
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionsReturningNumerics__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1_1_3__0__Impl
	rule__FunctionsReturningNumerics__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_1_1_3_0()); }

	',' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_1_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionAssignment_1_1_3_1()); }
(rule__FunctionsReturningNumerics__SimpleArithmeticExpressionAssignment_1_1_3_1)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionAssignment_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningNumerics__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_2__0__Impl
	rule__FunctionsReturningNumerics__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getABSKeyword_2_0()); }

	'ABS' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getABSKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionAssignment_2_1()); }
(rule__FunctionsReturningNumerics__SimpleArithmeticExpressionAssignment_2_1)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningNumerics__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_3__0__Impl
	rule__FunctionsReturningNumerics__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSQRTKeyword_3_0()); }

	'SQRT' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSQRTKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionAssignment_3_1()); }
(rule__FunctionsReturningNumerics__SimpleArithmeticExpressionAssignment_3_1)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningNumerics__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_4__0__Impl
	rule__FunctionsReturningNumerics__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getMODKeyword_4_0()); }

	'MOD' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getMODKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_4_1()); }
(rule__FunctionsReturningNumerics__Group_4_1__0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningNumerics__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_4_1__0__Impl
	rule__FunctionsReturningNumerics__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getPrimarySimpleArithmeticExpressionAssignment_4_1_0()); }
(rule__FunctionsReturningNumerics__PrimarySimpleArithmeticExpressionAssignment_4_1_0)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getPrimarySimpleArithmeticExpressionAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_4_1__1__Impl
	rule__FunctionsReturningNumerics__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_4_1_1()); }

	',' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSecondarySimpleArithmeticExpressionAssignment_4_1_2()); }
(rule__FunctionsReturningNumerics__SecondarySimpleArithmeticExpressionAssignment_4_1_2)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSecondarySimpleArithmeticExpressionAssignment_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionsReturningNumerics__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_5__0__Impl
	rule__FunctionsReturningNumerics__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSIZEKeyword_5_0()); }

	'SIZE' 

{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSIZEKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningNumerics__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningNumerics__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getPathExpressionAssignment_5_1()); }
(rule__FunctionsReturningNumerics__PathExpressionAssignment_5_1)
{ after(grammarAccess.getFunctionsReturningNumericsAccess().getPathExpressionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningStrings__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_0__0__Impl
	rule__FunctionsReturningStrings__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getCONCATKeyword_0_0()); }

	'CONCAT' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getCONCATKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_0_1()); }
(rule__FunctionsReturningStrings__Group_0_1__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningStrings__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_0_1__0__Impl
	rule__FunctionsReturningStrings__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getPrimaryStringPrimaryAssignment_0_1_0()); }
(rule__FunctionsReturningStrings__PrimaryStringPrimaryAssignment_0_1_0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getPrimaryStringPrimaryAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_0_1__1__Impl
	rule__FunctionsReturningStrings__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_0_1_1()); }

	',' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getSecondaryStringPrimaryAssignment_0_1_2()); }
(rule__FunctionsReturningStrings__SecondaryStringPrimaryAssignment_0_1_2)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getSecondaryStringPrimaryAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionsReturningStrings__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_1__0__Impl
	rule__FunctionsReturningStrings__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getSUBSTRINGKeyword_1_0()); }

	'SUBSTRING' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getSUBSTRINGKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_1_1()); }
(rule__FunctionsReturningStrings__Group_1_1__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningStrings__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_1_1__0__Impl
	rule__FunctionsReturningStrings__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_1_1_0()); }
(rule__FunctionsReturningStrings__StringPrimaryAssignment_1_1_0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_1_1__1__Impl
	rule__FunctionsReturningStrings__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_1_1_1()); }

	',' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_1_1__2__Impl
	rule__FunctionsReturningStrings__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getPrimarySimpleArithmeticExpressionAssignment_1_1_2()); }
(rule__FunctionsReturningStrings__PrimarySimpleArithmeticExpressionAssignment_1_1_2)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getPrimarySimpleArithmeticExpressionAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_1_1__3__Impl
	rule__FunctionsReturningStrings__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_1_1_3()); }

	',' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getSecondarySimpleArithmeticExpressionAssignment_1_1_4()); }
(rule__FunctionsReturningStrings__SecondarySimpleArithmeticExpressionAssignment_1_1_4)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getSecondarySimpleArithmeticExpressionAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionsReturningStrings__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_2__0__Impl
	rule__FunctionsReturningStrings__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getTRIMKeyword_2_0()); }

	'TRIM' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getTRIMKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_2_1()); }
(rule__FunctionsReturningStrings__Group_2_1__0)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningStrings__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_2_1__0__Impl
	rule__FunctionsReturningStrings__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getGroup_2_1_0()); }
(rule__FunctionsReturningStrings__Group_2_1_0__0)?
{ after(grammarAccess.getFunctionsReturningStringsAccess().getGroup_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_2_1_1()); }
(rule__FunctionsReturningStrings__StringPrimaryAssignment_2_1_1)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningStrings__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_2_1_0__0__Impl
	rule__FunctionsReturningStrings__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getTrimSpecificationAssignment_2_1_0_0()); }
(rule__FunctionsReturningStrings__TrimSpecificationAssignment_2_1_0_0)?
{ after(grammarAccess.getFunctionsReturningStringsAccess().getTrimSpecificationAssignment_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_2_1_0__1__Impl
	rule__FunctionsReturningStrings__Group_2_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_2_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getTrimCharacterAssignment_2_1_0_1()); }
(rule__FunctionsReturningStrings__TrimCharacterAssignment_2_1_0_1)?
{ after(grammarAccess.getFunctionsReturningStringsAccess().getTrimCharacterAssignment_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_2_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_2_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_2_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getFROMKeyword_2_1_0_2()); }

	'FROM' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getFROMKeyword_2_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionsReturningStrings__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_3__0__Impl
	rule__FunctionsReturningStrings__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getLOWERKeyword_3_0()); }

	'LOWER' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getLOWERKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_3_1()); }
(rule__FunctionsReturningStrings__StringPrimaryAssignment_3_1)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionsReturningStrings__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_4__0__Impl
	rule__FunctionsReturningStrings__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getUPPERKeyword_4_0()); }

	'UPPER' 

{ after(grammarAccess.getFunctionsReturningStringsAccess().getUPPERKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionsReturningStrings__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionsReturningStrings__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_4_1()); }
(rule__FunctionsReturningStrings__StringPrimaryAssignment_4_1)
{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubQuery__Group__0__Impl
	rule__SubQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubQueryAccess().getSimpleSelectClauseAssignment_0()); }
(rule__SubQuery__SimpleSelectClauseAssignment_0)
{ after(grammarAccess.getSubQueryAccess().getSimpleSelectClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubQuery__Group__1__Impl
	rule__SubQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubQueryAccess().getSubqueryFromClauseAssignment_1()); }
(rule__SubQuery__SubqueryFromClauseAssignment_1)
{ after(grammarAccess.getSubQueryAccess().getSubqueryFromClauseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubQuery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubQueryAccess().getWhereClauseAssignment_2()); }
(rule__SubQuery__WhereClauseAssignment_2)?
{ after(grammarAccess.getSubQueryAccess().getWhereClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubqueryFromClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubqueryFromClause__Group__0__Impl
	rule__SubqueryFromClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubqueryFromClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getFROMKeyword_0()); }

	'FROM' 

{ after(grammarAccess.getSubqueryFromClauseAccess().getFROMKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubqueryFromClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubqueryFromClause__Group__1__Impl
	rule__SubqueryFromClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubqueryFromClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationAssignment_1()); }
(rule__SubqueryFromClause__SubselectIdentificationVariableDeclarationAssignment_1)
{ after(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubqueryFromClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubqueryFromClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubqueryFromClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getGroup_2()); }
(rule__SubqueryFromClause__Group_2__0)*
{ after(grammarAccess.getSubqueryFromClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubqueryFromClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubqueryFromClause__Group_2__0__Impl
	rule__SubqueryFromClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubqueryFromClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSubqueryFromClauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubqueryFromClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubqueryFromClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubqueryFromClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationAssignment_2_1()); }
(rule__SubqueryFromClause__SubselectIdentificationVariableDeclarationAssignment_2_1)
{ after(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubselectIdentificationVariableDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubselectIdentificationVariableDeclaration__Group_1__0__Impl
	rule__SubselectIdentificationVariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getAssociationPathExpressionAssignment_1_0()); }
(rule__SubselectIdentificationVariableDeclaration__AssociationPathExpressionAssignment_1_0)
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getAssociationPathExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubselectIdentificationVariableDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubselectIdentificationVariableDeclaration__Group_1__1__Impl
	rule__SubselectIdentificationVariableDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getASKeyword_1_1()); }
(
	'AS' 
)?
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getASKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubselectIdentificationVariableDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubselectIdentificationVariableDeclaration__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableAssignment_1_2()); }
(rule__SubselectIdentificationVariableDeclaration__IdentificationVariableAssignment_1_2)
{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleSelectClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectClause__Group__0__Impl
	rule__SimpleSelectClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectClauseAccess().getSELECTKeyword_0()); }

	'SELECT' 

{ after(grammarAccess.getSimpleSelectClauseAccess().getSELECTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelectClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectClause__Group__1__Impl
	rule__SimpleSelectClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectClauseAccess().getDISTINCTKeyword_1()); }
(
	'DISTINCT' 
)?
{ after(grammarAccess.getSimpleSelectClauseAccess().getDISTINCTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelectClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectClauseAccess().getSimpleSelectExpressionAssignment_2()); }
(rule__SimpleSelectClause__SimpleSelectExpressionAssignment_2)
{ after(grammarAccess.getSimpleSelectClauseAccess().getSimpleSelectExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InputParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputParameter__Group__0__Impl
	rule__InputParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputParameterAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getInputParameterAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputParameterAccess().getNameAssignment_1()); }
(rule__InputParameter__NameAssignment_1)
{ after(grammarAccess.getInputParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getApostropheKeyword_0()); }

	'\'' 

{ after(grammarAccess.getStringLiteralAccess().getApostropheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
	rule__StringLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getLiteralAssignment_1()); }
(rule__StringLiteral__LiteralAssignment_1)
{ after(grammarAccess.getStringLiteralAccess().getLiteralAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getApostropheKeyword_2()); }

	'\'' 

{ after(grammarAccess.getStringLiteralAccess().getApostropheKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportNameSpace__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportNameSpace__Group__0__Impl
	rule__ImportNameSpace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportNameSpace__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportNameSpaceAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getImportNameSpaceAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportNameSpace__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportNameSpace__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportNameSpace__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportNameSpaceAccess().getGroup_1()); }
(rule__ImportNameSpace__Group_1__0)?
{ after(grammarAccess.getImportNameSpaceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportNameSpace__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportNameSpace__Group_1__0__Impl
	rule__ImportNameSpace__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportNameSpace__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportNameSpaceAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getImportNameSpaceAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportNameSpace__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportNameSpace__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportNameSpace__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportNameSpaceAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getImportNameSpaceAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__0__Impl
	rule__XAssignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0()); }
(

)
{ after(grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__1__Impl
	rule__XAssignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_1()); }
(rule__XAssignment__FeatureAssignment_0_1)
{ after(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__2__Impl
	rule__XAssignment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
	ruleOpSingleAssign
{ after(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getValueAssignment_0_3()); }
(rule__XAssignment__ValueAssignment_0_3)
{ after(grammarAccess.getXAssignmentAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XAssignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1__0__Impl
	rule__XAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); }
	ruleXOrExpression
{ after(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1()); }
(rule__XAssignment__Group_1_1__0)?
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1__0__Impl
	rule__XAssignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1_0()); }
(rule__XAssignment__Group_1_1_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_1_1_1()); }
(rule__XAssignment__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1_0_0()); }
(rule__XAssignment__Group_1_1_0_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAssignment__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0_0__0__Impl
	rule__XAssignment__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__XAssignment__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__0__Impl
	rule__XOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
	ruleXAndExpression
{ after(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
(rule__XOrExpression__Group_1__0)*
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__0__Impl
	rule__XOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
(rule__XOrExpression__Group_1_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOrExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
(rule__XOrExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__0__Impl
	rule__XOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOrExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__0__Impl
	rule__XAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
	ruleXEqualityExpression
{ after(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
(rule__XAndExpression__Group_1__0)*
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__0__Impl
	rule__XAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
(rule__XAndExpression__Group_1_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAndExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
(rule__XAndExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__0__Impl
	rule__XAndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAndExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__0__Impl
	rule__XEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
	ruleXRelationalExpression
{ after(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
(rule__XEqualityExpression__Group_1__0)*
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__0__Impl
	rule__XEqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
(rule__XEqualityExpression__Group_1_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XEqualityExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
(rule__XEqualityExpression__Group_1_0_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XEqualityExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__0__Impl
	rule__XEqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XEqualityExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__0__Impl
	rule__XRelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
	ruleXOtherOperatorExpression
{ after(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
(rule__XRelationalExpression__Alternatives_1)*
{ after(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0__0__Impl
	rule__XRelationalExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
(rule__XRelationalExpression__Group_1_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
(rule__XRelationalExpression__TypeAssignment_1_0_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0()); }
(rule__XRelationalExpression__Group_1_0_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XRelationalExpression__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0_0__0__Impl
	rule__XRelationalExpression__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }

	'instanceof' 

{ after(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1__0__Impl
	rule__XRelationalExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0()); }
(rule__XRelationalExpression__Group_1_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
(rule__XRelationalExpression__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0()); }
(rule__XRelationalExpression__Group_1_1_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XRelationalExpression__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0_0__0__Impl
	rule__XRelationalExpression__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__0__Impl
	rule__XOtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
	ruleXAdditiveExpression
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
(rule__XOtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__0__Impl
	rule__XOtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
(rule__XOtherOperatorExpression__Group_1_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOtherOperatorExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
(rule__XOtherOperatorExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOtherOperatorExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
	rule__XOtherOperatorExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__0__Impl
	rule__OpOther__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }

	'..' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__0__Impl
	rule__OpOther__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
(rule__OpOther__Alternatives_5_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
(rule__OpOther__Group_5_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_5_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__0__Impl
	rule__OpOther__Group_5_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__0__Impl
	rule__OpOther__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
(rule__OpOther__Alternatives_6_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
(rule__OpOther__Group_6_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_6_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__0__Impl
	rule__OpOther__Group_6_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__0__Impl
	rule__XAdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
	ruleXMultiplicativeExpression
{ after(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
(rule__XAdditiveExpression__Group_1__0)*
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__0__Impl
	rule__XAdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
(rule__XAdditiveExpression__Group_1_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAdditiveExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
(rule__XAdditiveExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAdditiveExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__0__Impl
	rule__XAdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAdditiveExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__0__Impl
	rule__XMultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
	ruleXUnaryOperation
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
(rule__XMultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__0__Impl
	rule__XMultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
(rule__XMultiplicativeExpression__Group_1_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XMultiplicativeExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
(rule__XMultiplicativeExpression__Group_1_0_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMultiplicativeExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
	rule__XMultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XUnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__0__Impl
	rule__XUnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__1__Impl
	rule__XUnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
(rule__XUnaryOperation__FeatureAssignment_0_1)
{ after(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
(rule__XUnaryOperation__OperandAssignment_0_2)
{ after(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCastedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group__0__Impl
	rule__XCastedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); }
	ruleXMemberFeatureCall
{ after(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1()); }
(rule__XCastedExpression__Group_1__0)*
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCastedExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1__0__Impl
	rule__XCastedExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1_0()); }
(rule__XCastedExpression__Group_1_0__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1_1()); }
(rule__XCastedExpression__TypeAssignment_1_1)
{ after(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCastedExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1_0_0()); }
(rule__XCastedExpression__Group_1_0_0__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XCastedExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0_0__0__Impl
	rule__XCastedExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1()); }

	'as' 

{ after(grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group__0__Impl
	rule__XMemberFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
	ruleXPrimaryExpression
{ after(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1()); }
(rule__XMemberFeatureCall__Alternatives_1)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0__0__Impl
	rule__XMemberFeatureCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0()); }
(rule__XMemberFeatureCall__Group_1_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
(rule__XMemberFeatureCall__ValueAssignment_1_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0_0()); }
(rule__XMemberFeatureCall__Group_1_0_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMemberFeatureCall__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__0__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__1__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1()); }

	'.' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__2__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
(rule__XMemberFeatureCall__FeatureAssignment_1_0_0_0_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
	ruleOpSingleAssign
{ after(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XMemberFeatureCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0()); }
(rule__XMemberFeatureCall__Group_1_1_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__1__Impl
	rule__XMemberFeatureCall__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_1__0)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__2__Impl
	rule__XMemberFeatureCall__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
(rule__XMemberFeatureCall__FeatureAssignment_1_1_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__3__Impl
	rule__XMemberFeatureCall__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3()); }
(rule__XMemberFeatureCall__Group_1_1_3__0)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_4)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XMemberFeatureCall__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0()); }
(rule__XMemberFeatureCall__Group_1_1_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMemberFeatureCall__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0_0__0__Impl
	rule__XMemberFeatureCall__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
(rule__XMemberFeatureCall__Alternatives_1_1_0_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }

	'<' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__1__Impl
	rule__XMemberFeatureCall__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
(rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__2__Impl
	rule__XMemberFeatureCall__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1_2()); }
(rule__XMemberFeatureCall__Group_1_1_1_2__0)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }

	'>' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XMemberFeatureCall__Group_1_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1_2__0__Impl
	rule__XMemberFeatureCall__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }

	',' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
(rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
(rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__1__Impl
	rule__XMemberFeatureCall__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
(rule__XMemberFeatureCall__Alternatives_1_1_3_1)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }

	')' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XMemberFeatureCall__Group_1_1_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }

	',' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSetLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__0__Impl
	rule__XSetLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
(

)
{ after(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__1__Impl
	rule__XSetLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__2__Impl
	rule__XSetLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__3__Impl
	rule__XSetLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_3()); }
(rule__XSetLiteral__Group_3__0)?
{ after(grammarAccess.getXSetLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XSetLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3__0__Impl
	rule__XSetLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0()); }
(rule__XSetLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_3_1()); }
(rule__XSetLiteral__Group_3_1__0)*
{ after(grammarAccess.getXSetLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSetLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3_1__0__Impl
	rule__XSetLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__XSetLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__0__Impl
	rule__XListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
(

)
{ after(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__1__Impl
	rule__XListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__2__Impl
	rule__XListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__3__Impl
	rule__XListLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_3()); }
(rule__XListLiteral__Group_3__0)?
{ after(grammarAccess.getXListLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XListLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3__0__Impl
	rule__XListLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0()); }
(rule__XListLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_3_1()); }
(rule__XListLiteral__Group_3_1__0)*
{ after(grammarAccess.getXListLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3_1__0__Impl
	rule__XListLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__XListLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__0__Impl
	rule__XClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_0()); }
(rule__XClosure__Group_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__1__Impl
	rule__XClosure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1()); }
(rule__XClosure__Group_1__0)?
{ after(grammarAccess.getXClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__2__Impl
	rule__XClosure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionAssignment_2()); }
(rule__XClosure__ExpressionAssignment_2)
{ after(grammarAccess.getXClosureAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_0_0()); }
(rule__XClosure__Group_0_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0_0__0__Impl
	rule__XClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getXClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getXClosureAccess().getXClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }

	'[' 

{ after(grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0()); }
(rule__XClosure__Group_1_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XClosure__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0__0__Impl
	rule__XClosure__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0_0()); }
(rule__XClosure__Group_1_0_0__0)?
{ after(grammarAccess.getXClosureAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
(rule__XClosure__ExplicitSyntaxAssignment_1_0_1)
{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0__0__Impl
	rule__XClosure__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
(rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0)
{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0_0_1()); }
(rule__XClosure__Group_1_0_0_1__0)*
{ after(grammarAccess.getXClosureAccess().getGroup_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0_1__0__Impl
	rule__XClosure__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0()); }

	',' 

{ after(grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
(rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1)
{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionInClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group__0__Impl
	rule__XExpressionInClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionInClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getGroup_1()); }
(rule__XExpressionInClosure__Group_1__0)*
{ after(grammarAccess.getXExpressionInClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionInClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group_1__0__Impl
	rule__XExpressionInClosure__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
(rule__XExpressionInClosure__ExpressionsAssignment_1_0)
{ after(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionInClosure__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
(
	';' 
)?
{ after(grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group__0__Impl
	rule__XShortClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0()); }
(rule__XShortClosure__Group_0__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1()); }
(rule__XShortClosure__ExpressionAssignment_1)
{ after(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0()); }
(rule__XShortClosure__Group_0_0__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XShortClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__0__Impl
	rule__XShortClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__1__Impl
	rule__XShortClosure__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0_1()); }
(rule__XShortClosure__Group_0_0_1__0)?
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
(rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2)
{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XShortClosure__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1__0__Impl
	rule__XShortClosure__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
(rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0)
{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1()); }
(rule__XShortClosure__Group_0_0_1_1__0)*
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group_0_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1_1__0__Impl
	rule__XShortClosure__Group_0_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }

	',' 

{ after(grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
(rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1)
{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__0__Impl
	rule__XParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__1__Impl
	rule__XParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__0__Impl
	rule__XIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__1__Impl
	rule__XIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__2__Impl
	rule__XIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__3__Impl
	rule__XIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
(rule__XIfExpression__IfAssignment_3)
{ after(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__4__Impl
	rule__XIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__5__Impl
	rule__XIfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
(rule__XIfExpression__ThenAssignment_5)
{ after(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
(rule__XIfExpression__Group_6__0)?
{ after(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XIfExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__0__Impl
	rule__XIfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
(rule__XIfExpression__ElseAssignment_6_1)
{ after(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__0__Impl
	rule__XSwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__1__Impl
	rule__XSwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__2__Impl
	rule__XSwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getAlternatives_2()); }
(rule__XSwitchExpression__Alternatives_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__3__Impl
	rule__XSwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__4__Impl
	rule__XSwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__XSwitchExpression__CasesAssignment_4)
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
)
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__XSwitchExpression__CasesAssignment_4)*
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__5__Impl
	rule__XSwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_5()); }
(rule__XSwitchExpression__Group_5__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XSwitchExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0__0__Impl
	rule__XSwitchExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0()); }
(rule__XSwitchExpression__Group_2_0_0__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
(rule__XSwitchExpression__SwitchAssignment_2_0_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0_0()); }
(rule__XSwitchExpression__Group_2_0_0_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XSwitchExpression__Group_2_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0_0__0__Impl
	rule__XSwitchExpression__Group_2_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_0_0_0_0()); }
(rule__XSwitchExpression__LocalVarNameAssignment_2_0_0_0_0)
{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__0__Impl
	rule__XSwitchExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0()); }
(rule__XSwitchExpression__Group_2_1_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__1__Impl
	rule__XSwitchExpression__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
(rule__XSwitchExpression__SwitchAssignment_2_1_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2()); }

	')' 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSwitchExpression__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0_0()); }
(rule__XSwitchExpression__Group_2_1_0_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XSwitchExpression__Group_2_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__0__Impl
	rule__XSwitchExpression__Group_2_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0()); }

	'(' 

{ after(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__1__Impl
	rule__XSwitchExpression__Group_2_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_1_0_0_1()); }
(rule__XSwitchExpression__LocalVarNameAssignment_2_1_0_0_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSwitchExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__0__Impl
	rule__XSwitchExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0()); }

	'default' 

{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__1__Impl
	rule__XSwitchExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_5_2()); }
(rule__XSwitchExpression__DefaultAssignment_5_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__0__Impl
	rule__XCasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_0()); }
(rule__XCasePart__TypeGuardAssignment_0)?
{ after(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__1__Impl
	rule__XCasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getGroup_1()); }
(rule__XCasePart__Group_1__0)?
{ after(grammarAccess.getXCasePartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__2__Impl
	rule__XCasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
(rule__XCasePart__ThenAssignment_3)
{ after(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XCasePart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_1__0__Impl
	rule__XCasePart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseKeyword_1_0()); }

	'case' 

{ after(grammarAccess.getXCasePartAccess().getCaseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseAssignment_1_1()); }
(rule__XCasePart__CaseAssignment_1_1)
{ after(grammarAccess.getXCasePartAccess().getCaseAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XForLoopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__0__Impl
	rule__XForLoopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0()); }
(

)
{ after(grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__1__Impl
	rule__XForLoopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getXForLoopExpressionAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__2__Impl
	rule__XForLoopExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__3__Impl
	rule__XForLoopExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_3()); }
(rule__XForLoopExpression__DeclaredParamAssignment_3)
{ after(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__4__Impl
	rule__XForLoopExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__5__Impl
	rule__XForLoopExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_5()); }
(rule__XForLoopExpression__ForExpressionAssignment_5)
{ after(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__6__Impl
	rule__XForLoopExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_7()); }
(rule__XForLoopExpression__EachExpressionAssignment_7)
{ after(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__XWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__0__Impl
	rule__XWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__1__Impl
	rule__XWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1()); }

	'while' 

{ after(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__2__Impl
	rule__XWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__3__Impl
	rule__XWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3()); }
(rule__XWhileExpression__PredicateAssignment_3)
{ after(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__4__Impl
	rule__XWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5()); }
(rule__XWhileExpression__BodyAssignment_5)
{ after(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XDoWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__0__Impl
	rule__XDoWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__1__Impl
	rule__XDoWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1()); }

	'do' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__2__Impl
	rule__XDoWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2()); }
(rule__XDoWhileExpression__BodyAssignment_2)
{ after(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__3__Impl
	rule__XDoWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3()); }

	'while' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__4__Impl
	rule__XDoWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__5__Impl
	rule__XDoWhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5()); }
(rule__XDoWhileExpression__PredicateAssignment_5)
{ after(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XBlockExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__0__Impl
	rule__XBlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__1__Impl
	rule__XBlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__2__Impl
	rule__XBlockExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup_2()); }
(rule__XBlockExpression__Group_2__0)*
{ after(grammarAccess.getXBlockExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XBlockExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group_2__0__Impl
	rule__XBlockExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2_0()); }
(rule__XBlockExpression__ExpressionsAssignment_2_0)
{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1()); }
(
	';' 
)?
{ after(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__0__Impl
	rule__XVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0()); }
(

)
{ after(grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__1__Impl
	rule__XVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getAlternatives_1()); }
(rule__XVariableDeclaration__Alternatives_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__2__Impl
	rule__XVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getAlternatives_2()); }
(rule__XVariableDeclaration__Alternatives_2)
{ after(grammarAccess.getXVariableDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_3()); }
(rule__XVariableDeclaration__Group_3__0)?
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XVariableDeclaration__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0_0()); }
(rule__XVariableDeclaration__Group_2_0_0__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XVariableDeclaration__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0_0__0__Impl
	rule__XVariableDeclaration__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_2_0_0_0()); }
(rule__XVariableDeclaration__TypeAssignment_2_0_0_0)
{ after(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_0_0_1()); }
(rule__XVariableDeclaration__NameAssignment_2_0_0_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XVariableDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_3__0__Impl
	rule__XVariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3_1()); }
(rule__XVariableDeclaration__RightAssignment_3_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__0__Impl
	rule__JvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__JvmFormalParameter__ParameterTypeAssignment_0)?
{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__JvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FullJvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__0__Impl
	rule__FullJvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__FullJvmFormalParameter__ParameterTypeAssignment_0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FullJvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__FullJvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__0__Impl
	rule__XFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0()); }
(

)
{ after(grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__1__Impl
	rule__XFeatureCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getDeclaringTypeAssignment_1()); }
(rule__XFeatureCall__DeclaringTypeAssignment_1)?
{ after(grammarAccess.getXFeatureCallAccess().getDeclaringTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__2__Impl
	rule__XFeatureCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_2()); }
(rule__XFeatureCall__Group_2__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__3__Impl
	rule__XFeatureCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_3()); }
(rule__XFeatureCall__FeatureAssignment_3)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__4__Impl
	rule__XFeatureCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_4()); }
(rule__XFeatureCall__Group_4__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_5()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_5)?
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XFeatureCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_2__0__Impl
	rule__XFeatureCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_2__1__Impl
	rule__XFeatureCall__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_2_1()); }
(rule__XFeatureCall__TypeArgumentsAssignment_2_1)
{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_2__2__Impl
	rule__XFeatureCall__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_2_2()); }
(rule__XFeatureCall__Group_2_2__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XFeatureCall__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_2_2__0__Impl
	rule__XFeatureCall__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_2_2_1()); }
(rule__XFeatureCall__TypeArgumentsAssignment_2_2_1)
{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_4__0__Impl
	rule__XFeatureCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_4_0()); }
(rule__XFeatureCall__ExplicitOperationCallAssignment_4_0)
{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_4__1__Impl
	rule__XFeatureCall__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getAlternatives_4_1()); }
(rule__XFeatureCall__Alternatives_4_1)?
{ after(grammarAccess.getXFeatureCallAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFeatureCall__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_4_1_1__0__Impl
	rule__XFeatureCall__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4_1_1_0()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_4_1_1_0)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_4_1_1_1()); }
(rule__XFeatureCall__Group_4_1_1_1__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_4_1_1_1__0__Impl
	rule__XFeatureCall__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getCommaKeyword_4_1_1_1_0()); }

	',' 

{ after(grammarAccess.getXFeatureCallAccess().getCommaKeyword_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4_1_1_1_1()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_4_1_1_1_1)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticQualifier__Group__0__Impl
	rule__StaticQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticQualifierAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getStaticQualifierAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticQualifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticQualifierAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getStaticQualifierAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__0__Impl
	rule__XConstructorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0()); }
(

)
{ after(grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__1__Impl
	rule__XConstructorCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getNewKeyword_1()); }

	'new' 

{ after(grammarAccess.getXConstructorCallAccess().getNewKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__2__Impl
	rule__XConstructorCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2()); }
(rule__XConstructorCall__ConstructorAssignment_2)
{ after(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__3__Impl
	rule__XConstructorCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_3()); }
(rule__XConstructorCall__Group_3__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__4__Impl
	rule__XConstructorCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4()); }
(rule__XConstructorCall__Group_4__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_5()); }
(rule__XConstructorCall__ArgumentsAssignment_5)?
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XConstructorCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__0__Impl
	rule__XConstructorCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0()); }
(
	'<' 
)
{ after(grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__1__Impl
	rule__XConstructorCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
(rule__XConstructorCall__TypeArgumentsAssignment_3_1)
{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__2__Impl
	rule__XConstructorCall__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_3_2()); }
(rule__XConstructorCall__Group_3_2__0)*
{ after(grammarAccess.getXConstructorCallAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XConstructorCall__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3_2__0__Impl
	rule__XConstructorCall__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
(rule__XConstructorCall__TypeArgumentsAssignment_3_2_1)
{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__0__Impl
	rule__XConstructorCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0()); }
(
	'(' 
)
{ after(grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__1__Impl
	rule__XConstructorCall__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getAlternatives_4_1()); }
(rule__XConstructorCall__Alternatives_4_1)?
{ after(grammarAccess.getXConstructorCallAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XConstructorCall__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1__0__Impl
	rule__XConstructorCall__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_1_0)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1_1()); }
(rule__XConstructorCall__Group_4_1_1_1__0)*
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1_1__0__Impl
	rule__XConstructorCall__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }

	',' 

{ after(grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_1_1_1)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__0__Impl
	rule__XBooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
(rule__XBooleanLiteral__Alternatives_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__0__Impl
	rule__XNullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__0__Impl
	rule__XNumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
(rule__XNumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XStringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__0__Impl
	rule__XStringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
(rule__XStringLiteral__ValueAssignment_1)
{ after(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTypeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__0__Impl
	rule__XTypeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0()); }
(

)
{ after(grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__1__Impl
	rule__XTypeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1()); }

	'typeof' 

{ after(grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__2__Impl
	rule__XTypeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__3__Impl
	rule__XTypeLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3()); }
(rule__XTypeLiteral__TypeAssignment_3)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__4__Impl
	rule__XTypeLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4()); }
(rule__XTypeLiteral__ArrayDimensionsAssignment_4)*
{ after(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XThrowExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__0__Impl
	rule__XThrowExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0()); }
(

)
{ after(grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XThrowExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__1__Impl
	rule__XThrowExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1()); }

	'throw' 

{ after(grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XThrowExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2()); }
(rule__XThrowExpression__ExpressionAssignment_2)
{ after(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XReturnExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__0__Impl
	rule__XReturnExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0()); }
(

)
{ after(grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XReturnExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__1__Impl
	rule__XReturnExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XReturnExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2()); }
(rule__XReturnExpression__ExpressionAssignment_2)?
{ after(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XTryCatchFinallyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__0__Impl
	rule__XTryCatchFinallyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0()); }
(

)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__1__Impl
	rule__XTryCatchFinallyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1()); }

	'try' 

{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__2__Impl
	rule__XTryCatchFinallyExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
(rule__XTryCatchFinallyExpression__ExpressionAssignment_2)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3()); }
(rule__XTryCatchFinallyExpression__Alternatives_3)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XTryCatchFinallyExpression__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0)*
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
(rule__XTryCatchFinallyExpression__Group_3_0_1__0)?
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTryCatchFinallyExpression__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0_1__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
(
	'finally' 
)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
(rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTryCatchFinallyExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_1__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }

	'finally' 

{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
(rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCatchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__0__Impl
	rule__XCatchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getCatchKeyword_0()); }
(
	'catch' 
)
{ after(grammarAccess.getXCatchClauseAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__1__Impl
	rule__XCatchClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__2__Impl
	rule__XCatchClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2()); }
(rule__XCatchClause__DeclaredParamAssignment_2)
{ after(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__3__Impl
	rule__XCatchClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4()); }
(rule__XCatchClause__ExpressionAssignment_4)
{ after(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
(rule__Number__Alternatives_1_0)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_1_1()); }
(rule__Number__Group_1_1__0)?
{ after(grammarAccess.getNumberAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__0__Impl
	rule__Number__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
(rule__Number__Alternatives_1_1_1)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmTypeReference__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__0__Impl
	rule__JvmTypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
	ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
(rule__JvmTypeReference__Group_0_1__0)*
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmTypeReference__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
(rule__JvmTypeReference__Group_0_1_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__JvmTypeReference__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__0__Impl
	rule__JvmTypeReference__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
(

)
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
	ruleArrayBrackets
{ after(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayBrackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__0__Impl
	rule__ArrayBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayBrackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }

	']' 

{ after(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__0__Impl
	rule__XFunctionTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
(rule__XFunctionTypeRef__Group_0__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__1__Impl
	rule__XFunctionTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
(rule__XFunctionTypeRef__ReturnTypeAssignment_2)
{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__0__Impl
	rule__XFunctionTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__1__Impl
	rule__XFunctionTypeRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
(rule__XFunctionTypeRef__Group_0_1__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
(rule__XFunctionTypeRef__Group_0_1_1__0)*
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }

	',' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__0__Impl
	rule__JvmParameterizedTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
(rule__JvmParameterizedTypeReference__TypeAssignment_0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
(rule__JvmParameterizedTypeReference__Group_1__0)?
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__0__Impl
	rule__JvmParameterizedTypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
(
	'<' 
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__1__Impl
	rule__JvmParameterizedTypeReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__2__Impl
	rule__JvmParameterizedTypeReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
(rule__JvmParameterizedTypeReference__Group_1_2__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JvmParameterizedTypeReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmWildcardTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__0__Impl
	rule__JvmWildcardTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
(

)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__1__Impl
	rule__JvmWildcardTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }

	'?' 

{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
(rule__JvmWildcardTypeReference__Alternatives_2)?
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JvmUpperBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__0__Impl
	rule__JvmUpperBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }

	'extends' 

{ after(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmUpperBoundAnded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__0__Impl
	rule__JvmUpperBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }

	'&' 

{ after(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBoundAnded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBoundAnded__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmLowerBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__0__Impl
	rule__JvmLowerBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }

	'super' 

{ after(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmLowerBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
	rule__QualifiedNameWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__0__Impl
	rule__XImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__1__Impl
	rule__XImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
(rule__XImportDeclaration__Alternatives_1)
{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__0__Impl
	rule__XImportDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
(rule__XImportDeclaration__StaticAssignment_1_0_0)
{ after(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__1__Impl
	rule__XImportDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
(rule__XImportDeclaration__ExtensionAssignment_1_0_1)?
{ after(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__2__Impl
	rule__XImportDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_0_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__3__Impl
	rule__XImportDeclaration__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getFullStopKeyword_1_0_3()); }

	'.' 

{ after(grammarAccess.getXImportDeclarationAccess().getFullStopKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAsteriskKeyword_1_0_4()); }

	'*' 

{ after(grammarAccess.getXImportDeclarationAccess().getAsteriskKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__XmlDescriptorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getXmlDescriptorXMLDescriptorParserRuleCall_0_0()); }
	ruleXMLDescriptor{ after(grammarAccess.getModelAccess().getXmlDescriptorXMLDescriptorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_5_0()); }
	ruleQualifiedName{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NamedQueriesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNamedQueriesNamedQueryParserRuleCall_8_0()); }
	ruleNamedQuery{ after(grammarAccess.getModelAccess().getNamedQueriesNamedQueryParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNamedQueryAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__QlStatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getQlStatementQLStatementParserRuleCall_4_0()); }
	ruleQLStatement{ after(grammarAccess.getNamedQueryAccess().getQlStatementQLStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QLStatement__SelectStatementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQLStatementAccess().getSelectStatementsSelectStatementParserRuleCall_0()); }
	ruleSelectStatement{ after(grammarAccess.getQLStatementAccess().getSelectStatementsSelectStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__SelectClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getSelectClauseSelectClauseParserRuleCall_0_0()); }
	ruleSelectClause{ after(grammarAccess.getSelectStatementAccess().getSelectClauseSelectClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__FromClauseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getFromClauseFromClauseParserRuleCall_1_0()); }
	ruleFromClause{ after(grammarAccess.getSelectStatementAccess().getFromClauseFromClauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__WhereClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); }
	ruleWhereClause{ after(grammarAccess.getSelectStatementAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__IdentificationVariableDeclarationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsIdentificationVariableDeclarationParserRuleCall_1_0()); }
	ruleIdentificationVariableDeclaration{ after(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsIdentificationVariableDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__IdentificationVariableDeclarationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsAlternatives_2_1_0()); }
(rule__FromClause__IdentificationVariableDeclarationsAlternatives_2_1_0)
{ after(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsAlternatives_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentificationVariableDeclaration__RangeVariableDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentificationVariableDeclarationAccess().getRangeVariableDeclarationRangeVariableDeclarationParserRuleCall_0_0()); }
	ruleRangeVariableDeclaration{ after(grammarAccess.getIdentificationVariableDeclarationAccess().getRangeVariableDeclarationRangeVariableDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentificationVariableDeclaration__JoinsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsAlternatives_1_0()); }
(rule__IdentificationVariableDeclaration__JoinsAlternatives_1_0)
{ after(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeVariableDeclaration__AbstractSchemaNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeVariableDeclarationAccess().getAbstractSchemaNameEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getRangeVariableDeclarationAccess().getAbstractSchemaNameEntityIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRangeVariableDeclarationAccess().getAbstractSchemaNameEntityIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRangeVariableDeclarationAccess().getAbstractSchemaNameEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeVariableDeclaration__IdentificationVariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeVariableDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_2_0()); }
	ruleIdentificationVariable{ after(grammarAccess.getRangeVariableDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join__JoinSpecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getJoinSpecJoinSpecParserRuleCall_0_0()); }
	ruleJoinSpec{ after(grammarAccess.getJoinAccess().getJoinSpecJoinSpecParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join__JoinAssociationPathExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getJoinAssociationPathExpressionJPAPathExpressionParserRuleCall_1_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getJoinAccess().getJoinAssociationPathExpressionJPAPathExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join__IdentificationVariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getIdentificationVariableIdentificationVariableParserRuleCall_3_0()); }
	ruleIdentificationVariable{ after(grammarAccess.getJoinAccess().getIdentificationVariableIdentificationVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__JoinSpecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getJoinSpecJoinSpecParserRuleCall_0_0()); }
	ruleJoinSpec{ after(grammarAccess.getFetchJoinAccess().getJoinSpecJoinSpecParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__JoinAssociationPathExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getJoinAssociationPathExpressionJPAPathExpressionParserRuleCall_2_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getFetchJoinAccess().getJoinAssociationPathExpressionJPAPathExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FetchJoin__IdentificationVariableAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFetchJoinAccess().getIdentificationVariableIdentificationVariableParserRuleCall_4_0()); }
	ruleIdentificationVariable{ after(grammarAccess.getFetchJoinAccess().getIdentificationVariableIdentificationVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JPAPathExpression__RootAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJPAPathExpressionAccess().getRootIdentificationVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getJPAPathExpressionAccess().getRootIdentificationVariableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getJPAPathExpressionAccess().getRootIdentificationVariableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getJPAPathExpressionAccess().getRootIdentificationVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JPAPathExpression__JpaAttributesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJPAPathExpressionAccess().getJpaAttributesJpaAttributeParserRuleCall_1_1_0()); }
	ruleJpaAttribute{ after(grammarAccess.getJPAPathExpressionAccess().getJpaAttributesJpaAttributeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JpaAttribute__AttributeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJpaAttributeAccess().getAttributeAttributeCrossReference_0()); }
(
{ before(grammarAccess.getJpaAttributeAccess().getAttributeAttributeIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getJpaAttributeAccess().getAttributeAttributeIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getJpaAttributeAccess().getAttributeAttributeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberDeclaration__CollectionValuedPathExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberDeclarationAccess().getCollectionValuedPathExpressionJPAPathExpressionParserRuleCall_1_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getCollectionMemberDeclarationAccess().getCollectionValuedPathExpressionJPAPathExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberDeclaration__IdentificationVariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_3_0()); }
	ruleIdentificationVariable{ after(grammarAccess.getCollectionMemberDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__SelectExpressionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getSelectExpressionsSelectExpressionParserRuleCall_2_0()); }
	ruleSelectExpression{ after(grammarAccess.getSelectClauseAccess().getSelectExpressionsSelectExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__SelectExpressionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getSelectExpressionsSelectExpressionParserRuleCall_3_1_0()); }
	ruleSelectExpression{ after(grammarAccess.getSelectClauseAccess().getSelectExpressionsSelectExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__JpaPathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getJpaPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getSelectExpressionAccess().getJpaPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__AggregateExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getAggregateExpressionAggregateExpressionParserRuleCall_1_0()); }
	ruleAggregateExpression{ after(grammarAccess.getSelectExpressionAccess().getAggregateExpressionAggregateExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ConstructorExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getConstructorExpressionConstructorExpressionParserRuleCall_2_0()); }
	ruleConstructorExpression{ after(grammarAccess.getSelectExpressionAccess().getConstructorExpressionConstructorExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__ConstructorNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getConstructorNameConstructorNameParserRuleCall_1_0()); }
	ruleConstructorName{ after(grammarAccess.getConstructorExpressionAccess().getConstructorNameConstructorNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__ConstructorItemsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getConstructorItemsConstructorItemParserRuleCall_3_0()); }
	ruleConstructorItem{ after(grammarAccess.getConstructorExpressionAccess().getConstructorItemsConstructorItemParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorExpression__ConstructorItemsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorExpressionAccess().getConstructorItemsConstructorItemParserRuleCall_4_1_0()); }
	ruleConstructorItem{ after(grammarAccess.getConstructorExpressionAccess().getConstructorItemsConstructorItemParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__StateFieldPathExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateExpressionAccess().getStateFieldPathExpressionJPAPathExpressionParserRuleCall_2_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getAggregateExpressionAccess().getStateFieldPathExpressionJPAPathExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentificationVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentificationVariableAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getIdentificationVariableAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getConstructorNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__ConditionalExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_0()); }
	ruleConditionalExpression{ after(grammarAccess.getWhereClauseAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getRightConditionalTermParserRuleCall_1_2_0()); }
	ruleConditionalTerm{ after(grammarAccess.getConditionalExpressionAccess().getRightConditionalTermParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalTermAccess().getRightConditionalFactorParserRuleCall_1_2_0()); }
	ruleConditionalFactor{ after(grammarAccess.getConditionalTermAccess().getRightConditionalFactorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__ConditionalPrimaryAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getConditionalPrimarySimpleConditionalExpressionParserRuleCall_0_1_0()); }
	ruleSimpleConditionalExpression{ after(grammarAccess.getConditionalFactorAccess().getConditionalPrimarySimpleConditionalExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFactor__ConditionalExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFactorAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_1_0()); }
	ruleConditionalExpression{ after(grammarAccess.getConditionalFactorAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__ComparisionExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getComparisionExpressionComparisonExpressionParserRuleCall_0_0()); }
	ruleComparisonExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getComparisionExpressionComparisonExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__BetweenExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getBetweenExpressionBetweenExpressionParserRuleCall_1_0()); }
	ruleBetweenExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getBetweenExpressionBetweenExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__LikeExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getLikeExpressionLikeExpressionParserRuleCall_2_0()); }
	ruleLikeExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getLikeExpressionLikeExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__InExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getInExpressionInExpressionParserRuleCall_3_0()); }
	ruleInExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getInExpressionInExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__NullComparisionExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getNullComparisionExpressionNullComparisonExpressionParserRuleCall_4_0()); }
	ruleNullComparisonExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getNullComparisionExpressionNullComparisonExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__EmptyCollectionComparisonExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getEmptyCollectionComparisonExpressionEmptyCollectionComparisonExpressionParserRuleCall_5_0()); }
	ruleEmptyCollectionComparisonExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getEmptyCollectionComparisonExpressionEmptyCollectionComparisonExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__CollectionMemberExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getCollectionMemberExpressionCollectionMemberExpressionParserRuleCall_6_0()); }
	ruleCollectionMemberExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getCollectionMemberExpressionCollectionMemberExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleConditionalExpression__ExistsExpressionAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleConditionalExpressionAccess().getExistsExpressionExistsExpressionParserRuleCall_7_0()); }
	ruleExistsExpression{ after(grammarAccess.getSimpleConditionalExpressionAccess().getExistsExpressionExistsExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__PrimaryArithmeticExpressionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getPrimaryArithmeticExpressionArithmeticExpressionParserRuleCall_0_0_0()); }
	ruleArithmeticExpression{ after(grammarAccess.getBetweenExpressionAccess().getPrimaryArithmeticExpressionArithmeticExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__LowerArithmeticExpressionAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getLowerArithmeticExpressionArithmeticExpressionParserRuleCall_0_3_0()); }
	ruleArithmeticExpression{ after(grammarAccess.getBetweenExpressionAccess().getLowerArithmeticExpressionArithmeticExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__UpperArithmeticExpressionAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getUpperArithmeticExpressionArithmeticExpressionParserRuleCall_0_5_0()); }
	ruleArithmeticExpression{ after(grammarAccess.getBetweenExpressionAccess().getUpperArithmeticExpressionArithmeticExpressionParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__PrimaryStringExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getPrimaryStringExpressionStringExpressionParserRuleCall_1_0_0()); }
	ruleStringExpression{ after(grammarAccess.getBetweenExpressionAccess().getPrimaryStringExpressionStringExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__LowerStringExpressionAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getLowerStringExpressionStringExpressionParserRuleCall_1_3_0()); }
	ruleStringExpression{ after(grammarAccess.getBetweenExpressionAccess().getLowerStringExpressionStringExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__UpperStringExpressionAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getUpperStringExpressionStringExpressionParserRuleCall_1_5_0()); }
	ruleStringExpression{ after(grammarAccess.getBetweenExpressionAccess().getUpperStringExpressionStringExpressionParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__PrimaryDateTimeExpressionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getPrimaryDateTimeExpressionDateTimeExpressionParserRuleCall_2_0_0()); }
	ruleDateTimeExpression{ after(grammarAccess.getBetweenExpressionAccess().getPrimaryDateTimeExpressionDateTimeExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__LowerDateTimeExpressionAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getLowerDateTimeExpressionDateTimeExpressionParserRuleCall_2_3_0()); }
	ruleDateTimeExpression{ after(grammarAccess.getBetweenExpressionAccess().getLowerDateTimeExpressionDateTimeExpressionParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenExpression__UpperDateTimeExpressionAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBetweenExpressionAccess().getUpperDateTimeExpressionDateTimeExpressionParserRuleCall_2_5_0()); }
	ruleDateTimeExpression{ after(grammarAccess.getBetweenExpressionAccess().getUpperDateTimeExpressionDateTimeExpressionParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__PathExpressionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getInExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__InItemsAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getInItemsInItemParserRuleCall_0_4_0()); }
	ruleInItem{ after(grammarAccess.getInExpressionAccess().getInItemsInItemParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__InItemsAssignment_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getInItemsInItemParserRuleCall_0_5_1_0()); }
	ruleInItem{ after(grammarAccess.getInExpressionAccess().getInItemsInItemParserRuleCall_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__SubQueryAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInExpressionAccess().getSubQuerySubQueryParserRuleCall_1_0_0()); }
	ruleSubQuery{ after(grammarAccess.getInExpressionAccess().getSubQuerySubQueryParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InItem__LiteralAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInItemAccess().getLiteralLiteralParserRuleCall_0_0()); }
	ruleLiteral{ after(grammarAccess.getInItemAccess().getLiteralLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InItem__InputParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInItemAccess().getInputParameterInputParameterParserRuleCall_1_0()); }
	ruleInputParameter{ after(grammarAccess.getInItemAccess().getInputParameterInputParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__StringExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getStringExpressionStringExpressionParserRuleCall_0_0()); }
	ruleStringExpression{ after(grammarAccess.getLikeExpressionAccess().getStringExpressionStringExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__PatternValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getPatternValuePatternValueParserRuleCall_3_0()); }
	rulePatternValue{ after(grammarAccess.getLikeExpressionAccess().getPatternValuePatternValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LikeExpression__EscapeCharacterAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikeExpressionAccess().getEscapeCharacterEscapeCharacterParserRuleCall_4_1_0()); }
	ruleEscapeCharacter{ after(grammarAccess.getLikeExpressionAccess().getEscapeCharacterEscapeCharacterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullComparisonExpression__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getNullComparisonExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullComparisonExpression__InputParameterAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullComparisonExpressionAccess().getInputParameterInputParameterParserRuleCall_1_0_0()); }
	ruleInputParameter{ after(grammarAccess.getNullComparisonExpressionAccess().getInputParameterInputParameterParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyCollectionComparisonExpression__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberExpression__EntityExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getEntityExpressionEntityExpressionParserRuleCall_0_0()); }
	ruleEntityExpression{ after(grammarAccess.getCollectionMemberExpressionAccess().getEntityExpressionEntityExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMemberExpression__PathExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionMemberExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_4_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getCollectionMemberExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsExpression__SubQueryAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsExpressionAccess().getSubQuerySubQueryParserRuleCall_3_0()); }
	ruleSubQuery{ after(grammarAccess.getExistsExpressionAccess().getSubQuerySubQueryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllOrAnyExpression__SubQueryAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllOrAnyExpressionAccess().getSubQuerySubQueryParserRuleCall_2_0()); }
	ruleSubQuery{ after(grammarAccess.getAllOrAnyExpressionAccess().getSubQuerySubQueryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__PrimaryStringExpressionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryStringExpressionStringExpressionParserRuleCall_0_0_0()); }
	ruleStringExpression{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryStringExpressionStringExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__ComparisonOperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_0_1_0()); }
	ruleComparisonOperator{ after(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__SecondaryStringExpressionAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryStringExpressionStringExpressionParserRuleCall_0_2_0_0()); }
	ruleStringExpression{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryStringExpressionStringExpressionParserRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__AllOrAnyExpressionAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_0_2_1_0()); }
	ruleAllOrAnyExpression{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__PrimaryBooleanExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryBooleanExpressionBooleanExpressionParserRuleCall_1_0_0()); }
	ruleBooleanExpression{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryBooleanExpressionBooleanExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__SecondaryBooleanExpressionAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryBooleanExpressionBooleanExpressionParserRuleCall_1_2_0_0()); }
	ruleBooleanExpression{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryBooleanExpressionBooleanExpressionParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__AllOrAnyExpressionAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_1_2_1_0()); }
	ruleAllOrAnyExpression{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__PrimaryEnumExpressionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryEnumExpressionEnumExpressionParserRuleCall_2_0_0()); }
	ruleEnumExpression{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryEnumExpressionEnumExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__SecondaryEnumExpressionAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryEnumExpressionEnumExpressionParserRuleCall_2_2_0_0()); }
	ruleEnumExpression{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryEnumExpressionEnumExpressionParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__AllOrAnyExpressionAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_2_2_1_0()); }
	ruleAllOrAnyExpression{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__PrimaryDatetimeExpressionAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryDatetimeExpressionDateTimeExpressionParserRuleCall_3_0_0()); }
	ruleDateTimeExpression{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryDatetimeExpressionDateTimeExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__ComparisonOperatorAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_3_1_0()); }
	ruleComparisonOperator{ after(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__SecondaryDatetimeExpressionAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryDatetimeExpressionDateTimeExpressionParserRuleCall_3_2_0_0()); }
	ruleDateTimeExpression{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryDatetimeExpressionDateTimeExpressionParserRuleCall_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__AllOrAnyExpressionAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_3_2_1_0()); }
	ruleAllOrAnyExpression{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__PrimaryEntityExpressionAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryEntityExpressionEntityExpressionParserRuleCall_4_0_0()); }
	ruleEntityExpression{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryEntityExpressionEntityExpressionParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__SecondaryEntityExpressionAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryEntityExpressionEntityExpressionParserRuleCall_4_2_0_0()); }
	ruleEntityExpression{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryEntityExpressionEntityExpressionParserRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__AllOrAnyExpressionAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_4_2_1_0()); }
	ruleAllOrAnyExpression{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__PrimaryArithmeticExpressionAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getPrimaryArithmeticExpressionArithmeticExpressionParserRuleCall_5_0_0()); }
	ruleArithmeticExpression{ after(grammarAccess.getComparisonExpressionAccess().getPrimaryArithmeticExpressionArithmeticExpressionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__ComparisonOperatorAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_5_1_0()); }
	ruleComparisonOperator{ after(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__SecondaryArithmeticExpressionAssignment_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getSecondaryArithmeticExpressionArithmeticExpressionParserRuleCall_5_2_0_0()); }
	ruleArithmeticExpression{ after(grammarAccess.getComparisonExpressionAccess().getSecondaryArithmeticExpressionArithmeticExpressionParserRuleCall_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__AllOrAnyExpressionAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_5_2_1_0()); }
	ruleAllOrAnyExpression{ after(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__SimpleArithmeticExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_0_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getArithmeticExpressionAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__SubQueryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
	ruleSubQuery{ after(grammarAccess.getArithmeticExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__ArithmeticTermAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermArithmeticTermParserRuleCall_0_0()); }
	ruleArithmeticTerm{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermArithmeticTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleArithmeticExpression__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleArithmeticExpressionAccess().getRightArithmeticTermParserRuleCall_1_1_2_0()); }
	ruleArithmeticTerm{ after(grammarAccess.getSimpleArithmeticExpressionAccess().getRightArithmeticTermParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__ArithmeticFactorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getArithmeticFactorArithmeticFactorParserRuleCall_0_0()); }
	ruleArithmeticFactor{ after(grammarAccess.getArithmeticTermAccess().getArithmeticFactorArithmeticFactorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticTerm__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticTermAccess().getRightArithmeticFactorParserRuleCall_1_1_2_0()); }
	ruleArithmeticFactor{ after(grammarAccess.getArithmeticTermAccess().getRightArithmeticFactorParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticFactor__ArithmeticPrimaryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticFactorAccess().getArithmeticPrimaryArithmeticPrimaryParserRuleCall_1_0()); }
	ruleArithmeticPrimary{ after(grammarAccess.getArithmeticFactorAccess().getArithmeticPrimaryArithmeticPrimaryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getArithmeticPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__NumericLiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getNumericLiteralNumericLiteralParserRuleCall_1_0()); }
	ruleNumericLiteral{ after(grammarAccess.getArithmeticPrimaryAccess().getNumericLiteralNumericLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__SimpleArithmeticExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_2_1_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getArithmeticPrimaryAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__InputParameterAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getInputParameterInputParameterParserRuleCall_3_0()); }
	ruleInputParameter{ after(grammarAccess.getArithmeticPrimaryAccess().getInputParameterInputParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__FunctionsReturningNumericsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getFunctionsReturningNumericsFunctionsReturningNumericsParserRuleCall_4_0()); }
	ruleFunctionsReturningNumerics{ after(grammarAccess.getArithmeticPrimaryAccess().getFunctionsReturningNumericsFunctionsReturningNumericsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticPrimary__AggregateExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticPrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_5_0()); }
	ruleAggregateExpression{ after(grammarAccess.getArithmeticPrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__StringPrimaryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getStringPrimaryStringPrimaryParserRuleCall_0_0()); }
	ruleStringPrimary{ after(grammarAccess.getStringExpressionAccess().getStringPrimaryStringPrimaryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__SubQueryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
	ruleSubQuery{ after(grammarAccess.getStringExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getStringPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__StringLiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPrimaryAccess().getStringLiteralStringLiteralParserRuleCall_1_0()); }
	ruleStringLiteral{ after(grammarAccess.getStringPrimaryAccess().getStringLiteralStringLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__InputParamaterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPrimaryAccess().getInputParamaterInputParameterParserRuleCall_2_0()); }
	ruleInputParameter{ after(grammarAccess.getStringPrimaryAccess().getInputParamaterInputParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__FunctionsReturningStringsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPrimaryAccess().getFunctionsReturningStringsFunctionsReturningStringsParserRuleCall_3_0()); }
	ruleFunctionsReturningStrings{ after(grammarAccess.getStringPrimaryAccess().getFunctionsReturningStringsFunctionsReturningStringsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__AggregateExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_4_0()); }
	ruleAggregateExpression{ after(grammarAccess.getStringPrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeExpression__DateTimePrimaryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimeExpressionAccess().getDateTimePrimaryDateTimePrimaryParserRuleCall_0_0()); }
	ruleDateTimePrimary{ after(grammarAccess.getDateTimeExpressionAccess().getDateTimePrimaryDateTimePrimaryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeExpression__SubQueryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimeExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
	ruleSubQuery{ after(grammarAccess.getDateTimeExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimePrimary__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimePrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getDateTimePrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimePrimary__InputParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimePrimaryAccess().getInputParameterInputParameterParserRuleCall_1_0()); }
	ruleInputParameter{ after(grammarAccess.getDateTimePrimaryAccess().getInputParameterInputParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimePrimary__FunctionsReturningDateTimeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimePrimaryAccess().getFunctionsReturningDateTimeFunctionsReturningDateTimeParserRuleCall_2_0()); }
	ruleFunctionsReturningDateTime{ after(grammarAccess.getDateTimePrimaryAccess().getFunctionsReturningDateTimeFunctionsReturningDateTimeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimePrimary__AggregateExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTimePrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_3_0()); }
	ruleAggregateExpression{ after(grammarAccess.getDateTimePrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__BooleanPrimaryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getBooleanPrimaryBooleanPrimaryParserRuleCall_0_0()); }
	ruleBooleanPrimary{ after(grammarAccess.getBooleanExpressionAccess().getBooleanPrimaryBooleanPrimaryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__SubQueryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
	ruleSubQuery{ after(grammarAccess.getBooleanExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrimary__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getBooleanPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrimary__BooleanLiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPrimaryAccess().getBooleanLiteralBooleanLiteralParserRuleCall_1_0()); }
	ruleBooleanLiteral{ after(grammarAccess.getBooleanPrimaryAccess().getBooleanLiteralBooleanLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrimary__InputParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPrimaryAccess().getInputParameterInputParameterParserRuleCall_2_0()); }
	ruleInputParameter{ after(grammarAccess.getBooleanPrimaryAccess().getInputParameterInputParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumExpression__EnumPrimaryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumExpressionAccess().getEnumPrimaryEnumPrimaryParserRuleCall_0_0()); }
	ruleEnumPrimary{ after(grammarAccess.getEnumExpressionAccess().getEnumPrimaryEnumPrimaryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumExpression__SubQueryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
	ruleSubQuery{ after(grammarAccess.getEnumExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumPrimary__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getEnumPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumPrimary__EnumLiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumPrimaryAccess().getEnumLiteralEnumLiteralParserRuleCall_1_0()); }
	ruleEnumLiteral{ after(grammarAccess.getEnumPrimaryAccess().getEnumLiteralEnumLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumPrimary__InputParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumPrimaryAccess().getInputParameterInputParameterParserRuleCall_2_0()); }
	ruleInputParameter{ after(grammarAccess.getEnumPrimaryAccess().getInputParameterInputParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getEntityExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__SimpleEntityExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityExpressionAccess().getSimpleEntityExpressionSimpleEntityExpressionParserRuleCall_1_0()); }
	ruleSimpleEntityExpression{ after(grammarAccess.getEntityExpressionAccess().getSimpleEntityExpressionSimpleEntityExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntityExpression__IdentificationVariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleEntityExpressionAccess().getIdentificationVariableIdentificationVariableParserRuleCall_0_0()); }
	ruleIdentificationVariable{ after(grammarAccess.getSimpleEntityExpressionAccess().getIdentificationVariableIdentificationVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntityExpression__InputParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleEntityExpressionAccess().getInputParameterInputParameterParserRuleCall_1_0()); }
	ruleInputParameter{ after(grammarAccess.getSimpleEntityExpressionAccess().getInputParameterInputParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__StringPrimaryAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryStringPrimaryParserRuleCall_0_1_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryStringPrimaryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__StringPrimaryAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryStringPrimaryParserRuleCall_1_1_0_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryStringPrimaryParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__StringSecondaryAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getStringSecondaryStringPrimaryParserRuleCall_1_1_2_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningNumericsAccess().getStringSecondaryStringPrimaryParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__SimpleArithmeticExpressionAssignment_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_3_1_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__SimpleArithmeticExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_2_1_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__SimpleArithmeticExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_3_1_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__PrimarySimpleArithmeticExpressionAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getPrimarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_4_1_0_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getFunctionsReturningNumericsAccess().getPrimarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__SecondarySimpleArithmeticExpressionAssignment_4_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getSecondarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_4_1_2_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getFunctionsReturningNumericsAccess().getSecondarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningNumerics__PathExpressionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningNumericsAccess().getPathExpressionJPAPathExpressionParserRuleCall_5_1_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getFunctionsReturningNumericsAccess().getPathExpressionJPAPathExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__PrimaryStringPrimaryAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getPrimaryStringPrimaryStringPrimaryParserRuleCall_0_1_0_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningStringsAccess().getPrimaryStringPrimaryStringPrimaryParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__SecondaryStringPrimaryAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getSecondaryStringPrimaryStringPrimaryParserRuleCall_0_1_2_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningStringsAccess().getSecondaryStringPrimaryStringPrimaryParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__StringPrimaryAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_1_1_0_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__PrimarySimpleArithmeticExpressionAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getPrimarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_2_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getFunctionsReturningStringsAccess().getPrimarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__SecondarySimpleArithmeticExpressionAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getSecondarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_4_0()); }
	ruleSimpleArithmeticExpression{ after(grammarAccess.getFunctionsReturningStringsAccess().getSecondarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__TrimSpecificationAssignment_2_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getTrimSpecificationTrimSpecificationParserRuleCall_2_1_0_0_0()); }
	ruleTrimSpecification{ after(grammarAccess.getFunctionsReturningStringsAccess().getTrimSpecificationTrimSpecificationParserRuleCall_2_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__TrimCharacterAssignment_2_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getTrimCharacterTrimCharacterParserRuleCall_2_1_0_1_0()); }
	ruleTrimCharacter{ after(grammarAccess.getFunctionsReturningStringsAccess().getTrimCharacterTrimCharacterParserRuleCall_2_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__StringPrimaryAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_2_1_1_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__StringPrimaryAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_3_1_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsReturningStrings__StringPrimaryAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_4_1_0()); }
	ruleStringPrimary{ after(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubQuery__SimpleSelectClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubQueryAccess().getSimpleSelectClauseSimpleSelectClauseParserRuleCall_0_0()); }
	ruleSimpleSelectClause{ after(grammarAccess.getSubQueryAccess().getSimpleSelectClauseSimpleSelectClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubQuery__SubqueryFromClauseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubQueryAccess().getSubqueryFromClauseSubqueryFromClauseParserRuleCall_1_0()); }
	ruleSubqueryFromClause{ after(grammarAccess.getSubQueryAccess().getSubqueryFromClauseSubqueryFromClauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubQuery__WhereClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubQueryAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); }
	ruleWhereClause{ after(grammarAccess.getSubQueryAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubqueryFromClause__SubselectIdentificationVariableDeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationSubselectIdentificationVariableDeclarationParserRuleCall_1_0()); }
	ruleSubselectIdentificationVariableDeclaration{ after(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationSubselectIdentificationVariableDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubqueryFromClause__SubselectIdentificationVariableDeclarationAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationSubselectIdentificationVariableDeclarationParserRuleCall_2_1_0()); }
	ruleSubselectIdentificationVariableDeclaration{ after(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationSubselectIdentificationVariableDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__IdentificationVariableDecalarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableDecalarationIdentificationVariableDeclarationParserRuleCall_0_0()); }
	ruleIdentificationVariableDeclaration{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableDecalarationIdentificationVariableDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__AssociationPathExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getAssociationPathExpressionJPAPathExpressionParserRuleCall_1_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getAssociationPathExpressionJPAPathExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__IdentificationVariableAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_1_2_0()); }
	ruleIdentificationVariable{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubselectIdentificationVariableDeclaration__CollectionMemberDeclarationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getCollectionMemberDeclarationCollectionMemberDeclarationParserRuleCall_2_0()); }
	ruleCollectionMemberDeclaration{ after(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getCollectionMemberDeclarationCollectionMemberDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectClause__SimpleSelectExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectClauseAccess().getSimpleSelectExpressionSimpleSelectExpressionParserRuleCall_2_0()); }
	ruleSimpleSelectExpression{ after(grammarAccess.getSimpleSelectClauseAccess().getSimpleSelectExpressionSimpleSelectExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectExpression__PathExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
	ruleJPAPathExpression{ after(grammarAccess.getSimpleSelectExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectExpression__AggregateExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectExpressionAccess().getAggregateExpressionAggregateExpressionParserRuleCall_1_0()); }
	ruleAggregateExpression{ after(grammarAccess.getSimpleSelectExpressionAccess().getAggregateExpressionAggregateExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectExpression__IdentificationVariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectExpressionAccess().getIdentificationVariableIdentificationVariableParserRuleCall_2_0()); }
	ruleIdentificationVariable{ after(grammarAccess.getSimpleSelectExpressionAccess().getIdentificationVariableIdentificationVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInputParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EscapeCharacter__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapeCharacterAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEscapeCharacterAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValue__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternValueAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getPatternValueAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__LiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getLiteralIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStringLiteralAccess().getLiteralIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericLiteralAccess().getLiteralINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getNumericLiteralAccess().getLiteralINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrimCharacter__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrimCharacterAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getTrimCharacterAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceImportNameSpaceParserRuleCall_1_0()); }
	ruleImportNameSpace{ after(grammarAccess.getImportAccess().getImportedNamespaceImportNameSpaceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_0_1_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); }
	ruleXAssignment{ after(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementOpMultiAssignParserRuleCall_1_1_0_0_1_0_1()); }
	ruleOpMultiAssign{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementOpMultiAssignParserRuleCall_1_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); }
	ruleXAssignment{ after(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementOpOrParserRuleCall_1_0_0_1_0_1()); }
	ruleOpOr{ after(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementOpOrParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
	ruleXAndExpression{ after(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementOpAndParserRuleCall_1_0_0_1_0_1()); }
	ruleOpAnd{ after(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementOpAndParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
	ruleXEqualityExpression{ after(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementOpEqualityParserRuleCall_1_0_0_1_0_1()); }
	ruleOpEquality{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementOpEqualityParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
	ruleXRelationalExpression{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__TypeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementOpCompareParserRuleCall_1_1_0_0_1_0_1()); }
	ruleOpCompare{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementOpCompareParserRuleCall_1_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
	ruleXOtherOperatorExpression{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementOpOtherParserRuleCall_1_0_0_1_0_1()); }
	ruleOpOther{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementOpOtherParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleXAdditiveExpression{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementOpAddParserRuleCall_1_0_0_1_0_1()); }
	ruleOpAdd{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementOpAddParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleXMultiplicativeExpression{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1()); }
	ruleOpMulti{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1()); }
	ruleOpUnary{ after(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__FeatureAssignment_1_0_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_0_0_0_2_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_0_0_0_2_0_1()); }
)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); }
	ruleXAssignment{ after(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }

	'?.' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__SpreadingAssignment_1_1_0_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getSpreadingAsteriskFullStopKeyword_1_1_0_0_1_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getSpreadingAsteriskFullStopKeyword_1_1_0_0_1_2_0()); }

	'*.' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getSpreadingAsteriskFullStopKeyword_1_1_0_0_1_2_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getSpreadingAsteriskFullStopKeyword_1_1_0_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__FeatureAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_1_2_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_1_2_0_1()); }
)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }

	'(' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); }
	ruleXClosure{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ExplicitSyntaxAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }

	'|' 

{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
	ruleXExpressionInClosure{ after(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); }
	ruleXExpressionInsideBlock{ after(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }

	'|' 

{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__LocalVarNameAssignment_2_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); }
	ruleValidID{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__LocalVarNameAssignment_2_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); }
	ruleValidID{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__CasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); }
	ruleXCasePart{ after(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__DefaultAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__TypeGuardAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__CaseAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__DeclaredParamAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__ForExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__EachExpressionAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); }
	ruleXExpression{ after(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__PredicateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__PredicateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__ExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); }
	ruleXExpressionInsideBlock{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__WriteableAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }

	'var' 

{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
)

{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__TypeAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__NameAssignment_2_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); }
	ruleValidID{ after(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); }
	ruleValidID{ after(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__RightAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); }
	ruleXExpression{ after(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__DeclaringTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getDeclaringTypeJvmDeclaredTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getXFeatureCallAccess().getDeclaringTypeJvmDeclaredTypeStaticQualifierParserRuleCall_1_0_1()); }
	ruleStaticQualifier{ after(grammarAccess.getXFeatureCallAccess().getDeclaringTypeJvmDeclaredTypeStaticQualifierParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getXFeatureCallAccess().getDeclaringTypeJvmDeclaredTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__TypeArgumentsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__TypeArgumentsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_3_0()); }
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_3_0_1()); }
	ruleIdOrSuper{ after(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__ExplicitOperationCallAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_4_0_0()); }
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_4_0_0()); }

	'(' 

{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_4_0_0()); }
)

{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_5_0()); }
	ruleXClosure{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ConstructorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); }
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__TypeArgumentsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__TypeArgumentsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); }
	ruleXClosure{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }

	'true' 

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
	ruleNumber{ after(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__ArrayDimensionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); }
	ruleArrayBrackets{ after(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); }
	ruleXCatchClause{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__DeclaredParamAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
	ruleFullJvmFormalParameter{ after(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); }
	ruleXExpression{ after(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); }
	ruleJvmUpperBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); }
	ruleJvmLowerBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XImportDeclaration__StaticAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }

	'static' 

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ExtensionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }

	'extension' 

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_0_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_0_2_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedNamespaceAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING : '`?' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '`?';

RULE_ORM_UNMANAGED_CONTENT : '<!-- ORM-UNMANAGED-CONTENT -->' ( options {greedy=false;} : . )*'<!-- /ORM-UNMANAGED-CONTENT -->';

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


