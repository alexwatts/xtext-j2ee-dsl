/*
* generated by Xtext
*/
grammar InternalJPADsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package jpadsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package jpadsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import jpadsl.services.JPADslGrammarAccess;

}

@parser::members {
 
 	private JPADslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(JPADslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
(rule__Model__ElementsAssignment)*
{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getGroup()); }
(rule__DataType__Group__0)
{ after(grammarAccess.getDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDatabaseMode
entryRuleDatabaseMode 
:
{ before(grammarAccess.getDatabaseModeRule()); }
	 ruleDatabaseMode
{ after(grammarAccess.getDatabaseModeRule()); } 
	 EOF 
;

// Rule DatabaseMode
ruleDatabaseMode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatabaseModeAccess().getGroup()); }
(rule__DatabaseMode__Group__0)
{ after(grammarAccess.getDatabaseModeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadOnly
entryRuleReadOnly 
:
{ before(grammarAccess.getReadOnlyRule()); }
	 ruleReadOnly
{ after(grammarAccess.getReadOnlyRule()); } 
	 EOF 
;

// Rule ReadOnly
ruleReadOnly
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadOnlyAccess().getGroup()); }
(rule__ReadOnly__Group__0)
{ after(grammarAccess.getReadOnlyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCacheable
entryRuleCacheable 
:
{ before(grammarAccess.getCacheableRule()); }
	 ruleCacheable
{ after(grammarAccess.getCacheableRule()); } 
	 EOF 
;

// Rule Cacheable
ruleCacheable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCacheableAccess().getGroup()); }
(rule__Cacheable__Group__0)
{ after(grammarAccess.getCacheableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierAccess().getAlternatives()); }
(rule__Identifier__Alternatives)
{ after(grammarAccess.getIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUniqueIdentiferColumn
entryRuleUniqueIdentiferColumn 
:
{ before(grammarAccess.getUniqueIdentiferColumnRule()); }
	 ruleUniqueIdentiferColumn
{ after(grammarAccess.getUniqueIdentiferColumnRule()); } 
	 EOF 
;

// Rule UniqueIdentiferColumn
ruleUniqueIdentiferColumn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUniqueIdentiferColumnAccess().getGroup()); }
(rule__UniqueIdentiferColumn__Group__0)
{ after(grammarAccess.getUniqueIdentiferColumnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbeddedUniqueIdentifer
entryRuleEmbeddedUniqueIdentifer 
:
{ before(grammarAccess.getEmbeddedUniqueIdentiferRule()); }
	 ruleEmbeddedUniqueIdentifer
{ after(grammarAccess.getEmbeddedUniqueIdentiferRule()); } 
	 EOF 
;

// Rule EmbeddedUniqueIdentifer
ruleEmbeddedUniqueIdentifer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbeddedUniqueIdentiferAccess().getGroup()); }
(rule__EmbeddedUniqueIdentifer__Group__0)
{ after(grammarAccess.getEmbeddedUniqueIdentiferAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructuralFeature
entryRuleStructuralFeature 
:
{ before(grammarAccess.getStructuralFeatureRule()); }
	 ruleStructuralFeature
{ after(grammarAccess.getStructuralFeatureRule()); } 
	 EOF 
;

// Rule StructuralFeature
ruleStructuralFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructuralFeatureAccess().getAlternatives()); }
(rule__StructuralFeature__Alternatives)
{ after(grammarAccess.getStructuralFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
(rule__Attribute__Alternatives)
{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticAttribute
entryRuleStaticAttribute 
:
{ before(grammarAccess.getStaticAttributeRule()); }
	 ruleStaticAttribute
{ after(grammarAccess.getStaticAttributeRule()); } 
	 EOF 
;

// Rule StaticAttribute
ruleStaticAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticAttributeAccess().getGroup()); }
(rule__StaticAttribute__Group__0)
{ after(grammarAccess.getStaticAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInternalAttribute
entryRuleInternalAttribute 
:
{ before(grammarAccess.getInternalAttributeRule()); }
	 ruleInternalAttribute
{ after(grammarAccess.getInternalAttributeRule()); } 
	 EOF 
;

// Rule InternalAttribute
ruleInternalAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInternalAttributeAccess().getAlternatives()); }
(rule__InternalAttribute__Alternatives)
{ after(grammarAccess.getInternalAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationshipAttribute
entryRuleRelationshipAttribute 
:
{ before(grammarAccess.getRelationshipAttributeRule()); }
	 ruleRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeRule()); } 
	 EOF 
;

// Rule RelationshipAttribute
ruleRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipAttributeAccess().getAlternatives()); }
(rule__RelationshipAttribute__Alternatives)
{ after(grammarAccess.getRelationshipAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadOnlyInternalAttribute
entryRuleReadOnlyInternalAttribute 
:
{ before(grammarAccess.getReadOnlyInternalAttributeRule()); }
	 ruleReadOnlyInternalAttribute
{ after(grammarAccess.getReadOnlyInternalAttributeRule()); } 
	 EOF 
;

// Rule ReadOnlyInternalAttribute
ruleReadOnlyInternalAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadOnlyInternalAttributeAccess().getGroup()); }
(rule__ReadOnlyInternalAttribute__Group__0)
{ after(grammarAccess.getReadOnlyInternalAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdatableInternalAttribute
entryRuleUpdatableInternalAttribute 
:
{ before(grammarAccess.getUpdatableInternalAttributeRule()); }
	 ruleUpdatableInternalAttribute
{ after(grammarAccess.getUpdatableInternalAttributeRule()); } 
	 EOF 
;

// Rule UpdatableInternalAttribute
ruleUpdatableInternalAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdatableInternalAttributeAccess().getGroup()); }
(rule__UpdatableInternalAttribute__Group__0)
{ after(grammarAccess.getUpdatableInternalAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransientAttribute
entryRuleTransientAttribute 
:
{ before(grammarAccess.getTransientAttributeRule()); }
	 ruleTransientAttribute
{ after(grammarAccess.getTransientAttributeRule()); } 
	 EOF 
;

// Rule TransientAttribute
ruleTransientAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransientAttributeAccess().getGroup()); }
(rule__TransientAttribute__Group__0)
{ after(grammarAccess.getTransientAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdAttribute
entryRuleIdAttribute 
:
{ before(grammarAccess.getIdAttributeRule()); }
	 ruleIdAttribute
{ after(grammarAccess.getIdAttributeRule()); } 
	 EOF 
;

// Rule IdAttribute
ruleIdAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdAttributeAccess().getGroup()); }
(rule__IdAttribute__Group__0)
{ after(grammarAccess.getIdAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneToOneRelationshipAttribute
entryRuleOneToOneRelationshipAttribute 
:
{ before(grammarAccess.getOneToOneRelationshipAttributeRule()); }
	 ruleOneToOneRelationshipAttribute
{ after(grammarAccess.getOneToOneRelationshipAttributeRule()); } 
	 EOF 
;

// Rule OneToOneRelationshipAttribute
ruleOneToOneRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getGroup()); }
(rule__OneToOneRelationshipAttribute__Group__0)
{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneToOneMappedByRelationshipAttribute
entryRuleOneToOneMappedByRelationshipAttribute 
:
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeRule()); }
	 ruleOneToOneMappedByRelationshipAttribute
{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeRule()); } 
	 EOF 
;

// Rule OneToOneMappedByRelationshipAttribute
ruleOneToOneMappedByRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getGroup()); }
(rule__OneToOneMappedByRelationshipAttribute__Group__0)
{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneToManyJoinTableRelationshipAttribute
entryRuleOneToManyJoinTableRelationshipAttribute 
:
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeRule()); }
	 ruleOneToManyJoinTableRelationshipAttribute
{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeRule()); } 
	 EOF 
;

// Rule OneToManyJoinTableRelationshipAttribute
ruleOneToManyJoinTableRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getGroup()); }
(rule__OneToManyJoinTableRelationshipAttribute__Group__0)
{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneToManyJoinColumnRelationshipAttribute
entryRuleOneToManyJoinColumnRelationshipAttribute 
:
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeRule()); }
	 ruleOneToManyJoinColumnRelationshipAttribute
{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeRule()); } 
	 EOF 
;

// Rule OneToManyJoinColumnRelationshipAttribute
ruleOneToManyJoinColumnRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getGroup()); }
(rule__OneToManyJoinColumnRelationshipAttribute__Group__0)
{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneToManyMappedByRelationshipAttribute
entryRuleOneToManyMappedByRelationshipAttribute 
:
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeRule()); }
	 ruleOneToManyMappedByRelationshipAttribute
{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeRule()); } 
	 EOF 
;

// Rule OneToManyMappedByRelationshipAttribute
ruleOneToManyMappedByRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getGroup()); }
(rule__OneToManyMappedByRelationshipAttribute__Group__0)
{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleManyToOneJoinColumnRelationShipAttribute
entryRuleManyToOneJoinColumnRelationShipAttribute 
:
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeRule()); }
	 ruleManyToOneJoinColumnRelationShipAttribute
{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeRule()); } 
	 EOF 
;

// Rule ManyToOneJoinColumnRelationShipAttribute
ruleManyToOneJoinColumnRelationShipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getGroup()); }
(rule__ManyToOneJoinColumnRelationShipAttribute__Group__0)
{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleManyToOneJoinTableRelationShipAttribute
entryRuleManyToOneJoinTableRelationShipAttribute 
:
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeRule()); }
	 ruleManyToOneJoinTableRelationShipAttribute
{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeRule()); } 
	 EOF 
;

// Rule ManyToOneJoinTableRelationShipAttribute
ruleManyToOneJoinTableRelationShipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getGroup()); }
(rule__ManyToOneJoinTableRelationShipAttribute__Group__0)
{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleManyToOneMappedByRelationShipAttribute
entryRuleManyToOneMappedByRelationShipAttribute 
:
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeRule()); }
	 ruleManyToOneMappedByRelationShipAttribute
{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeRule()); } 
	 EOF 
;

// Rule ManyToOneMappedByRelationShipAttribute
ruleManyToOneMappedByRelationShipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getGroup()); }
(rule__ManyToOneMappedByRelationShipAttribute__Group__0)
{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleManyToManyRelationshipAttribute
entryRuleManyToManyRelationshipAttribute 
:
{ before(grammarAccess.getManyToManyRelationshipAttributeRule()); }
	 ruleManyToManyRelationshipAttribute
{ after(grammarAccess.getManyToManyRelationshipAttributeRule()); } 
	 EOF 
;

// Rule ManyToManyRelationshipAttribute
ruleManyToManyRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getManyToManyRelationshipAttributeAccess().getGroup()); }
(rule__ManyToManyRelationshipAttribute__Group__0)
{ after(grammarAccess.getManyToManyRelationshipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleManyToManyMappedByRelationshipAttribute
entryRuleManyToManyMappedByRelationshipAttribute 
:
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeRule()); }
	 ruleManyToManyMappedByRelationshipAttribute
{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeRule()); } 
	 EOF 
;

// Rule ManyToManyMappedByRelationshipAttribute
ruleManyToManyMappedByRelationshipAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getGroup()); }
(rule__ManyToManyMappedByRelationshipAttribute__Group__0)
{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getGroup()); }
(rule__Reference__Group__0)
{ after(grammarAccess.getReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTypeRef
entryRuleTypeRef 
:
{ before(grammarAccess.getTypeRefRule()); }
	 ruleTypeRef
{ after(grammarAccess.getTypeRefRule()); } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRefAccess().getGroup()); }
(rule__TypeRef__Group__0)
{ after(grammarAccess.getTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
	rulePackageDeclaration
{ after(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_2()); }
	ruleImport
{ after(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getRelationshipAttributeParserRuleCall_3()); }
	ruleRelationshipAttribute
{ after(grammarAccess.getAbstractElementAccess().getRelationshipAttributeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getTypeAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1()); }
	ruleDataType
{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getUniqueIdentiferColumnParserRuleCall_0()); }
	ruleUniqueIdentiferColumn
{ after(grammarAccess.getIdentifierAccess().getUniqueIdentiferColumnParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getEmbeddedUniqueIdentiferParserRuleCall_1()); }
	ruleEmbeddedUniqueIdentifer
{ after(grammarAccess.getIdentifierAccess().getEmbeddedUniqueIdentiferParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getStructuralFeatureParserRuleCall_0()); }
	ruleStructuralFeature
{ after(grammarAccess.getFeatureAccess().getStructuralFeatureParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getOperationParserRuleCall_1()); }
	ruleOperation
{ after(grammarAccess.getFeatureAccess().getOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuralFeature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuralFeatureAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getStructuralFeatureAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStructuralFeatureAccess().getReferenceParserRuleCall_1()); }
	ruleReference
{ after(grammarAccess.getStructuralFeatureAccess().getReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getInternalAttributeParserRuleCall_0()); }
	ruleInternalAttribute
{ after(grammarAccess.getAttributeAccess().getInternalAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getRelationshipAttributeParserRuleCall_1()); }
	ruleRelationshipAttribute
{ after(grammarAccess.getAttributeAccess().getRelationshipAttributeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getStaticAttributeParserRuleCall_2()); }
	ruleStaticAttribute
{ after(grammarAccess.getAttributeAccess().getStaticAttributeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalAttributeAccess().getReadOnlyInternalAttributeParserRuleCall_0()); }
	ruleReadOnlyInternalAttribute
{ after(grammarAccess.getInternalAttributeAccess().getReadOnlyInternalAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInternalAttributeAccess().getUpdatableInternalAttributeParserRuleCall_1()); }
	ruleUpdatableInternalAttribute
{ after(grammarAccess.getInternalAttributeAccess().getUpdatableInternalAttributeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInternalAttributeAccess().getTransientAttributeParserRuleCall_2()); }
	ruleTransientAttribute
{ after(grammarAccess.getInternalAttributeAccess().getTransientAttributeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInternalAttributeAccess().getIdAttributeParserRuleCall_3()); }
	ruleIdAttribute
{ after(grammarAccess.getInternalAttributeAccess().getIdAttributeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAttributeAccess().getOneToOneRelationshipAttributeParserRuleCall_0()); }
	ruleOneToOneRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getOneToOneRelationshipAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getOneToOneMappedByRelationshipAttributeParserRuleCall_1()); }
	ruleOneToOneMappedByRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getOneToOneMappedByRelationshipAttributeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getOneToManyJoinTableRelationshipAttributeParserRuleCall_2()); }
	ruleOneToManyJoinTableRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getOneToManyJoinTableRelationshipAttributeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getOneToManyMappedByRelationshipAttributeParserRuleCall_3()); }
	ruleOneToManyMappedByRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getOneToManyMappedByRelationshipAttributeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getManyToOneJoinColumnRelationShipAttributeParserRuleCall_4()); }
	ruleManyToOneJoinColumnRelationShipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getManyToOneJoinColumnRelationShipAttributeParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getManyToOneJoinTableRelationShipAttributeParserRuleCall_5()); }
	ruleManyToOneJoinTableRelationShipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getManyToOneJoinTableRelationShipAttributeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getManyToOneMappedByRelationShipAttributeParserRuleCall_6()); }
	ruleManyToOneMappedByRelationShipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getManyToOneMappedByRelationShipAttributeParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getManyToManyRelationshipAttributeParserRuleCall_7()); }
	ruleManyToManyRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getManyToManyRelationshipAttributeParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getManyToManyMappedByRelationshipAttributeParserRuleCall_8()); }
	ruleManyToManyMappedByRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getManyToManyMappedByRelationshipAttributeParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getRelationshipAttributeAccess().getOneToManyJoinColumnRelationshipAttributeParserRuleCall_9()); }
	ruleOneToManyJoinColumnRelationshipAttribute
{ after(grammarAccess.getRelationshipAttributeAccess().getOneToManyJoinColumnRelationshipAttributeParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2()); }
(	'protected' 
)
{ after(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getDatabaseModesAssignment_3()); }
(rule__PackageDeclaration__DatabaseModesAssignment_3)*
{ after(grammarAccess.getPackageDeclarationAccess().getDatabaseModesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__4__Impl
	rule__PackageDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_4()); }
(rule__PackageDeclaration__ElementsAssignment_4)*
{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }

	'datatype' 

{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
(rule__DataType__NameAssignment_1)
{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DatabaseMode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseMode__Group__0__Impl
	rule__DatabaseMode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseMode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseModeAccess().getDatabaseModeKeyword_0()); }

	'databaseMode' 

{ after(grammarAccess.getDatabaseModeAccess().getDatabaseModeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseMode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseMode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseMode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseModeAccess().getNameAssignment_1()); }
(rule__DatabaseMode__NameAssignment_1)
{ after(grammarAccess.getDatabaseModeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDatabaseVendorAssignment_2()); }
(rule__Entity__DatabaseVendorAssignment_2)?
{ after(grammarAccess.getEntityAccess().getDatabaseVendorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_3()); }
(rule__Entity__Group_3__0)?
{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getReadOnlyAssignment_4()); }
(rule__Entity__ReadOnlyAssignment_4)?
{ after(grammarAccess.getEntityAccess().getReadOnlyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getCacheableAssignment_5()); }
(rule__Entity__CacheableAssignment_5)?
{ after(grammarAccess.getEntityAccess().getCacheableAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__7__Impl
	rule__Entity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getIdentifierAssignment_7()); }
(rule__Entity__IdentifierAssignment_7)
{ after(grammarAccess.getEntityAccess().getIdentifierAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__8__Impl
	rule__Entity__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getImportsAssignment_8()); }
(rule__Entity__ImportsAssignment_8)*
{ after(grammarAccess.getEntityAccess().getImportsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__9__Impl
	rule__Entity__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_9()); }
(rule__Entity__FeaturesAssignment_9)*
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Entity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getEntityAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_3_1()); }
(rule__Entity__SuperTypeAssignment_3_1)
{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReadOnly__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadOnly__Group__0__Impl
	rule__ReadOnly__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnly__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyAccess().getReadOnlyKeyword_0()); }

	'read only' 

{ after(grammarAccess.getReadOnlyAccess().getReadOnlyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadOnly__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadOnly__Group__1__Impl
	rule__ReadOnly__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnly__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyAccess().getTableNameAssignment_1()); }
(rule__ReadOnly__TableNameAssignment_1)
{ after(grammarAccess.getReadOnlyAccess().getTableNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadOnly__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadOnly__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnly__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyAccess().getIdColumnAssignment_2()); }
(rule__ReadOnly__IdColumnAssignment_2)
{ after(grammarAccess.getReadOnlyAccess().getIdColumnAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cacheable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cacheable__Group__0__Impl
	rule__Cacheable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cacheable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheableAccess().getCacheableKeyword_0()); }

	'cacheable' 

{ after(grammarAccess.getCacheableAccess().getCacheableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cacheable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cacheable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cacheable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheableAccess().getCacheableAction_1()); }
(

)
{ after(grammarAccess.getCacheableAccess().getCacheableAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UniqueIdentiferColumn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueIdentiferColumn__Group__0__Impl
	rule__UniqueIdentiferColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueIdentiferColumn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueIdentiferColumnAccess().getUniqueIdKeyword_0()); }

	'unique id' 

{ after(grammarAccess.getUniqueIdentiferColumnAccess().getUniqueIdKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniqueIdentiferColumn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueIdentiferColumn__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueIdentiferColumn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueIdentiferColumnAccess().getNameAssignment_1()); }
(rule__UniqueIdentiferColumn__NameAssignment_1)
{ after(grammarAccess.getUniqueIdentiferColumnAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmbeddedUniqueIdentifer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedUniqueIdentifer__Group__0__Impl
	rule__EmbeddedUniqueIdentifer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedUniqueIdentifer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedUniqueIdentiferAccess().getEmbeddedIdKeyword_0()); }

	'embedded id' 

{ after(grammarAccess.getEmbeddedUniqueIdentiferAccess().getEmbeddedIdKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedUniqueIdentifer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedUniqueIdentifer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedUniqueIdentifer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedUniqueIdentiferAccess().getNameAssignment_1()); }
(rule__EmbeddedUniqueIdentifer__NameAssignment_1)
{ after(grammarAccess.getEmbeddedUniqueIdentiferAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAttribute__Group__0__Impl
	rule__StaticAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAttributeAccess().getStaticAttributeKeyword_0()); }

	'staticAttribute' 

{ after(grammarAccess.getStaticAttributeAccess().getStaticAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAttribute__Group__1__Impl
	rule__StaticAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAttributeAccess().getNameAssignment_1()); }
(rule__StaticAttribute__NameAssignment_1)
{ after(grammarAccess.getStaticAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAttribute__Group__2__Impl
	rule__StaticAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getStaticAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAttributeAccess().getTypeAssignment_3()); }
(rule__StaticAttribute__TypeAssignment_3)
{ after(grammarAccess.getStaticAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReadOnlyInternalAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadOnlyInternalAttribute__Group__0__Impl
	rule__ReadOnlyInternalAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnlyInternalAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyInternalAttributeAccess().getNameAssignment_0()); }
(rule__ReadOnlyInternalAttribute__NameAssignment_0)
{ after(grammarAccess.getReadOnlyInternalAttributeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadOnlyInternalAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadOnlyInternalAttribute__Group__1__Impl
	rule__ReadOnlyInternalAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnlyInternalAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyInternalAttributeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getReadOnlyInternalAttributeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadOnlyInternalAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadOnlyInternalAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnlyInternalAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyInternalAttributeAccess().getTypeAssignment_2()); }
(rule__ReadOnlyInternalAttribute__TypeAssignment_2)
{ after(grammarAccess.getReadOnlyInternalAttributeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UpdatableInternalAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdatableInternalAttribute__Group__0__Impl
	rule__UpdatableInternalAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdatableInternalAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdatableInternalAttributeAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getUpdatableInternalAttributeAccess().getAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdatableInternalAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdatableInternalAttribute__Group__1__Impl
	rule__UpdatableInternalAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdatableInternalAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdatableInternalAttributeAccess().getNameAssignment_1()); }
(rule__UpdatableInternalAttribute__NameAssignment_1)
{ after(grammarAccess.getUpdatableInternalAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdatableInternalAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdatableInternalAttribute__Group__2__Impl
	rule__UpdatableInternalAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdatableInternalAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdatableInternalAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getUpdatableInternalAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdatableInternalAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdatableInternalAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdatableInternalAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdatableInternalAttributeAccess().getTypeAssignment_3()); }
(rule__UpdatableInternalAttribute__TypeAssignment_3)
{ after(grammarAccess.getUpdatableInternalAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TransientAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransientAttribute__Group__0__Impl
	rule__TransientAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransientAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransientAttributeAccess().getTransientKeyword_0()); }

	'transient' 

{ after(grammarAccess.getTransientAttributeAccess().getTransientKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransientAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransientAttribute__Group__1__Impl
	rule__TransientAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransientAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransientAttributeAccess().getNameAssignment_1()); }
(rule__TransientAttribute__NameAssignment_1)
{ after(grammarAccess.getTransientAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransientAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransientAttribute__Group__2__Impl
	rule__TransientAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransientAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransientAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getTransientAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransientAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransientAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransientAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransientAttributeAccess().getTypeAssignment_3()); }
(rule__TransientAttribute__TypeAssignment_3)
{ after(grammarAccess.getTransientAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IdAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdAttribute__Group__0__Impl
	rule__IdAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeAccess().getIdAttributeKeyword_0()); }

	'id attribute' 

{ after(grammarAccess.getIdAttributeAccess().getIdAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdAttribute__Group__1__Impl
	rule__IdAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeAccess().getNameAssignment_1()); }
(rule__IdAttribute__NameAssignment_1)
{ after(grammarAccess.getIdAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdAttribute__Group__2__Impl
	rule__IdAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getIdAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeAccess().getTypeAssignment_3()); }
(rule__IdAttribute__TypeAssignment_3)
{ after(grammarAccess.getIdAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OneToOneRelationshipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneRelationshipAttribute__Group__0__Impl
	rule__OneToOneRelationshipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getOneToOneJoinColumnKeyword_0()); }

	'one to one join column' 

{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getOneToOneJoinColumnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToOneRelationshipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneRelationshipAttribute__Group__1__Impl
	rule__OneToOneRelationshipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getNameAssignment_1()); }
(rule__OneToOneRelationshipAttribute__NameAssignment_1)
{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToOneRelationshipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneRelationshipAttribute__Group__2__Impl
	rule__OneToOneRelationshipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToOneRelationshipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneRelationshipAttribute__Group__3__Impl
	rule__OneToOneRelationshipAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getTypeAssignment_3()); }
(rule__OneToOneRelationshipAttribute__TypeAssignment_3)
{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToOneRelationshipAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneRelationshipAttribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getJoinColumnOverrideAssignment_4()); }
(rule__OneToOneRelationshipAttribute__JoinColumnOverrideAssignment_4)?
{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getJoinColumnOverrideAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OneToOneMappedByRelationshipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneMappedByRelationshipAttribute__Group__0__Impl
	rule__OneToOneMappedByRelationshipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneMappedByRelationshipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getOneToOneMappedByKeyword_0()); }

	'one to one mapped by' 

{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getOneToOneMappedByKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToOneMappedByRelationshipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneMappedByRelationshipAttribute__Group__1__Impl
	rule__OneToOneMappedByRelationshipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneMappedByRelationshipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getNameAssignment_1()); }
(rule__OneToOneMappedByRelationshipAttribute__NameAssignment_1)
{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToOneMappedByRelationshipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneMappedByRelationshipAttribute__Group__2__Impl
	rule__OneToOneMappedByRelationshipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneMappedByRelationshipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToOneMappedByRelationshipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToOneMappedByRelationshipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneMappedByRelationshipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getTypeAssignment_3()); }
(rule__OneToOneMappedByRelationshipAttribute__TypeAssignment_3)
{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OneToManyJoinTableRelationshipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinTableRelationshipAttribute__Group__0__Impl
	rule__OneToManyJoinTableRelationshipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinTableRelationshipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getOneToManyUsingJoinTableKeyword_0()); }

	'one to many using join table' 

{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getOneToManyUsingJoinTableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyJoinTableRelationshipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinTableRelationshipAttribute__Group__1__Impl
	rule__OneToManyJoinTableRelationshipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinTableRelationshipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getNameAssignment_1()); }
(rule__OneToManyJoinTableRelationshipAttribute__NameAssignment_1)
{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyJoinTableRelationshipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinTableRelationshipAttribute__Group__2__Impl
	rule__OneToManyJoinTableRelationshipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinTableRelationshipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyJoinTableRelationshipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinTableRelationshipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinTableRelationshipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getTypeAssignment_3()); }
(rule__OneToManyJoinTableRelationshipAttribute__TypeAssignment_3)
{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OneToManyJoinColumnRelationshipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinColumnRelationshipAttribute__Group__0__Impl
	rule__OneToManyJoinColumnRelationshipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinColumnRelationshipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getOneToManyUsingJoinColumnKeyword_0()); }

	'one to many using join column' 

{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getOneToManyUsingJoinColumnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyJoinColumnRelationshipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinColumnRelationshipAttribute__Group__1__Impl
	rule__OneToManyJoinColumnRelationshipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinColumnRelationshipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getNameAssignment_1()); }
(rule__OneToManyJoinColumnRelationshipAttribute__NameAssignment_1)
{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyJoinColumnRelationshipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinColumnRelationshipAttribute__Group__2__Impl
	rule__OneToManyJoinColumnRelationshipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinColumnRelationshipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyJoinColumnRelationshipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyJoinColumnRelationshipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinColumnRelationshipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getTypeAssignment_3()); }
(rule__OneToManyJoinColumnRelationshipAttribute__TypeAssignment_3)
{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OneToManyMappedByRelationshipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyMappedByRelationshipAttribute__Group__0__Impl
	rule__OneToManyMappedByRelationshipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyMappedByRelationshipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getOneToManyMappedByKeyword_0()); }

	'one to many mapped by' 

{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getOneToManyMappedByKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyMappedByRelationshipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyMappedByRelationshipAttribute__Group__1__Impl
	rule__OneToManyMappedByRelationshipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyMappedByRelationshipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getNameAssignment_1()); }
(rule__OneToManyMappedByRelationshipAttribute__NameAssignment_1)
{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyMappedByRelationshipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyMappedByRelationshipAttribute__Group__2__Impl
	rule__OneToManyMappedByRelationshipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyMappedByRelationshipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneToManyMappedByRelationshipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneToManyMappedByRelationshipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyMappedByRelationshipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getTypeAssignment_3()); }
(rule__OneToManyMappedByRelationshipAttribute__TypeAssignment_3)
{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ManyToOneJoinColumnRelationShipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__0__Impl
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getManyToOneUsingJoinColumnKeyword_0()); }

	'many to one using join column' 

{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getManyToOneUsingJoinColumnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneJoinColumnRelationShipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__1__Impl
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getNameAssignment_1()); }
(rule__ManyToOneJoinColumnRelationShipAttribute__NameAssignment_1)
{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneJoinColumnRelationShipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__2__Impl
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneJoinColumnRelationShipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__3__Impl
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getTypeAssignment_3()); }
(rule__ManyToOneJoinColumnRelationShipAttribute__TypeAssignment_3)
{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneJoinColumnRelationShipAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinColumnRelationShipAttribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getJoinColumnOverrideAssignment_4()); }
(rule__ManyToOneJoinColumnRelationShipAttribute__JoinColumnOverrideAssignment_4)?
{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getJoinColumnOverrideAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ManyToOneJoinTableRelationShipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinTableRelationShipAttribute__Group__0__Impl
	rule__ManyToOneJoinTableRelationShipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinTableRelationShipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getManyToOneUsingJoinTableKeyword_0()); }

	'many to one using join table' 

{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getManyToOneUsingJoinTableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneJoinTableRelationShipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinTableRelationShipAttribute__Group__1__Impl
	rule__ManyToOneJoinTableRelationShipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinTableRelationShipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getNameAssignment_1()); }
(rule__ManyToOneJoinTableRelationShipAttribute__NameAssignment_1)
{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneJoinTableRelationShipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinTableRelationShipAttribute__Group__2__Impl
	rule__ManyToOneJoinTableRelationShipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinTableRelationShipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneJoinTableRelationShipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneJoinTableRelationShipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinTableRelationShipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getTypeAssignment_3()); }
(rule__ManyToOneJoinTableRelationShipAttribute__TypeAssignment_3)
{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ManyToOneMappedByRelationShipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneMappedByRelationShipAttribute__Group__0__Impl
	rule__ManyToOneMappedByRelationShipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneMappedByRelationShipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getManyToOneMappedByKeyword_0()); }

	'many to one mapped by' 

{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getManyToOneMappedByKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneMappedByRelationShipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneMappedByRelationShipAttribute__Group__1__Impl
	rule__ManyToOneMappedByRelationShipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneMappedByRelationShipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getNameAssignment_1()); }
(rule__ManyToOneMappedByRelationShipAttribute__NameAssignment_1)
{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneMappedByRelationShipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneMappedByRelationShipAttribute__Group__2__Impl
	rule__ManyToOneMappedByRelationShipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneMappedByRelationShipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToOneMappedByRelationShipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToOneMappedByRelationShipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneMappedByRelationShipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getTypeAssignment_3()); }
(rule__ManyToOneMappedByRelationShipAttribute__TypeAssignment_3)
{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ManyToManyRelationshipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyRelationshipAttribute__Group__0__Impl
	rule__ManyToManyRelationshipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyRelationshipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyRelationshipAttributeAccess().getManyToManyJoinTableKeyword_0()); }

	'many to many join table' 

{ after(grammarAccess.getManyToManyRelationshipAttributeAccess().getManyToManyJoinTableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToManyRelationshipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyRelationshipAttribute__Group__1__Impl
	rule__ManyToManyRelationshipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyRelationshipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyRelationshipAttributeAccess().getNameAssignment_1()); }
(rule__ManyToManyRelationshipAttribute__NameAssignment_1)
{ after(grammarAccess.getManyToManyRelationshipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToManyRelationshipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyRelationshipAttribute__Group__2__Impl
	rule__ManyToManyRelationshipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyRelationshipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyRelationshipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getManyToManyRelationshipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToManyRelationshipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyRelationshipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyRelationshipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyRelationshipAttributeAccess().getTypeAssignment_3()); }
(rule__ManyToManyRelationshipAttribute__TypeAssignment_3)
{ after(grammarAccess.getManyToManyRelationshipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ManyToManyMappedByRelationshipAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyMappedByRelationshipAttribute__Group__0__Impl
	rule__ManyToManyMappedByRelationshipAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyMappedByRelationshipAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getManyToManyMappedByKeyword_0()); }

	'many to many mapped by' 

{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getManyToManyMappedByKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToManyMappedByRelationshipAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyMappedByRelationshipAttribute__Group__1__Impl
	rule__ManyToManyMappedByRelationshipAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyMappedByRelationshipAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getNameAssignment_1()); }
(rule__ManyToManyMappedByRelationshipAttribute__NameAssignment_1)
{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToManyMappedByRelationshipAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyMappedByRelationshipAttribute__Group__2__Impl
	rule__ManyToManyMappedByRelationshipAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyMappedByRelationshipAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ManyToManyMappedByRelationshipAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ManyToManyMappedByRelationshipAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyMappedByRelationshipAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getTypeAssignment_3()); }
(rule__ManyToManyMappedByRelationshipAttribute__TypeAssignment_3)
{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefKeyword_0()); }

	'ref' 

{ after(grammarAccess.getReferenceAccess().getRefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
(rule__Reference__NameAssignment_1)
{ after(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getReferenceAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__3__Impl
	rule__Reference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getTypeAssignment_3()); }
(rule__Reference__TypeAssignment_3)
{ after(grammarAccess.getReferenceAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getGroup_4()); }
(rule__Reference__Group_4__0)?
{ after(grammarAccess.getReferenceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Reference__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4__0__Impl
	rule__Reference__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getOppositeKeyword_4_0()); }

	'opposite' 

{ after(grammarAccess.getReferenceAccess().getOppositeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getOppositeAssignment_4_1()); }
(rule__Reference__OppositeAssignment_4_1)
{ after(grammarAccess.getReferenceAccess().getOppositeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getVisibilityAssignment_0()); }
(rule__Operation__VisibilityAssignment_0)?
{ after(grammarAccess.getOperationAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOpKeyword_1()); }

	'op' 

{ after(grammarAccess.getOperationAccess().getOpKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_2()); }
(rule__Operation__NameAssignment_2)
{ after(grammarAccess.getOperationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_4()); }
(rule__Operation__Group_4__0)?
{ after(grammarAccess.getOperationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__6__Impl
	rule__Operation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getOperationAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeAssignment_7()); }
(rule__Operation__TypeAssignment_7)
{ after(grammarAccess.getOperationAccess().getTypeAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Operation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__0__Impl
	rule__Operation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsAssignment_4_0()); }
(rule__Operation__ParamsAssignment_4_0)
{ after(grammarAccess.getOperationAccess().getParamsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_4_1()); }
(rule__Operation__Group_4_1__0)*
{ after(grammarAccess.getOperationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4_1__0__Impl
	rule__Operation__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getOperationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsAssignment_4_1_1()); }
(rule__Operation__ParamsAssignment_4_1_1)
{ after(grammarAccess.getOperationAccess().getParamsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
(rule__Parameter__NameAssignment_0)
{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
(rule__Parameter__TypeAssignment_1)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRef__Group__0__Impl
	rule__TypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getReferencedAssignment_0()); }
(rule__TypeRef__ReferencedAssignment_0)
{ after(grammarAccess.getTypeRefAccess().getReferencedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getMultiAssignment_1()); }
(rule__TypeRef__MultiAssignment_1)?
{ after(grammarAccess.getTypeRefAccess().getMultiAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_0()); }
	ruleAbstractElement{ after(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__DatabaseModesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getDatabaseModesDatabaseModeParserRuleCall_3_0()); }
	ruleDatabaseMode{ after(grammarAccess.getPackageDeclarationAccess().getDatabaseModesDatabaseModeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_4_0()); }
	ruleAbstractElement{ after(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseMode__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseModeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDatabaseModeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__DatabaseVendorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDatabaseVendorDatabaseModeCrossReference_2_0()); }
(
{ before(grammarAccess.getEntityAccess().getDatabaseVendorDatabaseModeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getDatabaseVendorDatabaseModeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getDatabaseVendorDatabaseModeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_3_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ReadOnlyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getReadOnlyReadOnlyParserRuleCall_4_0()); }
	ruleReadOnly{ after(grammarAccess.getEntityAccess().getReadOnlyReadOnlyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__CacheableAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getCacheableCacheableParserRuleCall_5_0()); }
	ruleCacheable{ after(grammarAccess.getEntityAccess().getCacheableCacheableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__IdentifierAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getIdentifierIdentifierParserRuleCall_7_0()); }
	ruleIdentifier{ after(grammarAccess.getEntityAccess().getIdentifierIdentifierParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ImportsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getImportsImportParserRuleCall_8_0()); }
	ruleImport{ after(grammarAccess.getEntityAccess().getImportsImportParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_9_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnly__TableNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyAccess().getTableNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getReadOnlyAccess().getTableNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnly__IdColumnAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyAccess().getIdColumnSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getReadOnlyAccess().getIdColumnSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueIdentiferColumn__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueIdentiferColumnAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUniqueIdentiferColumnAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedUniqueIdentifer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedUniqueIdentiferAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEmbeddedUniqueIdentiferAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStaticAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getStaticAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnlyInternalAttribute__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyInternalAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getReadOnlyInternalAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadOnlyInternalAttribute__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadOnlyInternalAttributeAccess().getTypeTypeRefParserRuleCall_2_0()); }
	ruleTypeRef{ after(grammarAccess.getReadOnlyInternalAttributeAccess().getTypeTypeRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdatableInternalAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdatableInternalAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUpdatableInternalAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdatableInternalAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdatableInternalAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getUpdatableInternalAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransientAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransientAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTransientAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransientAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransientAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getTransientAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIdAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getIdAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneRelationshipAttribute__JoinColumnOverrideAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneRelationshipAttributeAccess().getJoinColumnOverrideSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getOneToOneRelationshipAttributeAccess().getJoinColumnOverrideSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneMappedByRelationshipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToOneMappedByRelationshipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinTableRelationshipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinTableRelationshipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinColumnRelationshipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyJoinColumnRelationshipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyMappedByRelationshipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneToManyMappedByRelationshipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinColumnRelationShipAttribute__JoinColumnOverrideAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getJoinColumnOverrideSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getJoinColumnOverrideSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinTableRelationShipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneJoinTableRelationShipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneMappedByRelationShipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToOneMappedByRelationShipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyRelationshipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getManyToManyRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyRelationshipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getManyToManyRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyMappedByRelationshipAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ManyToManyMappedByRelationshipAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getReferenceAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__OppositeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getOppositeReferenceCrossReference_4_1_0()); }
(
{ before(grammarAccess.getReferenceAccess().getOppositeReferenceIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getOppositeReferenceIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getOppositeReferenceCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getOperationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParamsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsParameterParserRuleCall_4_0_0()); }
	ruleParameter{ after(grammarAccess.getOperationAccess().getParamsParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParamsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsParameterParserRuleCall_4_1_1_0()); }
	ruleParameter{ after(grammarAccess.getOperationAccess().getParamsParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__TypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeTypeRefParserRuleCall_7_0()); }
	ruleTypeRef{ after(grammarAccess.getOperationAccess().getTypeTypeRefParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeRefParserRuleCall_1_0()); }
	ruleTypeRef{ after(grammarAccess.getParameterAccess().getTypeTypeRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__ReferencedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getReferencedTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getTypeRefAccess().getReferencedTypeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeRefAccess().getReferencedTypeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTypeRefAccess().getReferencedTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__MultiAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }
(
{ before(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }

	'*' 

{ after(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }
)

{ after(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


